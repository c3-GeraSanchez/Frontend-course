"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlDynamicValueSpec_ts_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/UiSdlDynamicValueSpec.ts_uiInfrastructure":
/*!******************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlDynamicValueSpec.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DYNAMIC_VALUE_REGEX: () => (/* binding */ DYNAMIC_VALUE_REGEX),\n/* harmony export */   DYNAMIC_VALUE_REGEX_NO_$: () => (/* binding */ DYNAMIC_VALUE_REGEX_NO_$),\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   addQuotesToResolvedContextVar: () => (/* binding */ addQuotesToResolvedContextVar),\n/* harmony export */   convertReactIntlToContextVarSyntax: () => (/* binding */ convertReactIntlToContextVarSyntax),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   extractParamValue: () => (/* binding */ extractParamValue),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isContextVarAnArrayElement: () => (/* binding */ isContextVarAnArrayElement),\n/* harmony export */   recursivelyReplacePageParams: () => (/* binding */ recursivelyReplacePageParams),\n/* harmony export */   recursivelyResolveContent: () => (/* binding */ recursivelyResolveContent),\n/* harmony export */   recursivelyResolveStringContent: () => (/* binding */ recursivelyResolveStringContent),\n/* harmony export */   replaceVariablesInDynamicValue: () => (/* binding */ replaceVariablesInDynamicValue),\n/* harmony export */   resolve: () => (/* binding */ resolve),\n/* harmony export */   resolveValueByValueType: () => (/* binding */ resolveValueByValueType),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var lodash_reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/reduce */ \"webpack/sharing/consume/default/lodash/reduce/lodash/reduce_uiInfrastructure\");\n/* harmony import */ var lodash_reduce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_reduce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isArray */ \"webpack/sharing/consume/default/lodash/isArray/lodash/isArray_uiInfrastructure\");\n/* harmony import */ var lodash_isArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isArray__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isEmpty */ \"webpack/sharing/consume/default/lodash/isEmpty/lodash/isEmpty_uiInfrastructure\");\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isString */ \"webpack/sharing/consume/default/lodash/isString/lodash/isString_uiInfrastructure\");\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/map */ \"webpack/sharing/consume/default/lodash/map/lodash/map_uiInfrastructure\");\n/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_map__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lodash_isDate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/isDate */ \"webpack/sharing/consume/default/lodash/isDate/lodash/isDate_uiInfrastructure\");\n/* harmony import */ var lodash_isDate__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_isDate__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/isObject */ \"webpack/sharing/consume/default/lodash/isObject/lodash/isObject_uiInfrastructure\");\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/isPlainObject */ \"webpack/sharing/consume/default/lodash/isPlainObject/lodash/isPlainObject_uiInfrastructure\");\n/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/isUndefined */ \"webpack/sharing/consume/default/lodash/isUndefined/lodash/isUndefined_uiInfrastructure\");\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_isUndefined__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/each */ \"webpack/sharing/consume/default/lodash/each/lodash/each_uiInfrastructure\");\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_each__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _c3_ui_UiSdlDefinedValueParam__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @c3/ui/UiSdlDefinedValueParam */ \"webpack/container/remote/@c3/ui/UiSdlDefinedValueParam_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlDefinedValueParam__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDefinedValueParam__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _c3_ui_types_pluggables_dynamicValueSpec__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @c3/ui/types/pluggables/dynamicValueSpec */ \"webpack/sharing/consume/default/@c3/ui/types/pluggables/dynamicValueSpec/@c3/ui/types/pluggables/dynamicValueSpec_uiInfrastructure\");\n/* harmony import */ var _c3_ui_types_pluggables_dynamicValueSpec__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_types_pluggables_dynamicValueSpec__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @c3/ui/WithDataTransforms */ \"webpack/sharing/consume/default/@c3/ui/WithDataTransforms_uiInfrastructure\");\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _c3_ui_UiSdlDynamicValueSpecParam__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @c3/ui/UiSdlDynamicValueSpecParam */ \"webpack/container/remote/@c3/ui/UiSdlDynamicValueSpecParam_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlDynamicValueSpecParam__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDynamicValueSpecParam__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _c3_ui_UiSdlHelpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @c3/ui/UiSdlHelpers */ \"webpack/container/remote/@c3/ui/UiSdlHelpers_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlHelpers__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlHelpers__WEBPACK_IMPORTED_MODULE_14__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable import/exports-last */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nfunction extractParamValue(param, context) {\n  const paramTypeName = param === null || param === void 0 ? void 0 : param.type;\n  const paramType = paramTypeName ? _get__(\"dynamicValueSpecParamMap\")[paramTypeName] : _get__(\"UiSdlDefinedValueParam\");\n  if (!paramType) throw new Error(`Param spec type ${paramTypeName} is not recognized`);\n  if (paramTypeName === 'UiSdlDynamicValueSpecParam') throw new Error(`Cannot extract param value from UiSdlDynamicValueSpecParam (abstract type)`);\n\n  // @ts-expect-error TODO: ENGR-10369 Enhance typescript types generation to include methods\n  const extractedValue = paramType.extract.call(null, param, context);\n  var transformationContext = {\n    ...context,\n    content: extractedValue\n  };\n  return _get__(\"applyDataTransforms\")(param.dataTransforms || [], extractedValue, transformationContext);\n}\nfunction fromString(specString) {\n  return {\n    dynamicValue: specString\n  };\n}\nfunction toString(dynamicValueSpec) {\n  return String(dynamicValueSpec.dynamicValue);\n}\nfunction resolve(dynamicValueSpec, extractionContext, callback) {\n  const variables = _get__(\"reduce\")(dynamicValueSpec === null || dynamicValueSpec === void 0 ? void 0 : dynamicValueSpec.vars, (variables, paramSpec, variableKey) => {\n    // Convert non-objects to dynamic value spec params.\n    const param = typeof paramSpec !== 'object' ? _get__(\"parseDynamicValueSpecParam\")(paramSpec) : paramSpec;\n    let varValue = _get__(\"extractParamValue\")(param, extractionContext);\n\n    // Recursively resolve the variable\n    if (_get__(\"isPlainObject\")(varValue) && !_get__(\"isUndefined\")(varValue)) {\n      varValue = _get__(\"resolve\")(varValue, extractionContext, callback);\n    }\n    variables[variableKey] = {\n      value: varValue,\n      format: param.format,\n      valueType: param.valueType\n    };\n    return variables;\n  }, {});\n\n  // 'variables' will be map from variableKey to {value: resolvedValue, format: paramFormat}\n  return callback(dynamicValueSpec, variables);\n}\nfunction recursivelyResolveContent(value, context) {\n  if (Object.prototype.hasOwnProperty.call(value, 'type') && _get__(\"isString\")(value.type)) {\n    const paramValue = _get__(\"extractParamValue\")(value, context);\n    if (_get__(\"dynamicValueSpecParamMap\")[paramValue === null || paramValue === void 0 ? void 0 : paramValue.type]) {\n      // Only attempt to recursively resolve if the type is a known UiSdlDynamicValueSpecParam\n      return _get__(\"recursivelyResolveContent\")(paramValue, context);\n    }\n    return paramValue;\n  } else if (_get__(\"isArray\")(value)) {\n    // Have an array, recursively traverse\n    return _get__(\"map\")(value, function (element) {\n      return _get__(\"recursivelyResolveContent\")(element, context);\n    });\n  } else if (!_get__(\"isDate\")(value) && _get__(\"isObject\")(value)) {\n    // Have an object, recursively traverse\n    return _get__(\"reduce\")(value, function (newArgs, innerValue, key) {\n      newArgs[key] = _get__(\"recursivelyResolveContent\")(innerValue, context);\n      return newArgs;\n    }, {});\n  }\n  // Have a primitive, just return the object\n  return value;\n}\nconst DYNAMIC_VALUE_REGEX = /\\$\\{(\\s*[^}]+\\s*)\\}/g;\nconst DYNAMIC_VALUE_REGEX_NO_$ = /\\{(\\s*[^}]+\\s*)\\}/g;\n\n/**\n * Traverses input string to replace any instances of '{variable}' with '${variable}'\n * @param initialString\n *           string to replace variables withing\n * @return the resolved string with variable syntax updated\n */\nfunction convertReactIntlToContextVarSyntax(initialString) {\n  let tempString = '';\n  for (let i = 0; i < initialString.length; i++) {\n    // Need to recreate the RegExp each time bc it otherwise has issues with multiple variables in a row i.e. '{var}{var1}{var2}'\n    const reactIntlMatches = new RegExp(_get__(\"DYNAMIC_VALUE_REGEX_NO_$\")).exec(initialString.substring(i));\n    if (reactIntlMatches) {\n      tempString += initialString.substring(i, i + reactIntlMatches.index);\n      tempString += initialString.substring(i + reactIntlMatches.index, i + reactIntlMatches.index + reactIntlMatches[0].length).replace(reactIntlMatches[0], '$' + reactIntlMatches[0]);\n      i += reactIntlMatches.index + reactIntlMatches[0].length - 1;\n    } else {\n      tempString += initialString.substring(i);\n      break;\n    }\n  }\n  return tempString;\n}\nfunction resolveValueByValueType(value, valueType) {\n  if (valueType === 'number') {\n    return Number(value);\n  }\n  return value;\n}\n\n/**\n * Checks if the context variable is an array element. This method evaluates to true\n * if the string that contains the context var contains [\"${ }\"] (double quotes only) and the resolved context var is an array.\n * This method exists to maintain backwards compatability so that context vars as array elements are resolved to\n * as a string with the array elements separated by commas.\n *\n * @param stringWithContextVars the string with the context var to resolve. For example, the entire string could be: \"intersects(id, [\"${idArray}\"])\"\n * @param resolvedContextVar the resolved context variable. It can be an array, string, number, etc.\n * @returns\n */\nfunction isContextVarAnArrayElement(stringWithContextVars, resolvedContextVar) {\n  const isArrayElementRegex = new RegExp(`\\\\[['\"]\\\\$\\\\{.*?\\\\}['\"]\\\\]`);\n  return isArrayElementRegex.test(stringWithContextVars) && _get__(\"isArray\")(resolvedContextVar);\n}\nfunction addQuotesToResolvedContextVar(stringWithContextVars, resolvedContextVar) {\n  const doesArrayBeginWithSingleQuotes = new RegExp(/\\['.*'\\]/).test(stringWithContextVars);\n  if (doesArrayBeginWithSingleQuotes) {\n    return `'${resolvedContextVar}'`;\n  }\n  return `\"${resolvedContextVar}\"`;\n}\n\n/**\n * Resolves the `dynamicValue` by replacing all matches of `${varName}` with the resolved value of `varName`\n * @param dynamicValue the string to resolve. Something like:\n *          \"category == '${category}' && something == '${somethingElse}'\" OR \"${var1Name}\" OR \"intersects(id, ['${id}'])\"\n * @param variables a map of resolved variables, from variable name to their resolved value.\n *          Ex: {\n *                var1Name: {\n *                    value: 'var1Value',\n *                    format: UiSdlDynamicValueSpecParamFormat,\n *                var2Name: {\n *                     value: 'var2Value',\n *                }\n *              }\n */\nfunction replaceVariablesInDynamicValue(dynamicValue, variables) {\n  /**\n   * Loop through all the ${varName} matches in dynamicValue and gradually build up a string that replaces\n   * the occurrences with corresponding value in variables map.\n   */\n  const regex = new RegExp(_get__(\"DYNAMIC_VALUE_REGEX\")); // Captures `${...}`\n  let match;\n  let currIndex = 0; // Tracks the index within dynamicValue that we are creating the new value from\n  let resolvedInput = ''; // The string we are building\n  while ((match = regex.exec(dynamicValue)) !== null) {\n    const varName = match[1].trim(); // Ex: `category`\n    const wholeDynamicVar = match[0]; // Ex: `${category}`\n    if (Object.prototype.hasOwnProperty.call(variables, varName)) {\n      /*\n       * If value is undefined, replace it with an empty string\n       * resolvedContextVar can be anything - an array, string, number, etc. so any is needed here.\n       */\n      const resolvedContextVar = _get__(\"isUndefined\")(variables[varName].value) ? '' : variables[varName].value;\n      let finalValue = '';\n      if (_get__(\"isContextVarAnArrayElement\")(dynamicValue, resolvedContextVar)) {\n        /*\n         *The finalValue below is a string representation of the array elements separated by commas. We remove the first and last characters from the string because\n         *the original contextVar has quotes around them so they will be added to the final string when the context var is finished being resolved.\n         *For example, if the dynamicValue = intersects(name, [\"${someArrayVar}\"]) and the someArrayVar = [\"a\", \"b\", \"c\"],\n         *the finalValue will be transformed into a string like: \"a\", \"b\", \"c\" and then have the first and last characters removed to become a\", \"b\", \"c.\n         *When the contextVar is finally done being resolved, the start and end quotes of dynamicValue will be added back to the string, making it \"a\", \"b\", \"c\".\n         */\n        finalValue = resolvedContextVar.map(contextVarElement => _get__(\"addQuotesToResolvedContextVar\")(dynamicValue, contextVarElement)).join(', ');\n        finalValue = finalValue.substring(1, finalValue.length - 1);\n      } else if (_get__(\"isArray\")(resolvedContextVar)) {\n        finalValue = JSON.stringify(resolvedContextVar);\n      } else {\n        finalValue = `${resolvedContextVar}`;\n      }\n      if (wholeDynamicVar == dynamicValue) {\n        return _get__(\"resolveValueByValueType\")(finalValue, variables[varName].valueType);\n      } else {\n        const matchIndex = match.index;\n        // Add From end of previous match to beginning of new match and then the resolved value (acts like a replace)\n        resolvedInput += dynamicValue.substring(currIndex, matchIndex) + finalValue;\n        currIndex = matchIndex + wholeDynamicVar.length; // Push tracking index to the end of the current match\n      }\n    }\n  }\n  if (currIndex !== dynamicValue.length) {\n    // Add the rest the dynamicValue (the part after the last ${varName} match)\n    resolvedInput += dynamicValue.substring(currIndex);\n  }\n  /*\n   * Return value should have all occurrences of ${varName} replaced with resolved value. If `varName` does not match a\n   * variable, then it remains untouched\n   */\n  return resolvedInput;\n}\nfunction recursivelyResolveStringContent(value, vars, context, callback = _get__(\"replaceVariablesInDynamicValue\")) {\n  if (_get__(\"isEmpty\")(vars)) return value;\n  if (_get__(\"isString\")(value)) {\n    return _get__(\"resolve\")({\n      dynamicValue: value,\n      vars\n    }, context, (dynamicValueSpec, variables) => callback(dynamicValueSpec.dynamicValue, variables));\n  } else if (_get__(\"isArray\")(value)) {\n    return value.map(x => _get__(\"recursivelyResolveStringContent\")(x, vars, context, callback));\n  } else if (!_get__(\"isDate\")(value) && _get__(\"isObject\")(value)) {\n    return _get__(\"reduce\")(value, (accumulator, value, innerKey) => {\n      accumulator[innerKey] = _get__(\"recursivelyResolveStringContent\")(value, vars, context, callback);\n      return accumulator;\n    }, {});\n  }\n  return value;\n}\nfunction recursivelyReplacePageParams(value, resolvedContext) {\n  if (_get__(\"isString\")(value)) {\n    return _get__(\"matchDynamicContent\")(resolvedContext, value, undefined, false);\n  } else if (_get__(\"isArray\")(value)) {\n    // If the value is an array, recurse on each item\n    return _get__(\"map\")(value, function (innerValue) {\n      return _get__(\"recursivelyReplacePageParams\")(innerValue, resolvedContext);\n    });\n  } else if (!_get__(\"isDate\")(value) && _get__(\"isPlainObject\")(value)) {\n    /*\n     * If value is a date, skip replacing context variables because date is an object\n     * If the value is an object, recurse\n     */\n    const newArgs = {};\n    _get__(\"each\")(value, function (innerValue, key) {\n      newArgs[key] = _get__(\"recursivelyReplacePageParams\")(innerValue, resolvedContext);\n    });\n    return newArgs;\n  } else {\n    return value;\n  }\n}\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"dynamicValueSpecParamMap\":\n      return (_c3_ui_types_pluggables_dynamicValueSpec__WEBPACK_IMPORTED_MODULE_11___default());\n    case \"UiSdlDefinedValueParam\":\n      return _filterWildcardImport__(_c3_ui_UiSdlDefinedValueParam__WEBPACK_IMPORTED_MODULE_10__);\n    case \"applyDataTransforms\":\n      return _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_12__.applyDataTransforms;\n    case \"reduce\":\n      return (lodash_reduce__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"parseDynamicValueSpecParam\":\n      return _c3_ui_UiSdlDynamicValueSpecParam__WEBPACK_IMPORTED_MODULE_13__.fromString;\n    case \"extractParamValue\":\n      return extractParamValue;\n    case \"isPlainObject\":\n      return (lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_7___default());\n    case \"isUndefined\":\n      return (lodash_isUndefined__WEBPACK_IMPORTED_MODULE_8___default());\n    case \"resolve\":\n      return resolve;\n    case \"isString\":\n      return (lodash_isString__WEBPACK_IMPORTED_MODULE_3___default());\n    case \"recursivelyResolveContent\":\n      return recursivelyResolveContent;\n    case \"isArray\":\n      return (lodash_isArray__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"map\":\n      return (lodash_map__WEBPACK_IMPORTED_MODULE_4___default());\n    case \"isDate\":\n      return (lodash_isDate__WEBPACK_IMPORTED_MODULE_5___default());\n    case \"isObject\":\n      return (lodash_isObject__WEBPACK_IMPORTED_MODULE_6___default());\n    case \"DYNAMIC_VALUE_REGEX_NO_$\":\n      return DYNAMIC_VALUE_REGEX_NO_$;\n    case \"DYNAMIC_VALUE_REGEX\":\n      return DYNAMIC_VALUE_REGEX;\n    case \"isContextVarAnArrayElement\":\n      return isContextVarAnArrayElement;\n    case \"addQuotesToResolvedContextVar\":\n      return addQuotesToResolvedContextVar;\n    case \"resolveValueByValueType\":\n      return resolveValueByValueType;\n    case \"replaceVariablesInDynamicValue\":\n      return replaceVariablesInDynamicValue;\n    case \"isEmpty\":\n      return (lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default());\n    case \"recursivelyResolveStringContent\":\n      return recursivelyResolveStringContent;\n    case \"matchDynamicContent\":\n      return _c3_ui_UiSdlHelpers__WEBPACK_IMPORTED_MODULE_14__.matchDynamicContent;\n    case \"recursivelyReplacePageParams\":\n      return recursivelyReplacePageParams;\n    case \"each\":\n      return (lodash_each__WEBPACK_IMPORTED_MODULE_9___default());\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nfunction _filterWildcardImport__(wildcardImport = {}) {\n  let validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlDynamicValueSpec.ts_uiInfrastructure\n");

/***/ })

}]);