"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlDynamicComponentRendererReact_tsx_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/UiSdlDynamicComponentRendererReact.tsx_uiInfrastructure":
/*!********************************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlDynamicComponentRendererReact.tsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react_uiInfrastructure\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isObject */ \"webpack/sharing/consume/default/lodash/isObject/lodash/isObject_uiInfrastructure\");\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_keyBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/keyBy */ \"webpack/sharing/consume/default/lodash/keyBy/lodash/keyBy_uiInfrastructure\");\n/* harmony import */ var lodash_keyBy__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_keyBy__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isUndefined */ \"webpack/sharing/consume/default/lodash/isUndefined/lodash/isUndefined_uiInfrastructure\");\n/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_cloneDeepWith__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/cloneDeepWith */ \"webpack/sharing/consume/default/lodash/cloneDeepWith/lodash/cloneDeepWith_uiInfrastructure\");\n/* harmony import */ var lodash_cloneDeepWith__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeepWith__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ \"webpack/sharing/consume/default/react-redux_uiInfrastructure\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _c3_ui_UiSdlUseMetadata__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/ui/UiSdlUseMetadata */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseMetadata/@c3/ui/UiSdlUseMetadata_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseMetadata__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseMetadata__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _c3_ui_UiSdlUseTriggerRegister__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @c3/ui/UiSdlUseTriggerRegister */ \"webpack/container/remote/@c3/ui/UiSdlUseTriggerRegister_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseTriggerRegister__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseTriggerRegister__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _c3_ui_UiSdlUseData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @c3/ui/UiSdlUseData */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseData/@c3/ui/UiSdlUseData_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseData__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseData__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _c3_ui_UiSdlUseType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @c3/ui/UiSdlUseType */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseType/@c3/ui/UiSdlUseType_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseType__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseType__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _c3_ui_UiSdlUseTypeDataSpecs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @c3/ui/UiSdlUseTypeDataSpecs */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseTypeDataSpecs/@c3/ui/UiSdlUseTypeDataSpecs_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseTypeDataSpecs__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseTypeDataSpecs__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _c3_ui_UiSdlUseAutoDispatch__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @c3/ui/UiSdlUseAutoDispatch */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseAutoDispatch/@c3/ui/UiSdlUseAutoDispatch_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseAutoDispatch__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseAutoDispatch__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _c3_ui_UiSdlNestedComponentReact__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @c3/ui/UiSdlNestedComponentReact */ \"webpack/container/remote/@c3/ui/UiSdlNestedComponentReact_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlNestedComponentReact__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlNestedComponentReact__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _c3_ui_UiSdlUseDerivedProps__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @c3/ui/UiSdlUseDerivedProps */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseDerivedProps/@c3/ui/UiSdlUseDerivedProps_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseDerivedProps__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseDerivedProps__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _c3_ui_UiSdlPerformance__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @c3/ui/UiSdlPerformance */ \"webpack/sharing/consume/default/@c3/ui/UiSdlPerformance_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlPerformance__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlPerformance__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _c3_app_ui_src_reducerRegistry__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @c3/app/ui/src/reducerRegistry */ \"webpack/sharing/consume/default/@c3/app/ui/src/reducerRegistry_uiInfrastructure\");\n/* harmony import */ var _c3_app_ui_src_reducerRegistry__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_c3_app_ui_src_reducerRegistry__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @c3/app/ui/src/epicRegistry */ \"webpack/sharing/consume/default/@c3/app/ui/src/epicRegistry_uiInfrastructure\");\n/* harmony import */ var _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _c3_ui_UiSdlUseResolveContextVars__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @c3/ui/UiSdlUseResolveContextVars */ \"webpack/container/remote/@c3/ui/UiSdlUseResolveContextVars_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseResolveContextVars__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseResolveContextVars__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _c3_app_ui_src_dataSpecResolver__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @c3/app/ui/src/dataSpecResolver */ \"./src/dataSpecResolver.ts_uiInfrastructure\");\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// This lazily-loaded component never resolves. It can be used to force `React.Suspense` to show the loader.\nconst PendingLazyComponent = _get__(\"React\").lazy(() => new Promise(() => {}));\n\n// Some component refs have their own props. Since these props don't belong to the referenced components, wrap them.\nconst ComponentRefWrapper = props => {\n  var _props$children;\n  return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, null, (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : null);\n};\n\n// An ES Module for a React component. Must be the default export, as this will be passed to `React.lazy`.\n\n// An ES Module for a `UiSdlComponent`.\n\n/**\n * In the given component metadata, replaces component references with React\n * elements.\n *\n * @param componentMetadata The component metadata in which to replace component references.\n * @param componentRefs A list of available component references.\n * @returns a copy of the component metadata with React elements, where applicable.\n */\nconst recursivelyReplaceComponentRefs = (componentMetadata, componentRefs) => {\n  // Skip if there are no component refs available to replace in the component metadata.\n  if (!componentRefs || componentRefs.length === 0) return componentMetadata;\n\n  // Map by `id` for quick access.\n  const componentRefsById = _get__(\"keyBy\")(componentRefs, 'id');\n\n  // Create a deep copy in order to avoid mutating the original objects.\n  return _get__(\"cloneDeepWith\")(componentMetadata, value => {\n    // Look for `UiSdlComponentRef` objects.\n    if (_get__(\"isObject\")(value) && value.hasOwnProperty('id')) {\n      const {\n        id\n      } = value;\n\n      /*\n       * The `type` field is not always present, so just check if `id` matches a known component.\n       * There is a slight chance of false positives here, but for lack of a foolproof alternative,\n       * developers can just change their component ids to avoid false positives (they have full\n       * control over all of this metadata).\n       */\n      if (componentRefsById.hasOwnProperty(id)) {\n        /*\n         * Prevent infinite loops caused by circular references by excluding this component from\n         * the set of components that it is allowed to render. i.e. a component may not render\n         * itself, nor may a component render one of its ancestors.\n         */\n        const {\n          [id]: thisComponentRef,\n          ...nestedComponentRefs\n        } = componentRefsById;\n        return (\n          /*#__PURE__*/\n          // As mentioned in the `ComponentRefWrapper` docs, component refs can have their own props.\n          _get__(\"React\").createElement(_get__(\"ComponentRefWrapper\"), value, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"UiSdlDynamicComponentRenderer\"), {\n            metadataToRender: {\n              children: [thisComponentRef],\n              componentRefs: Object.values(nestedComponentRefs)\n            }\n          }))\n        );\n      }\n    }\n  });\n};\n\n/**\n * Props for the `DynamicConnectedComponent` component.\n */\n\n/**\n * Helper function to push field names to nestedDataSpecs.\n * @param inputElementPath Input element path.\n * @param inputComponentTypeName Input component type name (e.g. UiSdlSingleSearch)\n * @param nestedDataSpecs nested dataSpect to be passed down as dynamic component dependency\n */\nconst addFieldNamesToNestedDataSpec = (inputElementPath, inputComponentTypeName, nestedDataSpecs) => {\n  var _get__2;\n  const dataSpecFieldName = `${inputElementPath}.dataSpec`;\n  const dataDestinationFieldName = `${inputElementPath}.options`;\n  nestedDataSpecs.push({\n    dataSpecFieldName: dataSpecFieldName,\n    // TODO: UI-9670 We need to address this react-hooks violation and remove the below comment.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    dataSpecType: (_get__2 = _get__(\"useTypeDataSpecs\")(inputComponentTypeName)) === null || _get__2 === void 0 || (_get__2 = _get__2[0]) === null || _get__2 === void 0 ? void 0 : _get__2.dataSpecType,\n    dataDestinationFieldName: dataDestinationFieldName\n  });\n};\nconst DataTestIdWrapper = ({\n  children\n}) => /*#__PURE__*/_get__(\"React\").createElement(\"div\", {\n  \"data-testid\": \"dynamic-component-renderer\"\n}, children);\n\n/**\n * Renders a connected component dynamically.\n * @param props Connected component props.\n */\nconst DynamicConnectedComponent = props => {\n  let typeName = props.type;\n  if (typeName) {\n    typeName = typeName.split('UiSdlConnected<')[1];\n    typeName = typeName.substr(0, typeName.length - 1);\n  }\n  const initialMetadata = {\n    ...props.component,\n    id: props.id,\n    type: typeName\n  };\n  const useInitialMetadata = props.useInitialMetadata;\n  const componentRefs = props.componentRefs;\n  const metadataId = props.id;\n  const children = props.children;\n  const effectTriggers = props.effectTriggers || [];\n  const derivedProps = props.derivedProps;\n  const dynamicComponentMountedAction = props.dynamicComponentMountedAction;\n  const dispatch = _get__(\"useDispatch\")();\n  const needsDispatch = props.needsDispatch;\n  const componentType = _get__(\"getParameterizedTypeFromConnectedType\")(props.type);\n  const ComponentType = _get__(\"useType\")(componentType);\n  const ComponentRenderer = _get__(\"useType\")(`${componentType}React`);\n  const ComponentTypeDataSpecs = _get__(\"useTypeDataSpecs\")(componentType);\n\n  // Ensure component does not lose type reference of its data spec if not configured in metadata.\n  ComponentTypeDataSpecs === null || ComponentTypeDataSpecs === void 0 || ComponentTypeDataSpecs.forEach(dataSpec => {\n    var _dataSpec$dataSpecTyp;\n    const dataSpecFieldName = dataSpec.dataSpecFieldName;\n    if (_get__(\"isUndefined\")(initialMetadata[dataSpecFieldName])) initialMetadata[dataSpecFieldName] = ((_dataSpec$dataSpecTyp = dataSpec.dataSpecType) === null || _dataSpec$dataSpecTyp === void 0 ? void 0 : _dataSpec$dataSpecTyp.defaultValues) || {};\n  });\n  const memoDependency = [ComponentType, ComponentRenderer, ComponentTypeDataSpecs];\n  if (useInitialMetadata) {\n    memoDependency.push(JSON.stringify(initialMetadata));\n  }\n  const nestedDataSpecs = [];\n\n  /**\n   * TODO: MIG8-2106 Implement a more generic way to get data spec details object for\n   * components that have nested data specs.\n   *\n   * Fields in UiSdlFilterPanel has their own data spec that needs to be passed in\n   * as an argument to the useData hook. This will enable the dropdowns in the panel\n   * to be populated with the data from the fetch call specified by the data spec.\n   *\n   * Example UiSdlUseDataDataSpecDetails object for a field in a filter panel:\n   *   {\n   *     dataSpecFieldName: \"dataSpec.fieldSets.0.fields.0.inputElement.dataSpec\",\n   *     dataSpecType: UiSdlSelectInputDataSpec,\n   *     dataDestinationFieldName: \"dataSpec.fieldSets.0.fields.0.inputElement.options\",\n   *   }\n   */\n  if (componentType === 'UiSdlFilterPanel') {\n    var _initialMetadata$data;\n    // @ts-expect-error MIG7-2106 UiSdlFilterPanel does not exist in this package, so the type of `fieldSets` cannot be determined.\n    const fieldSets = (_initialMetadata$data = initialMetadata.dataSpec) === null || _initialMetadata$data === void 0 ? void 0 : _initialMetadata$data.fieldSets;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fieldSets === null || fieldSets === void 0 || fieldSets.forEach((fieldSet, index) => {\n      var _fieldSet$fields;\n      const fieldSetPath = `dataSpec.fieldSets.${index}.`;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fieldSet === null || fieldSet === void 0 || (_fieldSet$fields = fieldSet.fields) === null || _fieldSet$fields === void 0 || _fieldSet$fields.forEach((field, index) => {\n        var _field$filterElement, _field$inputElement;\n        if ((_field$filterElement = field.filterElement) !== null && _field$filterElement !== void 0 && (_field$filterElement = _field$filterElement.inputElement) !== null && _field$filterElement !== void 0 && _field$filterElement.dataSpec || (_field$inputElement = field.inputElement) !== null && _field$inputElement !== void 0 && _field$inputElement.dataSpec) {\n          let inputComponentTypeName;\n          let inputElementPath = fieldSetPath;\n          if (field.filterElement) {\n            inputElementPath += `fields.${index}.filterElement.inputElement`;\n\n            // @ts-expect-error MIG7-2106 UiSdlFilterPanel does not exist in this package, so the type of `ComponentType` cannot be determined.\n            inputComponentTypeName = ComponentType === null || ComponentType === void 0 ? void 0 : ComponentType.getInputElementTypeNameForFilterElementTypeName(field.filterElement.type);\n          } else {\n            inputElementPath += `fields.${index}.inputElement`;\n            inputComponentTypeName = field.inputElement.type;\n          }\n          _get__(\"addFieldNamesToNestedDataSpec\")(inputElementPath, inputComponentTypeName, nestedDataSpecs);\n        }\n      });\n    });\n  } else if (componentType === 'UiSdlFilterableContainer') {\n    const singleSearchInput = initialMetadata.filterComponent;\n    if (singleSearchInput !== null && singleSearchInput !== void 0 && singleSearchInput.dataSpec) {\n      const inputComponentTypeName = singleSearchInput === null || singleSearchInput === void 0 ? void 0 : singleSearchInput.type;\n      let inputElementPath = 'filterComponent';\n      _get__(\"addFieldNamesToNestedDataSpec\")(inputElementPath, inputComponentTypeName, nestedDataSpecs);\n    }\n  } else if (componentType === 'UiSdlDateTimeRangeInput') {\n    memoDependency.push(initialMetadata.resetFields);\n  }\n  memoDependency.push(JSON.stringify(nestedDataSpecs));\n\n  // Memoized because every call to `React.lazy` generates a new component.\n  const LazyComponent = _get__(\"useMemo\")(() => {\n    if (!ComponentType || !ComponentRenderer || !ComponentTypeDataSpecs) {\n      /*\n       * `ComponentType`, `ComponentRenderer`, and `ComponentTypeDataSpecs` are loaded asynchronously. If\n       * they have not loaded yet, return a pending lazy component.\n       */\n      return _get__(\"PendingLazyComponent\");\n    }\n    return _get__(\"React\").lazy(async () => {\n      const {\n        reducers,\n        epics,\n        defaultValues,\n        actionCreators\n      } = ComponentType;\n      if (reducers) {\n        Object.keys(reducers).forEach(function (actionName) {\n          _get__(\"registerReducer\")(componentType, reducers[actionName], actionName);\n        });\n      }\n      if (epics) {\n        _get__(\"registerEpics\")(componentType, epics);\n      }\n      await _get__(\"registerTriggers\")(metadataId, effectTriggers);\n      const Component = () => {\n        const {\n          renderInitialAction,\n          registerTriggersAction,\n          ...autoDispatchingActionCreators\n        } = _get__(\"useAutoDispatch\")(actionCreators, metadataId);\n        const initialMetadataWithDefaultValues = Object.assign({}, defaultValues, initialMetadata);\n        // TODO: clean this code up with PLAT-81194\n        let metadata = _get__(\"useMetadata\")(metadataId, initialMetadataWithDefaultValues);\n        const dataSpecsToResolve = _get__(\"retrieveDataSpecsToResolve\")(ComponentTypeDataSpecs, initialMetadata, metadata);\n        const resolvedDataSpecs = _get__(\"useResolveContextVars\")(dataSpecsToResolve, metadataId);\n        if (metadata) {\n          metadata = _get__(\"updateMetadataWithResolvedDataSpecs\")(resolvedDataSpecs, ComponentTypeDataSpecs, metadata);\n        }\n        _get__(\"useTriggerRegister\")(metadataId, true, registerTriggersAction, renderInitialAction);\n        if (useInitialMetadata) {\n          metadata = initialMetadataWithDefaultValues;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const resolvedDerivedProps = _get__(\"useDerivedProps\")(derivedProps);\n        const [data, statuses] = _get__(\"useData\")(metadataId, nestedDataSpecs.concat(ComponentTypeDataSpecs), metadata, ComponentType.doDataMerge);\n        const componentRefsDependencies = (componentRefs === null || componentRefs === void 0 ? void 0 : componentRefs.map(componentRef => componentRef.id)) || [];\n        const newProps = _get__(\"useMemo\")(() => _get__(\"recursivelyReplaceComponentRefs\")(metadata, componentRefs), [metadata, JSON.stringify(componentRefsDependencies)]);\n        _get__(\"useEffect\")(() => {\n          if (dynamicComponentMountedAction && dispatch) {\n            if (needsDispatch) {\n              dispatch(dynamicComponentMountedAction(metadataId));\n            } else {\n              dynamicComponentMountedAction(metadataId);\n            }\n          }\n        }, []);\n        if (metadata && ComponentRenderer.default) {\n          /*\n           * ResolvedDerivedProps.dataSpec being undefined means that derived props are not being used, so we are good to overwrite the dataSpec\n           * resolvedDerivedProps.dataSpec equaling initialMetadata.dataSpec, implies that the dataSpec doesn't have any new information, so we can overwrite\n           * this second case is always true when using UiSdlCreateDynamicComponent#createDynamicComponent\n           */\n          if ((metadata.type === 'UiSdlFilterPanel' || metadata.type === 'UiSdlFilterableContainer') && (_get__(\"isUndefined\")(resolvedDerivedProps.dataSpec) || JSON.stringify(resolvedDerivedProps.dataSpec) === JSON.stringify(initialMetadata.dataSpec))) {\n            return /*#__PURE__*/_get__(\"React\").createElement(ComponentRenderer.default, _extends({}, newProps, children ? {\n              children: children\n            } : {}, data, resolvedDerivedProps, {\n              dataSpec: newProps.dataSpec\n            }, autoDispatchingActionCreators));\n          }\n          return /*#__PURE__*/_get__(\"React\").createElement(ComponentRenderer.default, _extends({}, newProps, children ? {\n            children: children\n          } : {}, data, resolvedDerivedProps, autoDispatchingActionCreators));\n        } else {\n          return null;\n        }\n      };\n      Component.displayName = `dynamicConnectedComponent<${metadataId}>`;\n      return {\n        default: Component\n      };\n    });\n  }, memoDependency);\n  return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Suspense, {\n    key: metadataId,\n    fallback: /*#__PURE__*/_get__(\"React\").createElement(\"div\", {\n      className: \"c3-page-loader\"\n    }, /*#__PURE__*/_get__(\"React\").createElement(\"div\", {\n      className: \"c3-spinner\"\n    }))\n  }, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"DataTestIdWrapper\"), null, /*#__PURE__*/_get__(\"React\").createElement(LazyComponent, null)));\n};\n\n/**\n * Checks if a given component renderer module is a valid React component module, i.e.\n * if it is suitable to pass to `React.lazy`.\n * @param renderer The component renderer module to check.\n * @returns `true` if it is a valid React component module.\n */\nconst isReactComponentModule = renderer => renderer && renderer.hasOwnProperty('default') && typeof renderer.default === 'function';\n/**\n * Renders a presentational component dynamically.\n * @param props Component props. `type` and `id` are required.\n */\nconst DynamicComponent = props => {\n  const {\n    id: metadataId,\n    type: componentType,\n    ...initialMetadata\n  } = props;\n  const ComponentRenderer = _get__(\"useType\")(`${componentType}React`);\n\n  // Memoized because every call to `React.lazy` generates a new component.\n  const LazyComponent = _get__(\"useMemo\")(() => {\n    return ComponentRenderer && _get__(\"isReactComponentModule\")(ComponentRenderer) ? _get__(\"React\").lazy(async () => ComponentRenderer) : _get__(\"PendingLazyComponent\");\n  }, [ComponentRenderer]);\n  return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Suspense, {\n    key: metadataId,\n    fallback: /*#__PURE__*/_get__(\"React\").createElement(\"div\", {\n      className: \"c3-page-loader\"\n    }, /*#__PURE__*/_get__(\"React\").createElement(\"div\", {\n      className: \"c3-spinner\"\n    }))\n  }, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"DataTestIdWrapper\"), null, /*#__PURE__*/_get__(\"React\").createElement(LazyComponent, _extends({\n    id: metadataId\n  }, initialMetadata))));\n};\n/**\n * Checks if the given component metadata is for a `UiSdlConnected` component.\n * @param componentMetadata The component metadata to check.\n * @returns `true` if it is a `UiSdlConnected` component.\n */\nconst isConnectedComponent = componentMetadata => {\n  var _componentMetadata$ty;\n  return !!((_componentMetadata$ty = componentMetadata.type) !== null && _componentMetadata$ty !== void 0 && _componentMetadata$ty.startsWith('UiSdlConnected<'));\n};\n\n/**\n * Checks if the given component metadata is for a `UiSdlComponentRef`.\n * @param componentMetadata The component metadata to check.\n * @returns `true` if it is a `UiSdlComponentRef`.\n */\nconst isComponentRef = componentMetadata => {\n  var _componentMetadata$ty2;\n  return !!(componentMetadata.type === 'UiSdlComponentRef' || (_componentMetadata$ty2 = componentMetadata.type) !== null && _componentMetadata$ty2 !== void 0 && _componentMetadata$ty2.startsWith('UiSdlComponentRef<'));\n};\n\n/**\n * Renders a UiSdlDynamicComponentRenderer with React.\n * @param props A UiSdlDynamicComponentRenderer configuration\n */\nconst UiSdlDynamicComponentRenderer = props => {\n  var _props$metadataToRend;\n  const measurePerformance = _get__(\"shouldMeasurePerformance\")();\n  _get__(\"useEffect\")(() => {\n    if (measurePerformance) {\n      _get__(\"countDynamicComponentMounted\")();\n    }\n  }, []);\n  return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, null, (_props$metadataToRend = props.metadataToRender) === null || _props$metadataToRend === void 0 || (_props$metadataToRend = _props$metadataToRend.children) === null || _props$metadataToRend === void 0 ? void 0 : _props$metadataToRend.map(childProps => {\n    const {\n      id\n    } = childProps;\n    // Checks for applicationStateRef presence and render it accordingly.\n    let applicationStateComponents = /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, null);\n    const applicationStateRef = childProps.applicationStateRef;\n    if (applicationStateRef) {\n      let applicationStateIds;\n      if (applicationStateRef.type === '[UiSdlApplicationStateRef]') {\n        applicationStateIds = applicationStateRef.value ? applicationStateRef.value.map(function (ref) {\n          return ref.id;\n        }) : [];\n      } else {\n        applicationStateIds = [applicationStateRef.id];\n      }\n      applicationStateComponents = applicationStateIds.map((applicationStateId, index) => /*#__PURE__*/_get__(\"React\").createElement(_get__(\"UiSdlNestedComponent\"), {\n        key: applicationStateId + index,\n        componentId: applicationStateId\n      }));\n    }\n    if (_get__(\"isConnectedComponent\")(childProps)) {\n      return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, {\n        key: id\n      }, applicationStateComponents, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"DynamicConnectedComponent\"), _extends({\n        key: id\n      }, childProps, {\n        useInitialMetadata: props.useInitialMetadata,\n        componentRefs: props.metadataToRender.componentRefs,\n        dynamicComponentMountedAction: props.dynamicComponentMountedAction,\n        needsDispatch: props.needsDispatch\n      }), props === null || props === void 0 ? void 0 : props.children));\n    } else if (_get__(\"isComponentRef\")(childProps)) {\n      return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, {\n        key: id\n      }, applicationStateComponents, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"UiSdlNestedComponent\"), {\n        key: id,\n        componentId: id\n      }, props === null || props === void 0 ? void 0 : props.children));\n    } else {\n      // Add the open prop when dynamically rendering a UiSdlSidePanelSection\n      if (childProps.type === 'UiSdlSidePanelSection') {\n        return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, {\n          key: id\n        }, applicationStateComponents, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"DynamicComponent\"), _extends({\n          key: id\n        }, _get__(\"recursivelyReplaceComponentRefs\")(childProps, props.metadataToRender.componentRefs), {\n          open: props.open\n        })));\n      } else {\n        return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"React\").Fragment, {\n          key: id\n        }, applicationStateComponents, /*#__PURE__*/_get__(\"React\").createElement(_get__(\"DynamicComponent\"), _extends({\n          key: id\n        }, _get__(\"recursivelyReplaceComponentRefs\")(childProps, props.metadataToRender.componentRefs))));\n      }\n    }\n  }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_get__(\"UiSdlDynamicComponentRenderer\"));\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"React\":\n      return (react__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"keyBy\":\n      return (lodash_keyBy__WEBPACK_IMPORTED_MODULE_2___default());\n    case \"cloneDeepWith\":\n      return (lodash_cloneDeepWith__WEBPACK_IMPORTED_MODULE_4___default());\n    case \"isObject\":\n      return (lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"useTypeDataSpecs\":\n      return _c3_ui_UiSdlUseTypeDataSpecs__WEBPACK_IMPORTED_MODULE_10__.useTypeDataSpecs;\n    case \"useDispatch\":\n      return react_redux__WEBPACK_IMPORTED_MODULE_5__.useDispatch;\n    case \"getParameterizedTypeFromConnectedType\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_12__.getParameterizedTypeFromConnectedType;\n    case \"useType\":\n      return _c3_ui_UiSdlUseType__WEBPACK_IMPORTED_MODULE_9__.useType;\n    case \"isUndefined\":\n      return (lodash_isUndefined__WEBPACK_IMPORTED_MODULE_3___default());\n    case \"addFieldNamesToNestedDataSpec\":\n      return addFieldNamesToNestedDataSpec;\n    case \"useMemo\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo;\n    case \"PendingLazyComponent\":\n      return PendingLazyComponent;\n    case \"registerReducer\":\n      return _c3_app_ui_src_reducerRegistry__WEBPACK_IMPORTED_MODULE_16__.registerReducer;\n    case \"registerEpics\":\n      return _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_17__.registerEpics;\n    case \"registerTriggers\":\n      return _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_17__.registerTriggers;\n    case \"useAutoDispatch\":\n      return _c3_ui_UiSdlUseAutoDispatch__WEBPACK_IMPORTED_MODULE_11__.useAutoDispatch;\n    case \"useMetadata\":\n      return _c3_ui_UiSdlUseMetadata__WEBPACK_IMPORTED_MODULE_6__.useMetadata;\n    case \"retrieveDataSpecsToResolve\":\n      return _c3_app_ui_src_dataSpecResolver__WEBPACK_IMPORTED_MODULE_19__.retrieveDataSpecsToResolve;\n    case \"useResolveContextVars\":\n      return _c3_ui_UiSdlUseResolveContextVars__WEBPACK_IMPORTED_MODULE_18__.useResolveContextVars;\n    case \"updateMetadataWithResolvedDataSpecs\":\n      return _c3_app_ui_src_dataSpecResolver__WEBPACK_IMPORTED_MODULE_19__.updateMetadataWithResolvedDataSpecs;\n    case \"useTriggerRegister\":\n      return _c3_ui_UiSdlUseTriggerRegister__WEBPACK_IMPORTED_MODULE_7__.useTriggerRegister;\n    case \"useDerivedProps\":\n      return _c3_ui_UiSdlUseDerivedProps__WEBPACK_IMPORTED_MODULE_14__.useDerivedProps;\n    case \"useData\":\n      return _c3_ui_UiSdlUseData__WEBPACK_IMPORTED_MODULE_8__.useData;\n    case \"recursivelyReplaceComponentRefs\":\n      return recursivelyReplaceComponentRefs;\n    case \"useEffect\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n    case \"isReactComponentModule\":\n      return isReactComponentModule;\n    case \"shouldMeasurePerformance\":\n      return _c3_ui_UiSdlPerformance__WEBPACK_IMPORTED_MODULE_15__.shouldMeasurePerformance;\n    case \"countDynamicComponentMounted\":\n      return _c3_ui_UiSdlPerformance__WEBPACK_IMPORTED_MODULE_15__.countDynamicComponentMounted;\n    case \"isConnectedComponent\":\n      return isConnectedComponent;\n    case \"isComponentRef\":\n      return isComponentRef;\n    case \"UiSdlDynamicComponentRenderer\":\n      return UiSdlDynamicComponentRenderer;\n    case \"ComponentRefWrapper\":\n      return ComponentRefWrapper;\n    case \"DataTestIdWrapper\":\n      return DataTestIdWrapper;\n    case \"UiSdlNestedComponent\":\n      return (_c3_ui_UiSdlNestedComponentReact__WEBPACK_IMPORTED_MODULE_13___default());\n    case \"DynamicConnectedComponent\":\n      return DynamicConnectedComponent;\n    case \"DynamicComponent\":\n      return DynamicComponent;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof UiSdlDynamicComponentRenderer;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(UiSdlDynamicComponentRenderer, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(UiSdlDynamicComponentRenderer)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlDynamicComponentRendererReact.tsx_uiInfrastructure\n");

/***/ }),

/***/ "./src/dataSpecResolver.ts_uiInfrastructure":
/*!*********************************!*\
  !*** ./src/dataSpecResolver.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   containsContextVars: () => (/* binding */ containsContextVars),\n/* harmony export */   deepMerge: () => (/* binding */ deepMerge),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getValueByPath: () => (/* binding */ getValueByPath),\n/* harmony export */   retrieveDataSpecsToResolve: () => (/* binding */ retrieveDataSpecsToResolve),\n/* harmony export */   setValueByPath: () => (/* binding */ setValueByPath),\n/* harmony export */   updateMetadataWithResolvedDataSpecs: () => (/* binding */ updateMetadataWithResolvedDataSpecs)\n/* harmony export */ });\n/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/mergeWith */ \"webpack/sharing/consume/default/lodash/mergeWith/lodash/mergeWith_uiInfrastructure\");\n/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n/**\n * Check to see if context vars exist in a string.\n * @param value\n * @returns\n */\nfunction containsContextVars(value) {\n  const DYNAMIC_VALUE_REGEX = '\\\\$\\\\{.*\\\\}';\n  const regex = new RegExp(DYNAMIC_VALUE_REGEX);\n  if (typeof value === 'string' && regex.exec(value) !== null) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Creates custom merge function for lodash.mergeWith that takes the initial metadata object's value if it contains context vars,\n * otherwise takes the merged object's value.\n *\n * @param initialMetadataValue\n * @returns\n */\nfunction customizer(initialMetadataValue) {\n  if (_get__(\"containsContextVars\")(initialMetadataValue)) {\n    return initialMetadataValue;\n  }\n  return undefined;\n}\n\n/**\n * Merge two objects deeply, but take the the initial object's value if it contains context vars,\n * otherwise take the merged object's value.\n *\n * @param initial\n * @param merged\n * @returns\n */\nfunction deepMerge(initialMetadata, metadata) {\n  return _get__(\"mergeWith\")({}, initialMetadata, metadata, _get__(\"customizer\"));\n}\nfunction setValueByPath(obj, path, newValue) {\n  const fields = path.split('.');\n  let current = obj;\n  for (let i = 0; i < fields.length - 1; i++) {\n    const field = fields[i];\n    if (current && current.hasOwnProperty(field)) {\n      current = current[field];\n    }\n  }\n  const lastField = fields[fields.length - 1];\n  if (current && current.hasOwnProperty(lastField)) {\n    current[lastField] = newValue;\n  }\n  return obj;\n}\nfunction getValueByPath(obj, path) {\n  const fields = path.split('.');\n  let value = obj;\n  for (const field of fields) {\n    if (value && value.hasOwnProperty(field)) {\n      value = value[field];\n    } else {\n      return undefined;\n    }\n  }\n  return value;\n}\nfunction updateMetadataWithResolvedDataSpecs(resolvedDataSpec, dataSpecs, metadata) {\n  for (const dataSpec of dataSpecs) {\n    if (resolvedDataSpec[dataSpec.dataSpecFieldName]) {\n      _get__(\"setValueByPath\")(metadata, dataSpec.dataSpecFieldName, resolvedDataSpec[dataSpec.dataSpecFieldName]);\n    }\n  }\n  return metadata;\n}\n\n/**\n * Takes in a list of dataSpecs and returns a new object with the dataSpecs of initialMetadata and metadata merged.\n * If initialMetadata contains context vars, the value of initialMetadata will be taken, otherwise the value of metadata will be taken.\n * The returned dataSpecs will be used so that context vars can be properly resolved.\n *\n * @param dataSpecs\n * @param initialMetadata\n * @param metadata\n * @returns\n */\nconst retrieveDataSpecsToResolve = (dataSpecs, initialMetadata, metadata) => {\n  const dataSpecsToResolve = {};\n  dataSpecs.forEach(dataSpec => {\n    const initialMetadataDataSpec = _get__(\"getValueByPath\")(initialMetadata, dataSpec.dataSpecFieldName);\n    if (initialMetadataDataSpec !== null && initialMetadataDataSpec !== void 0 && initialMetadataDataSpec.contextVars) {\n      const metadataDataSpec = metadata ? _get__(\"getValueByPath\")(metadata, dataSpec.dataSpecFieldName) : null;\n      dataSpecsToResolve[dataSpec.dataSpecFieldName] = metadata ? _get__(\"deepMerge\")(initialMetadataDataSpec, metadataDataSpec) : initialMetadataDataSpec;\n    }\n  });\n  return dataSpecsToResolve;\n};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"containsContextVars\":\n      return containsContextVars;\n    case \"mergeWith\":\n      return (lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"customizer\":\n      return customizer;\n    case \"setValueByPath\":\n      return setValueByPath;\n    case \"getValueByPath\":\n      return getValueByPath;\n    case \"deepMerge\":\n      return deepMerge;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataSpecResolver.ts_uiInfrastructure\n");

/***/ })

}]);