"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlPseudolocale_ts_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/UiSdlPseudolocale.ts_uiInfrastructure":
/*!**************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlPseudolocale.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   isPseudolocale: () => (/* binding */ isPseudolocale),\n/* harmony export */   psuedolocalizeBundle: () => (/* binding */ psuedolocalizeBundle)\n/* harmony export */ });\n/* harmony import */ var lodash_reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/reduce */ \"webpack/sharing/consume/default/lodash/reduce/lodash/reduce_uiInfrastructure\");\n/* harmony import */ var lodash_reduce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_reduce__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n/**\n * A set of Translation data for a single locale.\n */\n\n/**\n * Psuedolocalization transformation parameters.\n */\n\n/*\n * `en-XA` is English (Pseudo-accents): a pseudolocale which adds accents to several characters.\n * This can be used to easily identify text which is not using translations / localized formatting.\n */\nconst isAccentsPseudolocale = languageTag => languageTag === 'en-XA';\n\n/*\n * `ar-XB` is Arabic (Pseudo-bidi): a pseudolocale which simulates bidirectional / RTL scripts.\n * This can be used to easily identify script directionality bugs.\n */\nconst isBidiPseudolocale = languageTag => languageTag === 'ar-XB';\n\n/**\n * Psuedolocalizes the given text.\n *\n * @param text The translation text to pseudolocalize.\n * @param spec Psuedolocalization transformation parameters.\n * @returns The pseudolocalized text.\n */\nconst pseudolocalize = (text, {\n  bidi\n}) => {\n  const CHARACTER_TRANSFORM_MAP = bidi === true\n  /* eslint-disable prettier/prettier */\n\n  // Pseudo-bidi transforms letters by \"flipping\" them upside down.\n  ? Object.freeze({\n    A: '∀',\n    a: 'ɐ',\n    b: 'q',\n    B: 'Ԑ',\n    C: 'Ↄ',\n    c: 'ɔ',\n    d: 'p',\n    D: 'ᗡ',\n    e: 'ǝ',\n    E: 'Ǝ',\n    F: 'Ⅎ',\n    f: 'ɟ',\n    G: '⅁',\n    g: 'ƃ',\n    H: 'H',\n    h: 'ɥ',\n    I: 'I',\n    i: 'ı',\n    j: 'ɾ',\n    J: 'ſ',\n    k: 'ʞ',\n    K: 'Ӽ',\n    L: '⅂',\n    l: 'ʅ',\n    m: 'ɯ',\n    M: 'W',\n    N: 'N',\n    n: 'u',\n    o: 'o',\n    O: 'O',\n    p: 'd',\n    P: 'Ԁ',\n    q: 'b',\n    Q: 'Ò',\n    r: 'ɹ',\n    R: 'ᴚ',\n    s: 's',\n    S: 'S',\n    T: '⊥',\n    t: 'ʇ',\n    U: '∩',\n    u: 'n',\n    v: 'ʌ',\n    V: 'Ʌ',\n    W: 'M',\n    w: 'ʍ',\n    x: 'x',\n    X: 'X',\n    Y: '⅄',\n    y: 'ʎ',\n    z: 'z',\n    Z: 'Z'\n  })\n\n  /**\n   * Pseudo-accents transforms letters, numbers, and some special characters.\n   * This character mapping is derived from Unicode ICU's `PseudoLocales` implementation.\n   * @see https://github.com/unicode-org/icu/blob/maint/maint-69/tools/cldr/cldr-to-icu/src/main/java/org/unicode/icu/tool/cldrtoicu/PseudoLocales.java#L351-L360\n   */ : Object.freeze({\n    _: '‿',\n    ' ': ' ',\n    '-': '‐',\n    ',': '،',\n    ';': '⁏',\n    ':': '∶',\n    '!': '¡',\n    '?': '¿',\n    '.': '·',\n    '\"': '″',\n    '[': '⁅',\n    ']': '⁆',\n    '@': '՞',\n    '*': '⁎',\n    '/': '⁄',\n    '\\\\': '∖',\n    '&': '⅋',\n    '#': '♯',\n    '%': '‰',\n    '`': '‵',\n    '^': '˄',\n    '+': '⁺',\n    '<': '≤',\n    '=': '≂',\n    '>': '≥',\n    '|': '¦',\n    '~': '˞',\n    '0': '⓪',\n    '1': '①',\n    '2': '②',\n    '3': '③',\n    '4': '④',\n    '5': '⑤',\n    '6': '⑥',\n    '7': '⑦',\n    '8': '⑧',\n    '9': '⑨',\n    $: '€',\n    a: 'å',\n    A: 'Å',\n    b: 'ƀ',\n    B: 'Ɓ',\n    c: 'ç',\n    C: 'Ç',\n    d: 'ð',\n    D: 'Ð',\n    e: 'é',\n    E: 'É',\n    f: 'ƒ',\n    F: 'Ƒ',\n    g: 'ĝ',\n    G: 'Ĝ',\n    h: 'ĥ',\n    H: 'Ĥ',\n    i: 'î',\n    I: 'Î',\n    j: 'ĵ',\n    J: 'Ĵ',\n    k: 'ķ',\n    K: 'Ķ',\n    l: 'ļ',\n    L: 'Ļ',\n    M: 'Ṁ',\n    m: 'ɱ',\n    n: 'ñ',\n    N: 'Ñ',\n    o: 'ö',\n    O: 'Ö',\n    p: 'þ',\n    P: 'Þ',\n    q: 'ǫ',\n    Q: 'Ǫ',\n    r: 'ŕ',\n    R: 'Ŕ',\n    s: 'š',\n    S: 'Š',\n    t: 'ţ',\n    T: 'Ţ',\n    u: 'û',\n    U: 'Û',\n    v: 'ṽ',\n    V: 'Ṽ',\n    w: 'ŵ',\n    W: 'Ŵ',\n    x: 'ẋ',\n    X: 'Ẋ',\n    y: 'ý',\n    Y: 'Ý',\n    z: 'ž',\n    Z: 'Ž'\n  });\n  /* eslint-enable prettier/prettier */\n\n  // Bidirectional text indicators\n  const RLO = '\\u202e'; // U+202E RIGHT-TO-LEFT OVERRIDE\n  const ALM = '\\u061C'; // U+061C ARABIC LETTER MARK\n  const PDF = '\\u202c'; // U+202C POP DIRECTIONAL FORMATTING\n  const BIDI_PREFIX = ALM + RLO; // Prefix to add before each LTR segment.\n  const BIDI_SUFFIX = PDF + ALM; // Suffix to add after each LTR segment.\n\n  const isTransformableCharacter = Object.prototype.hasOwnProperty.bind(CHARACTER_TRANSFORM_MAP);\n  let outputText = '';\n\n  // Transform each character of the text, ignoring ICU placeholders.\n  for (let i = 0, inIcuPlaceholder = false; i < text.length; i++) {\n    let character = text[i];\n    if (character === '{' || character === '}') {\n      // We've either entered into an ICU placeholder or out of an ICU placeholder.\n      inIcuPlaceholder = !inIcuPlaceholder;\n      if (bidi === true) {\n        if (inIcuPlaceholder) {\n          // We are entering the placeholder portion of an ICU message. Close out the directional formatting.\n          character = BIDI_SUFFIX + character;\n        } else {\n          // We are entering the translated text portion of an ICU message. Begin directional formatting.\n          character = character + BIDI_PREFIX;\n        }\n      }\n    } else if (inIcuPlaceholder !== true && isTransformableCharacter(character)) {\n      // Transform characters outside of ICU placeholders according to the character transform mapping.\n      character = CHARACTER_TRANSFORM_MAP[character];\n    }\n\n    // Append the transformed (or original) character to the output string.\n    outputText += character;\n  }\n  return bidi === true ? BIDI_PREFIX + outputText + BIDI_SUFFIX : outputText;\n};\nconst isPseudolocale = languageTag => _get__(\"isAccentsPseudolocale\")(languageTag) || _get__(\"isBidiPseudolocale\")(languageTag);\n\n/**\n * Pseudolocalizes the given Translation bundle according to the given spec.\n *\n * @param translations The Translation bundle to pseudolocalize.\n * @param targetLanguageTag The pseudolocale language tag to produce.\n * @returns A full pseudolocalized Translation bundle.\n */\nconst psuedolocalizeBundle = (translations, targetLanguageTag) => {\n  const spec = {\n    bidi: _get__(\"isBidiPseudolocale\")(targetLanguageTag)\n  };\n\n  // Keep the same translation keys, but apply pseudolocalization transformations to the values.\n  return _get__(\"reduce\")(translations, (output, originalText, translationKey) => {\n    output[translationKey] = originalText ? _get__(\"pseudolocalize\")(originalText, spec) : originalText;\n    return output;\n  }, {});\n};\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"isAccentsPseudolocale\":\n      return isAccentsPseudolocale;\n    case \"isBidiPseudolocale\":\n      return isBidiPseudolocale;\n    case \"reduce\":\n      return (lodash_reduce__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"pseudolocalize\":\n      return pseudolocalize;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlPseudolocale.ts_uiInfrastructure\n");

/***/ })

}]);