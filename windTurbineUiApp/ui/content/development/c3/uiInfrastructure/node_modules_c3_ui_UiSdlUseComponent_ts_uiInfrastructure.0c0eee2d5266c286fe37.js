"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlUseComponent_ts_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/UiSdlUseComponent.ts_uiInfrastructure":
/*!**************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlUseComponent.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   importComponent: () => (/* binding */ importComponent),\n/* harmony export */   useAsyncImporterWithErrorHandling: () => (/* binding */ useAsyncImporterWithErrorHandling),\n/* harmony export */   useComponent: () => (/* binding */ useComponent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react_uiInfrastructure\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"webpack/sharing/consume/default/react-redux_uiInfrastructure\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlUseTunnelConfiguration */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseTunnelConfiguration/@c3/ui/UiSdlUseTunnelConfiguration_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _c3_ui_c3UiToFederatedModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @c3/ui/c3UiToFederatedModule */ \"webpack/sharing/consume/default/@c3/ui/c3UiToFederatedModule_uiInfrastructure\");\n/* harmony import */ var _c3_ui_c3UiToFederatedModule__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_c3UiToFederatedModule__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @c3/ui/UiSdlFederatedImport */ \"webpack/container/remote/@c3/ui/UiSdlFederatedImport_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _c3_ui_UiSdlSiteContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @c3/ui/UiSdlSiteContext */ \"webpack/sharing/consume/default/@c3/ui/UiSdlSiteContext_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlSiteContext__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlSiteContext__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _c3_ui_UiSdlLogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/ui/UiSdlLogger */ \"webpack/container/remote/@c3/ui/UiSdlLogger_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlLogger__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlLogger__WEBPACK_IMPORTED_MODULE_6__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n// eslint-disable-next-line import/exports-last\n\n/**\n * A `tunnelPath` is a URI path-like string representation of a tunnel\n * configuration. It consists of a tunnel url, tenant, and tag which are URI\n * encoded and concatenated with `\"/\"` as a delimiter. For example,\n * `\"https%3A%2F%2Fvanity-url.c3.ai/my-tenant/my-tag\"`.\n */\nconst tunneledComponentCache = {};\nconst componentCache = {};\nconst NoOpComponent = () => false;\nconst logger = _get__(\"UiSdlLogger\")('UiSdlUseComponent');\n\n/**\n * Dynamically imports a component with the given metadata id and in the context\n * of the provided tunnel configuration. Previously imported components are\n * cached, for performance reasons.\n *\n * @param metadataId The metadata id of the component to import.\n * @param url The url from which to import the component.\n * @param tenant The tenant from which to import the component.\n * @param tag The tag from which to import the component.\n * @returns a Promise that resolves to the imported module.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\n */\nconst importTunneledComponent = async (metadataId, url, tenant, tag) => {\n  // TODO: UI-8820 Get componentToFederatedModuleMapping from remote\n  const packageName = _get__(\"c3UiToFederatedModule\")[`./components/${metadataId}`];\n  const tunnelPath = `${url}/ui/1/${encodeURIComponent(tenant)}/${encodeURIComponent(tag)}`;\n  if (!_get__(\"tunneledComponentCache\")[tunnelPath]) {\n    _get__(\"tunneledComponentCache\")[tunnelPath] = {};\n  }\n  if (!_get__(\"tunneledComponentCache\")[tunnelPath][metadataId]) {\n    _get__(\"tunneledComponentCache\")[tunnelPath][metadataId] = _get__(\"tunneledFederatedImport\")(tunnelPath, packageName, 'components', metadataId);\n  }\n  return await _get__(\"tunneledComponentCache\")[tunnelPath][metadataId];\n};\n\n/**\n * Dynamically imports a component with the given metadata id. Previously\n * imported components are cached, for performance reasons.\n *\n * @param metadataId The metadata id of the component to import.\n * @returns a Promise that resolves to the imported module.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\n */\n// eslint-disable-next-line import/exports-last\nconst importComponent = async metadataId => {\n  const packageName = _get__(\"c3UiToFederatedModule\")[`./components/${metadataId}`];\n  if (!_get__(\"componentCache\")[metadataId]) {\n    _get__(\"componentCache\")[metadataId] = _get__(\"federatedImport\")(packageName, 'components', metadataId);\n  }\n  return await _get__(\"componentCache\")[metadataId];\n};\n\n/**\n * Returns a lazy React component for the given parameters.\n *\n * This function should never throw an error. If the arguments are insufficient to produce\n * a lazy React component, then `null` is returned. If there is a error while asynchronously\n * importing the component (inside of `React.lazy`), then the provided `handleImportError` will\n * be called with the relevant `Error`.\n *\n * Note that this function should be memoized, as it will return a new lazy component on every call.\n *\n * @param metadataId The metadata id of the component to import.\n * @param asyncWithErrorHandling An async function which takes an async callback and a default value.\n * @param url The url of the application to import the component from.\n * @param tenant The tenant of the application to import the component from.\n * @param tag The tag of the application to import the component from.\n * @returns A lazy React component if the given component id was found in the federated module mapping, or `null` otherwise.\n */\nconst getLazyComponent = (metadataId, asyncWithErrorHandling, url, tenant, tag) => {\n  if (!metadataId) {\n    return null;\n  }\n  // eslint-disable-next-line no-constant-condition\n  if (false) {}\n  const packageName = _get__(\"c3UiToFederatedModule\")[`./components/${metadataId}`];\n  if (!packageName) {\n    _get__(\"logger\").error(`Component ${metadataId} was not found in any package. Please double check the name is correct. If this is a new component, make sure it was properly provisioned or restart UI IDE if applicable.`);\n    return null;\n  }\n  return _get__(\"React\").lazy(() =>\n  // Importing components typically involve loading extra Javascript and CSS code. Catch errors as applicable\n  asyncWithErrorHandling(() => _get__(\"importComponent\")(metadataId), {\n    default: _get__(\"NoOpComponent\")\n  }));\n};\nconst useAsyncImporterWithErrorHandling = () => {\n  const dispatch = _get__(\"useDispatch\")();\n  const siteId = _get__(\"useContext\")(_get__(\"UiSdlSiteContext\"));\n  const handleImportError = _get__(\"useCallback\")(error => {\n    // If loading the component failed, let the site know so that it decides what to do (e.g. check the user's logged in status).\n    _get__(\"logger\").error(error);\n    dispatch({\n      type: `${siteId}.CHUNK_LOADING_ERROR`,\n      payload: {\n        componentId: siteId,\n        errorMessage: error.message\n      }\n    });\n  }, [dispatch, siteId]);\n  return _get__(\"React\").useCallback(async (asyncImporter, defaultValue) => {\n    try {\n      // Lazily load the component\n      return await asyncImporter();\n    } catch (error) {\n      // Catch errors and notify the site. Render a \"Not Found\" page until the site figures out what to do with this error.\n      handleImportError(error);\n      return defaultValue;\n    }\n  }, [handleImportError]);\n};\nconst useComponent = metadataId => {\n  const {\n    url,\n    tenant,\n    tag\n  } = _get__(\"useTunnelConfiguration\")();\n  const asyncWithErrorHandling = _get__(\"useAsyncImporterWithErrorHandling\")();\n\n  // Memoize the lazy component (`React.lazy` produces a new component type on every call)\n  const component = _get__(\"useMemo\")(() => _get__(\"getLazyComponent\")(metadataId, asyncWithErrorHandling, url, tenant, tag), [metadataId, asyncWithErrorHandling, url, tenant, tag]);\n  if (!metadataId) {\n    _get__(\"logger\").error('No metadata ID passed to useComponent hook');\n    // Return a no-op component if no metadata id was passed\n    return _get__(\"NoOpComponent\");\n  }\n  return component;\n};\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"UiSdlLogger\":\n      return _c3_ui_UiSdlLogger__WEBPACK_IMPORTED_MODULE_6__.withName;\n    case \"c3UiToFederatedModule\":\n      return (_c3_ui_c3UiToFederatedModule__WEBPACK_IMPORTED_MODULE_3___default());\n    case \"tunneledComponentCache\":\n      return tunneledComponentCache;\n    case \"tunneledFederatedImport\":\n      return _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_4__.tunneledFederatedImport;\n    case \"componentCache\":\n      return componentCache;\n    case \"federatedImport\":\n      return _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_4__.federatedImport;\n    case \"React\":\n      return (react__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"importTunneledComponent\":\n      return importTunneledComponent;\n    case \"logger\":\n      return logger;\n    case \"importComponent\":\n      return importComponent;\n    case \"NoOpComponent\":\n      return NoOpComponent;\n    case \"useDispatch\":\n      return react_redux__WEBPACK_IMPORTED_MODULE_1__.useDispatch;\n    case \"useContext\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useContext;\n    case \"UiSdlSiteContext\":\n      return (_c3_ui_UiSdlSiteContext__WEBPACK_IMPORTED_MODULE_5___default());\n    case \"useCallback\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useCallback;\n    case \"useTunnelConfiguration\":\n      return _c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2__.useTunnelConfiguration;\n    case \"useAsyncImporterWithErrorHandling\":\n      return useAsyncImporterWithErrorHandling;\n    case \"useMemo\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo;\n    case \"getLazyComponent\":\n      return getLazyComponent;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlUseComponent.ts_uiInfrastructure\n");

/***/ })

}]);