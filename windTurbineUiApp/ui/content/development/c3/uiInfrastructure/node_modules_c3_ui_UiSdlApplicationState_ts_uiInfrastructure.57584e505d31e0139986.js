"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlApplicationState_ts_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/UiSdlApplicationState.ts_uiInfrastructure":
/*!******************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlApplicationState.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   actionCreators: () => (/* binding */ actionCreators),\n/* harmony export */   applicationStateAddDataAction: () => (/* binding */ applicationStateAddDataAction),\n/* harmony export */   applicationStateDataAddEffect: () => (/* binding */ applicationStateDataAddEffect),\n/* harmony export */   applicationStateDataDeleteEffect: () => (/* binding */ applicationStateDataDeleteEffect),\n/* harmony export */   applicationStateDataModifyEffect: () => (/* binding */ applicationStateDataModifyEffect),\n/* harmony export */   applicationStateDeleteDataAction: () => (/* binding */ applicationStateDeleteDataAction),\n/* harmony export */   applicationStateModifyDataAction: () => (/* binding */ applicationStateModifyDataAction),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   epics: () => (/* binding */ epics),\n/* harmony export */   generateSelector: () => (/* binding */ generateSelector),\n/* harmony export */   getConfigFromApplicationState: () => (/* binding */ getConfigFromApplicationState),\n/* harmony export */   getConfigFromState: () => (/* binding */ getConfigFromState),\n/* harmony export */   getConfigStatePath: () => (/* binding */ getConfigStatePath),\n/* harmony export */   getInitialConfigFromState: () => (/* binding */ getInitialConfigFromState),\n/* harmony export */   getInitialConfigStatePath: () => (/* binding */ getInitialConfigStatePath),\n/* harmony export */   getInitialStateNamespace: () => (/* binding */ getInitialStateNamespace),\n/* harmony export */   getPathToStateId: () => (/* binding */ getPathToStateId),\n/* harmony export */   getStateNamespace: () => (/* binding */ getStateNamespace),\n/* harmony export */   initializeApplicationStateAction: () => (/* binding */ initializeApplicationStateAction),\n/* harmony export */   isLimitEffectOnState: () => (/* binding */ isLimitEffectOnState),\n/* harmony export */   reducers: () => (/* binding */ reducers),\n/* harmony export */   removeConfigInApplicationState: () => (/* binding */ removeConfigInApplicationState),\n/* harmony export */   setConfigInApplicationState: () => (/* binding */ setConfigInApplicationState),\n/* harmony export */   setConfigInState: () => (/* binding */ setConfigInState),\n/* harmony export */   setInitialConfigInState: () => (/* binding */ setInitialConfigInState)\n/* harmony export */ });\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable_uiInfrastructure\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n/* global defaultValues */\n\n\n\n\n/**\n * An Immutable.js-wrapped component configuration.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction getStateNamespace() {\n  return _get__(\"defaultValues\").REDUX_NAMESPACE;\n}\nfunction getInitialStateNamespace() {\n  return 'components';\n}\nfunction getConfigStatePath(id) {\n  return ['metadata', _get__(\"getStateNamespace\")(), 'byId', id];\n}\nfunction getConfigFromState(id, state, dataPath) {\n  dataPath = dataPath || [];\n  return state.getIn(_get__(\"getConfigStatePath\")(id).concat(dataPath));\n}\nfunction getInitialConfigStatePath(id) {\n  return ['initialMetadata', _get__(\"getInitialStateNamespace\")(), 'byId', id];\n}\nfunction getInitialConfigFromState(id, state, dataPath) {\n  dataPath = dataPath || [];\n  return state.getIn(_get__(\"getInitialConfigStatePath\")(id).concat(dataPath));\n}\nfunction setConfigInState(id, state, dataPath, value) {\n  dataPath = dataPath || [];\n  // Force everything to Immutable\n  if (value && value.type && value.type instanceof Function) {\n    value = _get__(\"fromJS\")(value.toJSON());\n  } else if (!_get__(\"Iterable\").isIterable(value)) {\n    value = _get__(\"fromJS\")(value);\n  }\n  return state.setIn(_get__(\"getConfigStatePath\")(id).concat(dataPath), value);\n}\nfunction setInitialConfigInState(id, state, dataPath, value) {\n  dataPath = dataPath || [];\n  // Force everything to Immutable\n  if (value && value.type && value.type instanceof Function) {\n    value = _get__(\"fromJS\")(value.toJSON());\n  } else if (!_get__(\"Iterable\").isIterable(value)) {\n    value = _get__(\"fromJS\")(value);\n  }\n  return state.setIn(this.getInitialConfigStatePath(id).concat(dataPath), value);\n}\nfunction getPathToStateId() {\n  return ['metadata', 'applications', 'byId'];\n}\nfunction isLimitEffectOnState() {\n  return true;\n}\nfunction getConfigFromApplicationState(stateId, state, dataPath) {\n  dataPath = dataPath || [];\n  const pathInState = _get__(\"getPathToStateId\")().concat(stateId).concat(dataPath);\n  return state.getIn(pathInState);\n}\nfunction setConfigInApplicationState(stateId, state, dataPath,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue) {\n  dataPath = dataPath || [];\n  const pathInState = _get__(\"getPathToStateId\")().concat(stateId).concat(dataPath);\n\n  // Force everything to Immutable.\n  value = _get__(\"convertToImmutable\")(value);\n  return state.setIn(pathInState, value);\n}\nconst removeConfigInApplicationState = (stateId, state, dataPath = []) => state.deleteIn(_get__(\"getPathToStateId\")().concat(stateId).concat(dataPath));\nfunction initializeApplicationStateAction(stateId) {\n  return {\n    type: stateId + '.' + 'APPLICATION_STATE_INITIALIZE',\n    payload: {\n      componentId: stateId\n    }\n  };\n}\nfunction applicationStateDeleteDataAction(stateId, ids, dataPath) {\n  return {\n    type: stateId + '.' + 'APPLICATION_STATE_DATA_DELETE',\n    payload: {\n      stateId: stateId,\n      dataPath: dataPath,\n      ids: ids\n    }\n  };\n}\nfunction applicationStateAddDataAction(stateId, id, dataPath) {\n  return {\n    type: stateId + '.' + 'APPLICATION_STATE_DATA_ADD',\n    payload: {\n      stateId: stateId,\n      dataPath: dataPath,\n      id: id\n    }\n  };\n}\nfunction applicationStateModifyDataAction(stateId, id, dataPath, field, newValue) {\n  return {\n    type: stateId + '.' + 'APPLICATION_STATE_DATA_MODIFY',\n    payload: {\n      stateId: stateId,\n      dataPath: dataPath,\n      id: id,\n      field: field,\n      newValue: newValue\n    }\n  };\n}\nfunction applicationStateDataDeleteEffect(state, action) {\n  var _get__2;\n  const {\n    stateId,\n    dataPath,\n    ids\n  } = action.payload;\n  let data = (_get__2 = _get__(\"getConfigFromApplicationState\")(stateId, state, [dataPath])) === null || _get__2 === void 0 ? void 0 : _get__2.toJS();\n  if (data === undefined) {\n    return state;\n  }\n  // Filtering out objects whose id is in the ids array from the payload\n  data = data.filter(function (obj) {\n    return !ids.includes(obj.id);\n  });\n  state = _get__(\"setConfigInApplicationState\")(stateId, state, [dataPath], data);\n  return state;\n}\nfunction applicationStateDataAddEffect(state, action) {\n  var _get__3;\n  const {\n    stateId,\n    dataPath,\n    id\n  } = action.payload;\n  const data = ((_get__3 = _get__(\"getConfigFromApplicationState\")(stateId, state, [dataPath])) === null || _get__3 === void 0 ? void 0 : _get__3.toJS()) || [];\n  const index = data.findIndex(function (obj) {\n    return obj.id === id;\n  });\n  if (index === -1) {\n    data.unshift({\n      id: id\n    });\n    state = _get__(\"setConfigInApplicationState\")(stateId, state, [dataPath], data);\n  }\n  return state;\n}\nfunction applicationStateDataModifyEffect(state, action) {\n  var _get__4;\n  const {\n    stateId,\n    dataPath,\n    id,\n    field,\n    newValue\n  } = action.payload;\n  const data = (_get__4 = _get__(\"getConfigFromApplicationState\")(stateId, state, [dataPath])) === null || _get__4 === void 0 ? void 0 : _get__4.toJS();\n  const index = data.findIndex(function (obj) {\n    return obj.id === id;\n  });\n  if (index !== -1 && data !== null && data !== void 0 && data[index]) {\n    data[index][field] = newValue;\n    state = _get__(\"setConfigInApplicationState\")(stateId, state, [dataPath], data);\n  }\n  return state;\n}\n\n/**\n * Finds the metadata of an application in the redux store.\n *\n * This selector has to return objects that can be easily compared over time to avoid\n * unnecessary renders.\n *\n * @param applicationId The id of the application to find in the state\n */\nconst generateSelector = applicationId => state => {\n  const meta = _get__(\"getConfigFromApplicationState\")(applicationId, state);\n  return meta || null;\n};\nconst epics = {};\nconst reducers = {\n  APPLICATION_STATE_DATA_DELETE: _get__(\"applicationStateDataDeleteEffect\"),\n  APPLICATION_STATE_DATA_ADD: _get__(\"applicationStateDataAddEffect\"),\n  APPLICATION_STATE_DATA_MODIFY: _get__(\"applicationStateDataModifyEffect\")\n};\nconst actionCreators = {\n  initializeApplicationStateAction: _get__(\"initializeApplicationStateAction\"),\n  applicationStateDeleteDataAction: _get__(\"applicationStateDeleteDataAction\"),\n  applicationStateAddDataAction: _get__(\"applicationStateAddDataAction\"),\n  applicationStateModifyDataAction: _get__(\"applicationStateModifyDataAction\")\n};\nconst defaultValues = {\n  \"REDUX_NAMESPACE\": \"applications\"\n};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"defaultValues\":\n      return defaultValues;\n    case \"getStateNamespace\":\n      return getStateNamespace;\n    case \"getConfigStatePath\":\n      return getConfigStatePath;\n    case \"getInitialStateNamespace\":\n      return getInitialStateNamespace;\n    case \"getInitialConfigStatePath\":\n      return getInitialConfigStatePath;\n    case \"fromJS\":\n      return immutable__WEBPACK_IMPORTED_MODULE_0__.fromJS;\n    case \"Iterable\":\n      return immutable__WEBPACK_IMPORTED_MODULE_0__.Iterable;\n    case \"getPathToStateId\":\n      return getPathToStateId;\n    case \"convertToImmutable\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__.convertToImmutable;\n    case \"getConfigFromApplicationState\":\n      return getConfigFromApplicationState;\n    case \"setConfigInApplicationState\":\n      return setConfigInApplicationState;\n    case \"applicationStateDataDeleteEffect\":\n      return applicationStateDataDeleteEffect;\n    case \"applicationStateDataAddEffect\":\n      return applicationStateDataAddEffect;\n    case \"applicationStateDataModifyEffect\":\n      return applicationStateDataModifyEffect;\n    case \"initializeApplicationStateAction\":\n      return initializeApplicationStateAction;\n    case \"applicationStateDeleteDataAction\":\n      return applicationStateDeleteDataAction;\n    case \"applicationStateAddDataAction\":\n      return applicationStateAddDataAction;\n    case \"applicationStateModifyDataAction\":\n      return applicationStateModifyDataAction;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlApplicationState.ts_uiInfrastructure\n");

/***/ })

}]);