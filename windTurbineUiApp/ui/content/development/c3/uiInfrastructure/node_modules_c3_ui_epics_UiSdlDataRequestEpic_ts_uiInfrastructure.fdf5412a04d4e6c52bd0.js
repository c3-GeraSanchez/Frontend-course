"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_epics_UiSdlDataRequestEpic_ts_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/epics/UiSdlDataRequestEpic.ts_uiInfrastructure":
/*!***********************************************************!*\
  !*** ./node_modules/@c3/ui/epics/UiSdlDataRequestEpic.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   epic: () => (/* binding */ epic)\n/* harmony export */ });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators_uiInfrastructure\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs_uiInfrastructure\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var redux_observable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! redux-observable */ \"./node_modules/redux-observable/lib/esm/operators.js_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @c3/ui/WithDataTransforms */ \"webpack/sharing/consume/default/@c3/ui/WithDataTransforms_uiInfrastructure\");\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _c3_ui_UiSdlDataReceiveMode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @c3/ui/UiSdlDataReceiveMode */ \"webpack/container/remote/@c3/ui/UiSdlDataReceiveMode_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlDataReceiveMode__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDataReceiveMode__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @c3/ui/UiSdlDataRedux */ \"webpack/container/remote/@c3/ui/UiSdlDataRedux_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\nfunction findUnrelatedNodeIndex(parentNode, nodes, start) {\n  const parentIdStack = [parentNode.node.nodeId];\n  let lastRelatedNode = parentNode;\n  for (let idx = 0; idx < nodes.length; idx++) {\n    const node = nodes[idx];\n    if (idx >= start && node.node.nodeId !== parentIdStack[parentIdStack.length - 1]) {\n      var _node$node$parent, _node$node$parent2;\n      if (((_node$node$parent = node.node.parent) === null || _node$node$parent === void 0 ? void 0 : _node$node$parent.nodeId) === parentIdStack[parentIdStack.length - 1]) {\n        lastRelatedNode = node;\n      } else if (((_node$node$parent2 = node.node.parent) === null || _node$node$parent2 === void 0 ? void 0 : _node$node$parent2.nodeId) === lastRelatedNode.node.nodeId) {\n        parentIdStack.push(lastRelatedNode.node.nodeId);\n        lastRelatedNode = node;\n      } else {\n        // Backtrack. Start popping the stack until we find a related parent so we can continue the search\n        let canContinue = false;\n        while (parentIdStack.length > 0 && !canContinue) {\n          var _node$node$parent3;\n          parentIdStack.pop();\n          canContinue = parentIdStack.length > 0 && ((_node$node$parent3 = node.node.parent) === null || _node$node$parent3 === void 0 ? void 0 : _node$node$parent3.nodeId) === parentIdStack[parentIdStack.length - 1];\n        }\n        if (canContinue) {\n          lastRelatedNode = node;\n        } else {\n          // We could not find a parent, this node is not related\n          return idx;\n        }\n      }\n    }\n  }\n  return nodes.length;\n}\nfunction replaceRecord(dataSourceId, newData, state) {\n  const data = _get__(\"UiSdlConnected_getDataFromState\")(dataSourceId, state);\n  const recordIndex = data.objs.findIndex(record => {\n    return record.node.nodeId === newData.objs[0].node.nodeId;\n  });\n  const firstUnrelatedIndex = _get__(\"findUnrelatedNodeIndex\")(newData.objs[0], data.objs, recordIndex);\n  if (recordIndex >= 0 && firstUnrelatedIndex) {\n    // Data.objs.splice(recordIndex, firstUnrelatedIndex - recordIndex, ...newData.objs);\n\n    const newObjs = [...data.objs.slice(0, recordIndex), ...newData.objs, ...data.objs.slice(firstUnrelatedIndex)];\n    newData.objs = newObjs;\n    return newData;\n  } else {\n    return data;\n  }\n}\n\n// eslint-disable-next-line import/prefer-default-export\nfunction epic(actionStream, stateStream) {\n  return actionStream.pipe(_get__(\"filter\")(action => {\n    var _action$payload;\n    const dataId = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.componentId;\n    if (!dataId) {\n      return false;\n    }\n    return action.type === dataId + '.DATA_REQUEST';\n  }), _get__(\"mergeMap\")(function (action) {\n    var _action$payload$argum, _get__2, _action$payload2, _action$payload3, _actionTransforms;\n    const dataId = action.payload.componentId;\n    const componentId = _get__(\"getComponentIdFromComponentDataSource\")(dataId);\n    const state = stateStream.value;\n    // The current expanded data point if any\n    const currentDataPoint = (_action$payload$argum = action.payload.arguments) === null || _action$payload$argum === void 0 ? void 0 : _action$payload$argum.currentNode;\n    const typeName = _get__(\"getDataSourceFromState\")(dataId, state, ['c3type']);\n    const actionName = _get__(\"getDataSourceFromState\")(dataId, state, ['c3function']);\n    if (!typeName || !actionName) {\n      return _get__(\"of\")({\n        type: dataId + '.REQUEST_SKIPPED',\n        payload: {\n          typeName,\n          actionName\n        }\n      });\n    }\n    let actionArguments = _get__(\"resolveRequestArguments\")(dataId, state);\n    const tunnelConfiguration = (_get__2 = _get__(\"getDataSourceFromState\")(dataId, state, ['tunnelConfiguration'])) === null || _get__2 === void 0 ? void 0 : _get__2.toJS();\n    let actionTransforms = action === null || action === void 0 || (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.actionTransforms;\n    if (!(action !== null && action !== void 0 && (_action$payload3 = action.payload) !== null && _action$payload3 !== void 0 && (_action$payload3 = _action$payload3.actionTransforms) !== null && _action$payload3 !== void 0 && _action$payload3.length)) {\n      var _get__3;\n      actionTransforms = (_get__3 = _get__(\"getDataSourceFromState\")(dataId, state, ['dataTransforms'])) === null || _get__3 === void 0 ? void 0 : _get__3.toJS();\n    }\n\n    // If there are dataTransforms, try to apply {@link UiSdlDataTransform#transformArgs} if it exists\n    if ((_actionTransforms = actionTransforms) !== null && _actionTransforms !== void 0 && _actionTransforms.length) {\n      var context = {\n        componentId,\n        state,\n        dataSourceId: dataId,\n        content: actionArguments\n      };\n      actionArguments = _get__(\"applyTransformArgs\")(actionArguments, actionTransforms, componentId, state, context);\n    }\n    if (typeName === 'UiSdlTypeWorker') {\n      return _get__(\"throwError\")(new Error('TODO: MIG8-1058 New UiSdlTypeWorker implementation'));\n      /**\n       * This is brittle because it assumes that we don't need to resolve context for the action arguments.\n       * If there is a {{ pageParams.id }} for example it is not being resolved\n       *\n       * const tunnelConfiguration = getTunnelConfigurationFromState(state, siteId);\n       * const typeWorker = startTypeWorker(tunnelConfiguration);\n       * return from(\n       *   typeWorker[actionName](actionArguments).then(function(resolution) {\n       *     var newData = applyDataTransforms(actionTransforms, resolution);\n       *     return receiveDataAction(dataId, newData, false);\n       *   })\n       * );\n       */\n    } else {\n      var _action$meta;\n      return _get__(\"tunneledAjax\")((_action$meta = action.meta) === null || _action$meta === void 0 ? void 0 : _action$meta.siteId, state, typeName, actionName, actionArguments, undefined,\n      // Timeout\n      tunnelConfiguration).pipe(_get__(\"mergeMap\")(function (event) {\n        const transformContext = {\n          state,\n          dataSourceId: dataId,\n          componentId,\n          content: event.response\n        };\n        let data = _get__(\"applyDataTransforms\")(actionTransforms, event.response, transformContext);\n        switch (action.payload.mode) {\n          case _get__(\"DataReceiveMode\").APPEND:\n            data = _get__(\"appendToStoredValue\")(dataId, data, state);\n            break;\n          case _get__(\"DataReceiveMode\").REPLACE_RECORD:\n            data = _get__(\"replaceRecord\")(dataId, data, state);\n            break;\n        }\n        return _get__(\"of\")(_get__(\"receiveDataAction\")(dataId, data, false), {\n          type: componentId + '.LOADED_DATA_HANDLE',\n          payload: {\n            componentId: componentId,\n            sourceComponentId: dataId,\n            currentNode: currentDataPoint,\n            data: data\n          }\n        });\n      }), _get__(\"catchError\")(function (error) {\n        const errorMessage = error.message;\n        console.error(errorMessage);\n        return _get__(\"of\")(_get__(\"receiveErrorAction\")(dataId, errorMessage));\n      }), _get__(\"takeUntil\")(actionStream.pipe(_get__(\"ofType\")(dataId + '.CANCEL_DATA_REQUEST'))));\n    }\n  }));\n}\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"UiSdlConnected_getDataFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_2__.getDataFromState;\n    case \"findUnrelatedNodeIndex\":\n      return findUnrelatedNodeIndex;\n    case \"filter\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.filter;\n    case \"mergeMap\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.mergeMap;\n    case \"getComponentIdFromComponentDataSource\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_2__.getComponentIdFromComponentDataSource;\n    case \"getDataSourceFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_2__.getDataSourceFromState;\n    case \"of\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.of;\n    case \"resolveRequestArguments\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__.resolveRequestArguments;\n    case \"applyTransformArgs\":\n      return _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_3__.applyTransformArgs;\n    case \"throwError\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.throwError;\n    case \"tunneledAjax\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__.tunneledAjax;\n    case \"applyDataTransforms\":\n      return _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_3__.applyDataTransforms;\n    case \"DataReceiveMode\":\n      return (_c3_ui_UiSdlDataReceiveMode__WEBPACK_IMPORTED_MODULE_4___default());\n    case \"appendToStoredValue\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__.appendToStoredValue;\n    case \"replaceRecord\":\n      return replaceRecord;\n    case \"receiveDataAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__.receiveDataAction;\n    case \"catchError\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.catchError;\n    case \"receiveErrorAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_5__.receiveErrorAction;\n    case \"takeUntil\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.takeUntil;\n    case \"ofType\":\n      return redux_observable__WEBPACK_IMPORTED_MODULE_6__.ofType;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/epics/UiSdlDataRequestEpic.ts_uiInfrastructure\n");

/***/ }),

/***/ "./node_modules/redux-observable/lib/esm/operators.js_uiInfrastructure":
/*!************************************************************!*\
  !*** ./node_modules/redux-observable/lib/esm/operators.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ofType: () => (/* binding */ ofType)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "webpack/sharing/consume/default/rxjs/operators_uiInfrastructure");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__);


var keyHasType = function keyHasType(type, key) {
  return type === key || typeof key === 'function' && type === key.toString();
};

var ofType = function ofType() {
  for (var _len = arguments.length, keys = Array(_len), _key = 0; _key < _len; _key++) {
    keys[_key] = arguments[_key];
  }

  return function (source) {
    return source.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.filter)(function (_ref) {
      var type = _ref.type;

      var len = keys.length;
      if (len === 1) {
        return keyHasType(type, keys[0]);
      } else {
        for (var i = 0; i < len; i++) {
          if (keyHasType(type, keys[i])) {
            return true;
          }
        }
      }
      return false;
    }));
  };
};

/***/ })

}]);