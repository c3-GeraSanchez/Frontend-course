"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlUseTypeDataSpecs_ts_uiInfrastructure"],{

/***/ "./node_modules/@c3/ui/UiSdlUseTypeDataSpecs.ts_uiInfrastructure":
/*!******************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlUseTypeDataSpecs.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   importTunneledTypeDataSpecs: () => (/* binding */ importTunneledTypeDataSpecs),\n/* harmony export */   importTypeDataSpecs: () => (/* binding */ importTypeDataSpecs),\n/* harmony export */   useTypeDataSpecs: () => (/* binding */ useTypeDataSpecs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react_uiInfrastructure\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _c3_ui_typeDataSpecsToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/typeDataSpecsToFederatedModuleMapping */ \"webpack/sharing/consume/default/@c3/ui/typeDataSpecsToFederatedModuleMapping_uiInfrastructure\");\n/* harmony import */ var _c3_ui_typeDataSpecsToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_typeDataSpecsToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlUseTunnelConfiguration */ \"webpack/sharing/consume/default/@c3/ui/UiSdlUseTunnelConfiguration/@c3/ui/UiSdlUseTunnelConfiguration_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @c3/ui/UiSdlFederatedImport */ \"webpack/container/remote/@c3/ui/UiSdlFederatedImport_uiInfrastructure\");\n/* harmony import */ var _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_3__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n/**\n * A `tunnelPath` is a URI path-like string representation of a tunnel\n * configuration. It consists of a tunnel url, tenant, and tag which are URI\n * encoded and concatenated with `\"/\"` as a delimiter. For example,\n * `\"https%3A%2F%2Fvanity-url.c3.ai/my-tenant/my-tag\"`.\n */\nconst tunneledTypeDataSpecsCache = {};\nconst typeDataSpecsCache = {};\n\n/**\n * Dynamically imports the TypeScript source module containing the data specs of a type with the given\n * type name. Previously imported modules are cached, for performance reasons.\n *\n * @param typeName The name of the type.\n * @returns a Promise that resolves to the data specs.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\n */\nconst importTypeDataSpecs = async typeName => {\n  var _await$_get__$typeDat;\n  const typeDataSpecsName = typeName + 'DataSpecs';\n  if (!_get__(\"typeDataSpecsCache\")[typeDataSpecsName]) {\n    _get__(\"typeDataSpecsCache\")[typeDataSpecsName] = _get__(\"federatedImport\")(_get__(\"typeDataSpecsToFederatedModuleMapping\")[typeDataSpecsName], 'typeDataSpecs', typeDataSpecsName);\n  }\n  return (_await$_get__$typeDat = await _get__(\"typeDataSpecsCache\")[typeDataSpecsName]) === null || _await$_get__$typeDat === void 0 ? void 0 : _await$_get__$typeDat.dataSpecs;\n};\n\n/**\n * Dynamically imports the TypeScript source module containing the data specs of a type with the given\n * type name and in the context of the provided tunnel configuration. Previously\n * imported modules are cached, for performance reasons.\n *\n * @param typeName The name of the type.\n * @param url The url from which to import the module.\n * @param tenant The tenant from which to import the module.\n * @param tag The tag from which to import the module.\n * @returns a Promise that resolves to the data specs.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\n */\nconst importTunneledTypeDataSpecs = async (typeName, url, tenant, tag) => {\n  var _await$_get__$tunnelP;\n  const tunnelPath = `${url}/${encodeURIComponent(tenant)}/${encodeURIComponent(tag)}`;\n  const typeDataSpecsName = typeName + 'DataSpecs';\n  if (!_get__(\"tunneledTypeDataSpecsCache\")[tunnelPath]) {\n    _get__(\"tunneledTypeDataSpecsCache\")[tunnelPath] = {};\n  }\n  if (!_get__(\"tunneledTypeDataSpecsCache\")[tunnelPath][typeDataSpecsName]) {\n    _get__(\"tunneledTypeDataSpecsCache\")[tunnelPath][typeDataSpecsName] = _get__(\"tunneledFederatedImport\")(tunnelPath, _get__(\"typeDataSpecsToFederatedModuleMapping\")[typeDataSpecsName], 'typeDataSpecs', typeDataSpecsName);\n  }\n  return (_await$_get__$tunnelP = await _get__(\"tunneledTypeDataSpecsCache\")[tunnelPath][typeDataSpecsName]) === null || _await$_get__$tunnelP === void 0 ? void 0 : _await$_get__$tunnelP.dataSpecs;\n};\nconst useTypeDataSpecs = typeName => {\n  const [typeDataSpecs, setTypeDataSpecs] = _get__(\"useState\")(null);\n  const {\n    url,\n    tenant,\n    tag\n  } = _get__(\"useTunnelConfiguration\")();\n  _get__(\"useEffect\")(() => {\n    const getTypeDataSpecs = async () => {\n      let importedTypeDataSpecs = null;\n      // If (url || tenant || tag) {\n      try {\n        if (false) {} else {\n          importedTypeDataSpecs = await _get__(\"importTypeDataSpecs\")(typeName);\n        }\n      } finally {\n        var _importedTypeDataSpec;\n        setTypeDataSpecs((_importedTypeDataSpec = importedTypeDataSpecs) !== null && _importedTypeDataSpec !== void 0 ? _importedTypeDataSpec : null);\n      }\n    };\n    getTypeDataSpecs();\n  }, [typeName]);\n  return typeDataSpecs;\n};\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"typeDataSpecsCache\":\n      return typeDataSpecsCache;\n    case \"federatedImport\":\n      return _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_3__.federatedImport;\n    case \"typeDataSpecsToFederatedModuleMapping\":\n      return (_c3_ui_typeDataSpecsToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"tunneledTypeDataSpecsCache\":\n      return tunneledTypeDataSpecsCache;\n    case \"tunneledFederatedImport\":\n      return _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_3__.tunneledFederatedImport;\n    case \"useState\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useState;\n    case \"useTunnelConfiguration\":\n      return _c3_ui_UiSdlUseTunnelConfiguration__WEBPACK_IMPORTED_MODULE_2__.useTunnelConfiguration;\n    case \"useEffect\":\n      return react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n    case \"importTunneledTypeDataSpecs\":\n      return importTunneledTypeDataSpecs;\n    case \"importTypeDataSpecs\":\n      return importTypeDataSpecs;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlUseTypeDataSpecs.ts_uiInfrastructure\n");

/***/ })

}]);