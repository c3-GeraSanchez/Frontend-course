"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlBreadcrumbs_ts_uiComponentLibrary"],{

/***/ "./node_modules/@c3/sdl-react/helpers/RouteHierarchy.js_uiComponentLibrary":
/*!**************************************************************!*\
  !*** ./node_modules/@c3/sdl-react/helpers/RouteHierarchy.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/find */ \"webpack/sharing/consume/default/lodash/find/lodash/find_uiComponentLibrary\");\n/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _replaceUrlParams__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./replaceUrlParams */ \"./node_modules/@c3/sdl-react/helpers/replaceUrlParams.js_uiComponentLibrary\");\n/* harmony import */ var _reactComponents_menu_navMenuHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reactComponents/menu/navMenuHelper */ \"./node_modules/@c3/sdl-react/reactComponents/menu/navMenuHelper.js_uiComponentLibrary\");\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n/**\n * Check if a route matches a dynamic urlPath\n * For example,\n *     urlPath = \"/sdl-demo/level1/level2/level3/{{id}}\"\n *     route   = \"/sdl-demo/level1/level2/level3/123\"\n */\nconst trimEndSlash = path => path.endsWith('/') ? path.slice(0, -1) : path;\nconst pageParamsRegex = /{{[\\s]*([\\w]+)[\\s]*}}/;\nconst matchDynamicUrlPath = (urlPath, route) => {\n  const urlPathWithOutEndSlash = _get__(\"trimEndSlash\")(urlPath);\n  const routeWithoutEndSlash = route.endsWith('/') ? route.slice(0, -1) : route;\n  const dynamicParams = urlPathWithOutEndSlash.replace(/\\/{{\\s*(\\w+)\\s*}}/g, '/([^/]*)');\n  const urlPathRegex = new RegExp('^' + dynamicParams + '$', 'g');\n  return urlPathRegex.test(routeWithoutEndSlash);\n};\nconst getRoutes = (uiContext, reduxContext) => {\n  let routes;\n  /**\n   * In the new UI framework we no longer have access to the `uiContext.environment`.\n   * Keep `uiContext.environment` for backward compatibility with old UI framework.\n   */\n  const environment = uiContext.environment;\n  if (environment) {\n    routes = environment.getRoutesFromState();\n  } else if (reduxContext && reduxContext.store) {\n    routes = reduxContext.store.getState().getIn(['routes']);\n  }\n  return routes || [];\n};\nconst getCurrentRoute = uiContext => {\n  var _window;\n  return (uiContext === null || uiContext === void 0 ? void 0 : uiContext.currentRoute) || ((_window = window) === null || _window === void 0 || (_window = _window.location) === null || _window === void 0 ? void 0 : _window.pathname);\n};\nconst getCurrentPageId = uiContext => uiContext === null || uiContext === void 0 ? void 0 : uiContext.currentPageId;\n\n/**\n * Returns url associated with page id\n *\n * @param {UiContext} uiContext\n * @param {ReduxContext} reduxContext\n *     The `reduxContext` provides access to the current Redux state.\n *\n * @return {string} url associated with currentPageId\n */\nconst getCurrentUrlForPageId = (uiContext, reduxContext) => {\n  const routes = _get__(\"getRoutes\")(uiContext, reduxContext);\n  const currentPageId = _get__(\"getCurrentPageId\")(uiContext);\n  const routeObject = _get__(\"find\")(routes, route => route.targetPageId === currentPageId);\n  return routeObject === null || routeObject === void 0 ? void 0 : routeObject.urlPath;\n};\n\n/**\n * Replace {{id}} from urlPath with value from params.\n */\nconst replaceDynamicParams = (routeHierarchy, pageParams) => routeHierarchy.map(route => {\n  // InitialUrlPath contains the wild cards /user/{{id}}\n  let routeClone = {\n    ...route,\n    initialUrlPath: route.urlPath\n  };\n  let urlPath = routeClone.urlPath;\n  pageParams = pageParams || {};\n  urlPath = _get__(\"replaceUrlParams\")(urlPath, pageParams);\n  routeClone.urlPath = _get__(\"getUrlWithoutStartSlash\")(urlPath);\n  return routeClone;\n});\n\n/**\n * Build route hierarchy.\n * @param {UiContext} uiContext\n * @param {ReduxContext} reduxContext\n *     The `reduxContext` provides access to the current Redux state.\n * @param {Boolean} allowSamePages\n *     Boolean to determine whether routes that point to the\n *     same pages should be included in the route hierarchy\n * @return [{..UiRoute, {initialUrlPath: initialUrlPath}}] Array of UiRoute object with initialUrlPath\n */\nconst getCurrentRouteHierarchy = (uiContext, reduxContext, allowSamePages) => {\n  const routes = _get__(\"getRoutes\")(uiContext, reduxContext);\n  const currentRoute = _get__(\"getCurrentRoute\")(uiContext);\n  return allowSamePages ? _get__(\"getRouteHierarchy\")(routes, currentRoute, uiContext.pageParams, true) : _get__(\"getRouteHierarchy\")(routes, currentRoute, uiContext.pageParams);\n};\nconst isSamePage = (route1, route2) => {\n  return route1.targetModuleName && route1.targetPageName && route1.targetModuleName === route2.targetModuleName && route1.targetPageName === route2.targetPageName;\n};\nconst getRouteHierarchyAndAllMatchingPages = (routes, currentRoute, params, allowSamePages) => {\n  const routeHierarchy = _get__(\"getRouteHierarchy\")(routes, currentRoute, params, allowSamePages);\n  const matchingPagesHierarchy = _get__(\"matchRoutesByPage\")(routes, currentRoute);\n\n  // Remove duplicates by urlPath and re-sort as hierarchy\n  const allRoutes = routeHierarchy.concat(matchingPagesHierarchy).filter((route, index, self) => index === self.findIndex(t => _get__(\"getUrlWithoutStartSlash\")(t.urlPath) === _get__(\"getUrlWithoutStartSlash\")(route.urlPath))).sort((a, b) => a.urlPath > b.urlPath ? 1 : -1);\n  return _get__(\"replaceDynamicParams\")(allRoutes, params);\n};\nconst getRouteHierarchy = (routes, currentRoute, params, allowSamePages) => {\n  // Remove whitespace in path to prevent double/triple/n-ple breadcrumbs from repeated trailing slashes\n  const currentRouteArray = currentRoute.split('/').filter(Boolean);\n\n  // Add back base directory\n  currentRouteArray.unshift('');\n  const routeHierarchy = [];\n  if ((routes === null || routes === void 0 ? void 0 : routes.length) > 0) {\n    currentRouteArray.forEach((_, index) => {\n      const route = currentRouteArray.slice(0, index + 1).join('/');\n      const matchedRoute = routes.find(rte => _get__(\"matchDynamicUrlPath\")(rte.urlPath, route));\n      if (matchedRoute) {\n        /*\n         * The allowSamePages boolean is used to determine whether routes that\n         * point to the same pages should be included in the route hierarchy.\n         */\n        if (allowSamePages || routeHierarchy.length < 1 || !_get__(\"isSamePage\")(routeHierarchy[routeHierarchy.length - 1], matchedRoute)) {\n          routeHierarchy.push(matchedRoute);\n        }\n      }\n    });\n  }\n  return _get__(\"replaceDynamicParams\")(routeHierarchy, params);\n};\n\n/**\n * Returns all routes that match your current route's page.\n * @param {[UiSdlRoute]} routes\n *     All UiSdlRoutes to search from\n * @param {String} currentRouteUrlPath\n *     The route to search with\n * @return [UiSdlRoute] Array of UiSdlRoute objects\n */\nconst matchRoutesByPage = (routes, currentRouteUrlPath) => {\n  if ((routes === null || routes === void 0 ? void 0 : routes.length) > 0) {\n    const currentRoute = routes.find(rte => _get__(\"matchDynamicUrlPath\")(_get__(\"getUrlWithoutStartSlash\")(rte.urlPath), currentRouteUrlPath));\n    return currentRoute ? routes.filter(rte => rte.targetPageName === currentRoute.targetPageName && rte.targetModuleName === currentRoute.targetModuleName) : [];\n  }\n  return [];\n};\nconst RouteHierarchy = {\n  matchDynamicUrlPath: _get__(\"matchDynamicUrlPath\"),\n  getCurrentRoute: _get__(\"getCurrentRoute\"),\n  getCurrentRouteHierarchy: _get__(\"getCurrentRouteHierarchy\"),\n  getRouteHierarchy: _get__(\"getRouteHierarchy\"),\n  getCurrentUrlForPageId: _get__(\"getCurrentUrlForPageId\"),\n  getRouteHierarchyAndAllMatchingPages: _get__(\"getRouteHierarchyAndAllMatchingPages\"),\n  matchRoutesByPage: _get__(\"matchRoutesByPage\"),\n  pageParamsRegex: _get__(\"pageParamsRegex\")\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_get__(\"RouteHierarchy\"));\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"trimEndSlash\":\n      return trimEndSlash;\n    case \"getRoutes\":\n      return getRoutes;\n    case \"getCurrentPageId\":\n      return getCurrentPageId;\n    case \"find\":\n      return (lodash_find__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"replaceUrlParams\":\n      return _replaceUrlParams__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    case \"getUrlWithoutStartSlash\":\n      return _reactComponents_menu_navMenuHelper__WEBPACK_IMPORTED_MODULE_2__.getUrlWithoutStartSlash;\n    case \"getCurrentRoute\":\n      return getCurrentRoute;\n    case \"getRouteHierarchy\":\n      return getRouteHierarchy;\n    case \"matchRoutesByPage\":\n      return matchRoutesByPage;\n    case \"replaceDynamicParams\":\n      return replaceDynamicParams;\n    case \"matchDynamicUrlPath\":\n      return matchDynamicUrlPath;\n    case \"isSamePage\":\n      return isSamePage;\n    case \"getCurrentRouteHierarchy\":\n      return getCurrentRouteHierarchy;\n    case \"getCurrentUrlForPageId\":\n      return getCurrentUrlForPageId;\n    case \"getRouteHierarchyAndAllMatchingPages\":\n      return getRouteHierarchyAndAllMatchingPages;\n    case \"pageParamsRegex\":\n      return pageParamsRegex;\n    case \"RouteHierarchy\":\n      return RouteHierarchy;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof RouteHierarchy;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(RouteHierarchy, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(RouteHierarchy)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/sdl-react/helpers/RouteHierarchy.js_uiComponentLibrary\n");

/***/ }),

/***/ "./node_modules/@c3/sdl-react/helpers/replaceUrlParams.js_uiComponentLibrary":
/*!****************************************************************!*\
  !*** ./node_modules/@c3/sdl-react/helpers/replaceUrlParams.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (/* binding */ replaceUrlParams)\n/* harmony export */ });\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/each */ \"webpack/sharing/consume/default/lodash/each/lodash/each_uiComponentLibrary\");\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_each__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isString */ \"webpack/sharing/consume/default/lodash/isString/lodash/isString_uiComponentLibrary\");\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_1__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\nfunction replaceUrlParams(url, pageParams) {\n  var matcher = /{{[\\s]*([\\w]+)[\\s]*}}/g;\n  var paramMatches = _get__(\"isString\")(url) ? url.match(matcher) : null;\n  if (paramMatches) {\n    _get__(\"each\")(paramMatches, function (token) {\n      var paramName = token.replace(/{{\\s*/, '').replace(/\\s*}}/, '');\n      url = url.replace(token, pageParams[paramName]);\n    });\n  }\n  return url;\n}\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"isString\":\n      return (lodash_isString__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"each\":\n      return (lodash_each__WEBPACK_IMPORTED_MODULE_0___default());\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof replaceUrlParams;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(replaceUrlParams, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(replaceUrlParams)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/sdl-react/helpers/replaceUrlParams.js_uiComponentLibrary\n");

/***/ }),

/***/ "./node_modules/@c3/sdl-react/reactComponents/menu/navMenuHelper.js_uiComponentLibrary":
/*!**************************************************************************!*\
  !*** ./node_modules/@c3/sdl-react/reactComponents/menu/navMenuHelper.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getRouteFromFirstItem: () => (/* binding */ getRouteFromFirstItem),\n/* harmony export */   getUrlWithoutStartSlash: () => (/* binding */ getUrlWithoutStartSlash),\n/* harmony export */   isAnyActiveItemInItems: () => (/* binding */ isAnyActiveItemInItems),\n/* harmony export */   isItemActive: () => (/* binding */ isItemActive)\n/* harmony export */ });\n/* harmony import */ var lodash_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isArray */ \"webpack/sharing/consume/default/lodash/isArray/lodash/isArray_uiComponentLibrary\");\n/* harmony import */ var lodash_isArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isArray__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n/**\n * Helper methods for SDLNavMenu\n */\n\n\n\n/**\n * Check if the item is active based on the current route\n * @param {Object} item\n *                   The item to check if active\n * @param {String} currentRoute\n *                   The current route to compare with\n * @param {Object[]} uiRouteHierarchy\n *                   The route hierarchy at the current context\n * @return {Boolean} True if the item's url path is the same as the current path\n */\nconst isItemActive = (item, currentRoute, uiRouteHierarchy) => {\n  var _item$redirectRoute;\n  let active = false;\n  if (!item) return false;\n  if (item.active) return true;\n\n  // Check if the item's urlPath is the same as the current path\n  if ((_item$redirectRoute = item.redirectRoute) !== null && _item$redirectRoute !== void 0 && _item$redirectRoute.urlPath) {\n    const urlPathWithoutStartSlash = _get__(\"getUrlWithoutStartSlash\")(item.redirectRoute.urlPath);\n    active = urlPathWithoutStartSlash === currentRoute;\n  }\n  if (!active && uiRouteHierarchy) {\n    var _item$redirectRoute2;\n    // Check if the item's urlPath is in the route hierarchy\n    if ((_item$redirectRoute2 = item.redirectRoute) !== null && _item$redirectRoute2 !== void 0 && _item$redirectRoute2.urlPath) {\n      const urlPathWithoutStartSlash = _get__(\"getUrlWithoutStartSlash\")(item.redirectRoute.urlPath);\n      active = uiRouteHierarchy.map(function (obj) {\n        return obj.urlPath;\n      }).includes(urlPathWithoutStartSlash);\n    }\n  }\n  return active;\n};\n\n/**\n * Check if any item is active in the item's items\n * @param {Object} item\n *                   The item to check if it has any items which is active\n * @param {String} currentRoute\n *                   The current route to compare with\n * @param {Object[]} uiRouteHierarchy\n *                   The route hierarchy at the current context\n * @return {Boolean} True if any item is active in the item's items\n */\nconst isAnyActiveItemInItems = (item, currentRoute, uiRouteHierarchy) => {\n  let active = false;\n  if (item && _get__(\"isArray\")(item.items)) {\n    let i = 0;\n    while (!active && i < item.items.length) {\n      let currentItem = item.items[i];\n      if (currentItem.items) {\n        active = _get__(\"isAnyActiveItemInItems\")(currentItem, currentRoute, uiRouteHierarchy);\n      } else {\n        active = _get__(\"isItemActive\")(currentItem, currentRoute, uiRouteHierarchy);\n      }\n      i++;\n    }\n  }\n  return active;\n};\n\n/**\n * Get the route from the first item in the item's items\n * @param {Object} item\n *                   The item which we are getting the route from\n * @return {Object} The route if it's found from its first item\n */\nconst getRouteFromFirstItem = item => {\n  if (item && _get__(\"isArray\")(item.items) && item.items.length > 0) {\n    const firstItem = item.items[0];\n    if (firstItem.redirectRoute) {\n      return firstItem.redirectRoute;\n    } else if (firstItem.items) {\n      return _get__(\"getRouteFromFirstItem\")(firstItem);\n    }\n  }\n  return;\n};\n\n/**\n * Json configuration for route may use direct url (starts with `/`),\n * but nav menu assumes path is a relative path.\n * Removing the '/' prefix to match the configuration.\n */\nconst getUrlWithoutStartSlash = url => {\n  return url !== null && url !== void 0 && url.startsWith('/') ? url.slice(1) : url;\n};\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getUrlWithoutStartSlash\":\n      return getUrlWithoutStartSlash;\n    case \"isArray\":\n      return (lodash_isArray__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"isAnyActiveItemInItems\":\n      return isAnyActiveItemInItems;\n    case \"isItemActive\":\n      return isItemActive;\n    case \"getRouteFromFirstItem\":\n      return getRouteFromFirstItem;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/sdl-react/reactComponents/menu/navMenuHelper.js_uiComponentLibrary\n");

/***/ }),

/***/ "./node_modules/@c3/ui/UiSdlBreadcrumbs.ts_uiComponentLibrary":
/*!*************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlBreadcrumbs.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   actionCreators: () => (/* binding */ actionCreators),\n/* harmony export */   breadcrumbLinkClickEpic: () => (/* binding */ breadcrumbLinkClickEpic),\n/* harmony export */   breadcrumbLoadFromRouteReducer: () => (/* binding */ breadcrumbLoadFromRouteReducer),\n/* harmony export */   breadcrumbUpdateEffect: () => (/* binding */ breadcrumbUpdateEffect),\n/* harmony export */   clickBreadcrumbAction: () => (/* binding */ clickBreadcrumbAction),\n/* harmony export */   clickNextButtonAction: () => (/* binding */ clickNextButtonAction),\n/* harmony export */   clickPreviousButtonAction: () => (/* binding */ clickPreviousButtonAction),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   doDataMerge: () => (/* binding */ doDataMerge),\n/* harmony export */   epics: () => (/* binding */ epics),\n/* harmony export */   getBreadcrumbText: () => (/* binding */ getBreadcrumbText),\n/* harmony export */   getBreadcrumbsFromRoutes: () => (/* binding */ getBreadcrumbsFromRoutes),\n/* harmony export */   getPageParamsFromUiRoute: () => (/* binding */ getPageParamsFromUiRoute),\n/* harmony export */   loadBreadcrumbFromRoutesAction: () => (/* binding */ loadBreadcrumbFromRoutesAction),\n/* harmony export */   nextPreviousButtonStateUpdateEffect: () => (/* binding */ nextPreviousButtonStateUpdateEffect),\n/* harmony export */   reducers: () => (/* binding */ reducers),\n/* harmony export */   registerTriggersAction: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__.registerTriggersAction),\n/* harmony export */   renderInitialAction: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__.renderInitialAction),\n/* harmony export */   triggersRegisterEffect: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__.triggersRegisterEffect),\n/* harmony export */   updateBreadcrumbAction: () => (/* binding */ updateBreadcrumbAction),\n/* harmony export */   updateNextPreviousButtonStateAction: () => (/* binding */ updateNextPreviousButtonStateAction)\n/* harmony export */ });\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEmpty */ \"webpack/sharing/consume/default/lodash/isEmpty/lodash/isEmpty_uiComponentLibrary\");\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/pick */ \"webpack/sharing/consume/default/lodash/pick/lodash/pick_uiComponentLibrary\");\n/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/set */ \"webpack/sharing/consume/default/lodash/set/lodash/set_uiComponentLibrary\");\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_set__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/keys */ \"webpack/sharing/consume/default/lodash/keys/lodash/keys_uiComponentLibrary\");\n/* harmony import */ var lodash_keys__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_keys__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/each */ \"webpack/sharing/consume/default/lodash/each/lodash/each_uiComponentLibrary\");\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_each__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/get */ \"webpack/sharing/consume/default/lodash/get/lodash/get_uiComponentLibrary\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _c3_ui_UiSdlRouter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @c3/ui/UiSdlRouter */ \"webpack/container/remote/@c3/ui/UiSdlRouter_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlRouter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlRouter__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs_uiComponentLibrary\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _c3_sdl_react_helpers_RouteHierarchy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @c3/sdl-react/helpers/RouteHierarchy */ \"./node_modules/@c3/sdl-react/helpers/RouteHierarchy.js_uiComponentLibrary\");\n/* harmony import */ var _c3_sdl_react_reactComponents_menu_navMenuHelper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @c3/sdl-react/reactComponents/menu/navMenuHelper */ \"./node_modules/@c3/sdl-react/reactComponents/menu/navMenuHelper.js_uiComponentLibrary\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators_uiComponentLibrary\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @c3/ui/UiSdlComponent */ \"webpack/sharing/consume/default/@c3/ui/UiSdlComponent_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction targetPageId(route) {\n  return `${route.targetModuleName}.${route.targetPageName}`;\n}\nfunction doDataMerge(componentId, dataSpecFieldName, dataDestinationFieldName, props, state) {\n  const dataSourcesIds = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n  const temp = {};\n  dataSourcesIds.forEach(function (dataSourceId) {\n    const dataMappingDataSource = dataSourceId.split('_')[1]; // 'breadcrumbDataMapping.' + pageParams\n    if (_get__(\"isEmpty\")(dataMappingDataSource)) {\n      return;\n    }\n    const immutableJSPath = ['dataMap'].concat(dataMappingDataSource.split('.'));\n    const dataSourceValue = _get__(\"getDataFromState\")(dataSourceId, state);\n    const mappings = _get__(\"getConfigFromState\")(componentId, state, [dataSpecFieldName, 'breadcrumbsDataMapping']).toJS();\n    const fieldMapping = mappings === null || mappings === void 0 ? void 0 : mappings[dataMappingDataSource];\n    const fieldName = fieldMapping === null || fieldMapping === void 0 ? void 0 : fieldMapping.fieldName;\n    if (fieldName) {\n      _get__(\"set\")(temp, immutableJSPath, _get__(\"get\")(dataSourceValue, fieldName));\n    }\n  });\n  return temp;\n}\nfunction getPageParamsFromUiRoute(uiRoute) {\n  const initialUrlPath = uiRoute.initialUrlPath;\n  const pageParamsRegex = _get__(\"RouteHierarchy\").pageParamsRegex;\n  const pageParams = initialUrlPath && initialUrlPath.split('/').slice(-1)[0];\n  const pageParamsFound = pageParams && pageParams.match(pageParamsRegex);\n  return pageParamsFound && pageParamsFound[1];\n}\nfunction getBreadcrumbText(uiRoute, state) {\n  var _breadcrumbLabel;\n  const pageId = _get__(\"targetPageId\")(uiRoute);\n  const pageConfig = state && _get__(\"getConfigFromState\")(pageId, state);\n  const pageConfigObj = (pageConfig === null || pageConfig === void 0 ? void 0 : pageConfig.toJS()) || {};\n  const pageParams = _get__(\"getPageParamsFromUiRoute\")(uiRoute);\n  let pageParamsIdentifier;\n  let breadcrumbLabel;\n  if (pageParams) {\n    const routeVariableNames = _get__(\"getRouteVariableNames\")(uiRoute.initialUrlPath);\n    const routeVariablesMap = _get__(\"parseRouteVariables\")(uiRoute.urlPath, uiRoute.initialUrlPath);\n    const lastRouteVariableName = routeVariableNames[routeVariableNames.length - 1];\n    breadcrumbLabel = routeVariablesMap[lastRouteVariableName];\n    pageParamsIdentifier = lastRouteVariableName;\n  } else {\n    const {\n      title\n    } = pageConfigObj;\n    breadcrumbLabel = title || _get__(\"targetPageId\")(uiRoute);\n  }\n  breadcrumbLabel = (_breadcrumbLabel = breadcrumbLabel) === null || _breadcrumbLabel === void 0 ? void 0 : _breadcrumbLabel.replaceAll('%2F', '/');\n  return {\n    text: breadcrumbLabel,\n    pageParamsIdentifier: pageParamsIdentifier\n  };\n}\n\n/**\n * Function to replace all of the pageParams in initialUrlPath with the params as they appear in browser url\n * This helps in cases where the param variable contains /'s since it would otherwise parse incorrectly.\n */\nfunction refactorRoute(uiRoute, currentPath) {\n  let url = uiRoute.initialUrlPath;\n  let firstUrl;\n  let secondUrl;\n  while (url.includes('{{')) {\n    /*\n     * Use \"{{\" because that is how UiSdlRouter checks for a pageParam\n     * Example: url = path/{{id1}}/{{id2}}, currentPath = path/ui%2Fexample%2Furl/example\n     */\n    firstUrl = url.substring(0, url.indexOf('{{')); // FirstUrl = path/ on first run\n    secondUrl = url.substring(url.indexOf('}}') + 2); // SecondUrl = /{{id2}} on first run\n    let end = currentPath.substring(firstUrl.length).indexOf('/'); // End = \"ui%2Fexample%2Furl\".length\n    // url = path/ui%2Fexample%2Furl/{{id2}} rather than what used to be path/ui/example/url/example, which breaks pageParam patterns\n    url = firstUrl + currentPath.substring(firstUrl.length, end > -1 ? firstUrl.length + end : currentPath.length) + secondUrl;\n  }\n  uiRoute.urlPath = url;\n  return uiRoute;\n}\nfunction getBreadcrumbsFromRoutes(state, routes, componentId) {\n  var _state$getIn;\n  const params = (_state$getIn = state.getIn(['pageParams'])) === null || _state$getIn === void 0 ? void 0 : _state$getIn.toJS();\n\n  /**\n   * Encode for pageParams that have \"/\" in between\n   * TODO: UI-11648 Fix UiSdlBreacrumbs don't show text for pageParam with \"/\" in between\n   */\n  _get__(\"each\")(_get__(\"keys\")(params), param => {\n    params[param] = encodeURIComponent(params[param]);\n  });\n\n  // The current path should be provided in `UiSdlSiteReact.tsx` to solve the issue of redirecting occurred in the site containers\n  const currentPath = state.getIn(['currentPath']) || _get__(\"RouteHierarchy\").getCurrentRoute();\n  let uiRouteHierarchy = _get__(\"RouteHierarchy\").getRouteHierarchy(routes, currentPath, params);\n\n  // Breadcrumbs should not show up while on the top level of the route hierarchy as there is already a page title.\n  if (uiRouteHierarchy.length <= 1) {\n    return [];\n  }\n  if (!_get__(\"getConfigFromState\")(componentId, state, ['includeRootRoute'])) {\n    uiRouteHierarchy = uiRouteHierarchy.filter(route => route.urlPath != '/' && route.urlPath != '');\n  }\n  return uiRouteHierarchy.map(uiRoute => {\n    if (uiRoute.initialUrlPath.includes('{{') && currentPath.includes('%2F')) {\n      uiRoute = _get__(\"refactorRoute\")(uiRoute, currentPath);\n    }\n    if (uiRoute.urlPath && !uiRoute.urlPath.startsWith('/') && uiRoute.initialUrlPath && uiRoute.initialUrlPath.startsWith('/')) {\n      uiRoute.urlPath = '/' + uiRoute.urlPath;\n    }\n    const text = _get__(\"getBreadcrumbText\")(uiRoute, state);\n\n    // Extract the pageParams in the urlPath\n    const pageParamsInUrlPath = _get__(\"getRouteVariableNames\")(uiRoute.initialUrlPath);\n\n    /*\n     * Out of all the known page params in the route hierarchy, only add the page params that\n     * are present in the current route.\n     */\n    const pageParamsInUrlPathMapping = _get__(\"pick\")(params, pageParamsInUrlPath);\n    return {\n      link: _get__(\"getUrlWithoutStartSlash\")(uiRoute.urlPath),\n      params: pageParamsInUrlPathMapping,\n      /*\n       * `initialUrlPath` still contains wild card params such as users/{{id}} and should be used for the\n       * breadcrumbClickAction.  The link should handle by the normal UiHistoryRouter while the route should be handled\n       * by the UiAsyncEffect internal redirecting logic which is handled by UiSiteContainer.  This logic relies on the\n       * wild card route to find the matching UiRoute and associated page metadata to render.\n       */\n      route: uiRoute.initialUrlPath,\n      text: text.text,\n      pageParamsIdentifier: text.pageParamsIdentifier\n    };\n  });\n}\nfunction updateBreadcrumbAction(id, breadcrumbs) {\n  return {\n    type: id + '.BREADCRUMB_UPDATE',\n    payload: {\n      breadcrumbs: breadcrumbs,\n      componentId: id\n    }\n  };\n}\nfunction clickBreadcrumbAction(id, index, config) {\n  return {\n    type: id + '.BREADCRUMB_LINK_CLICK',\n    payload: {\n      // Route should still contain wildcard params such as: users/{{id}}\n      url: config.route,\n      params: config.params,\n      componentId: id\n    }\n  };\n}\nfunction clickNextButtonAction(id, event) {\n  return {\n    type: id + '.NEXT_BUTTON_CLICK',\n    payload: {\n      event: event,\n      componentId: id\n    }\n  };\n}\nfunction clickPreviousButtonAction(id, event) {\n  return {\n    type: id + '.PREVIOUS_BUTTON_CLICK',\n    payload: {\n      event: event,\n      componentId: id\n    }\n  };\n}\nfunction updateNextPreviousButtonStateAction(id, payload) {\n  payload.componentId = payload.componentId || id;\n  return {\n    type: id + '.NEXT_PREVIOUS_BUTTON_STATE_UPDATE',\n    payload: payload\n  };\n}\nfunction loadBreadcrumbFromRoutesAction(id, routes) {\n  return {\n    type: id + '.BREADCRUMB_LOAD_FROM_ROUTE',\n    payload: {\n      componentId: id,\n      routes: routes\n    }\n  };\n}\nfunction breadcrumbUpdateEffect(state, action) {\n  const payload = action.payload;\n  return _get__(\"setConfigInState\")(payload.componentId, state, ['breadcrumbs'], payload.breadcrumbs);\n}\nfunction nextPreviousButtonStateUpdateEffect(state, action) {\n  const payload = action.payload;\n  state = _get__(\"setConfigInState\")(payload.componentId, state, ['disableNextButton'], payload.disableNextButton);\n  return _get__(\"setConfigInState\")(payload.componentId, state, ['disablePreviousButton'], payload.disablePreviousButton);\n}\nfunction breadcrumbLoadFromRouteReducer(state, action) {\n  const {\n    componentId,\n    routes\n  } = action.payload;\n  const breadcrumbs = _get__(\"getBreadcrumbsFromRoutes\")(state, routes, componentId);\n  return _get__(\"setConfigInState\")(componentId, state, ['breadcrumbs'], breadcrumbs);\n}\nconst breadcrumbLinkClickEpic = (actionStream, stateStream) => {\n  return actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n    var _get__2;\n    const componentId = action.payload.componentId;\n    const routes = (_get__2 = _get__(\"getConfigFromState\")(action.meta.siteId, stateStream.value, ['routes'])) === null || _get__2 === void 0 ? void 0 : _get__2.toJS();\n    return _get__(\"of\")({\n      type: 'GLOBAL_REDIRECT',\n      payload: action.payload\n    }, _get__(\"loadBreadcrumbFromRoutesAction\")(componentId, routes));\n  }));\n};\n\n\n\n\n\n\nconst epics = {\n  ..._get__(\"epics0\"),\n  BREADCRUMB_LINK_CLICK: _get__(\"breadcrumbLinkClickEpic\")\n};\nconst reducers = {\n  ..._get__(\"reducers0\"),\n  BREADCRUMB_UPDATE: _get__(\"breadcrumbUpdateEffect\"),\n  NEXT_PREVIOUS_BUTTON_STATE_UPDATE: _get__(\"nextPreviousButtonStateUpdateEffect\"),\n  BREADCRUMB_LOAD_FROM_ROUTE: _get__(\"breadcrumbLoadFromRouteReducer\")\n};\nconst actionCreators = {\n  ..._get__(\"actionCreators0\"),\n  updateBreadcrumbAction: _get__(\"updateBreadcrumbAction\"),\n  clickBreadcrumbAction: _get__(\"clickBreadcrumbAction\"),\n  clickNextButtonAction: _get__(\"clickNextButtonAction\"),\n  clickPreviousButtonAction: _get__(\"clickPreviousButtonAction\"),\n  updateNextPreviousButtonStateAction: _get__(\"updateNextPreviousButtonStateAction\"),\n  loadBreadcrumbFromRoutesAction: _get__(\"loadBreadcrumbFromRoutesAction\")\n};\nconst defaultValues = {\n  \"triggersRegistered\": false,\n  \"wrapWithMetadataId\": false,\n  \"includeRootRoute\": true,\n  \"internalRedirect\": false,\n  \"visibleLevels\": 4\n};\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getAllComponentDataSourceIds\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6__.getAllComponentDataSourceIds;\n    case \"isEmpty\":\n      return (lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"getDataFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6__.getDataFromState;\n    case \"getConfigFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6__.getConfigFromState;\n    case \"set\":\n      return (lodash_set__WEBPACK_IMPORTED_MODULE_2___default());\n    case \"get\":\n      return (lodash_get__WEBPACK_IMPORTED_MODULE_5___default());\n    case \"RouteHierarchy\":\n      return _c3_sdl_react_helpers_RouteHierarchy__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n    case \"targetPageId\":\n      return targetPageId;\n    case \"getPageParamsFromUiRoute\":\n      return getPageParamsFromUiRoute;\n    case \"getRouteVariableNames\":\n      return _c3_ui_UiSdlRouter__WEBPACK_IMPORTED_MODULE_7__.getRouteVariableNames;\n    case \"parseRouteVariables\":\n      return _c3_ui_UiSdlRouter__WEBPACK_IMPORTED_MODULE_7__.parseRouteVariables;\n    case \"each\":\n      return (lodash_each__WEBPACK_IMPORTED_MODULE_4___default());\n    case \"keys\":\n      return (lodash_keys__WEBPACK_IMPORTED_MODULE_3___default());\n    case \"refactorRoute\":\n      return refactorRoute;\n    case \"getBreadcrumbText\":\n      return getBreadcrumbText;\n    case \"pick\":\n      return (lodash_pick__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"getUrlWithoutStartSlash\":\n      return _c3_sdl_react_reactComponents_menu_navMenuHelper__WEBPACK_IMPORTED_MODULE_10__.getUrlWithoutStartSlash;\n    case \"setConfigInState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_6__.setConfigInState;\n    case \"getBreadcrumbsFromRoutes\":\n      return getBreadcrumbsFromRoutes;\n    case \"mergeMap\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.mergeMap;\n    case \"of\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_8__.of;\n    case \"loadBreadcrumbFromRoutesAction\":\n      return loadBreadcrumbFromRoutesAction;\n    case \"epics0\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__.epics;\n    case \"breadcrumbLinkClickEpic\":\n      return breadcrumbLinkClickEpic;\n    case \"reducers0\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__.reducers;\n    case \"breadcrumbUpdateEffect\":\n      return breadcrumbUpdateEffect;\n    case \"nextPreviousButtonStateUpdateEffect\":\n      return nextPreviousButtonStateUpdateEffect;\n    case \"breadcrumbLoadFromRouteReducer\":\n      return breadcrumbLoadFromRouteReducer;\n    case \"actionCreators0\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_12__.actionCreators;\n    case \"updateBreadcrumbAction\":\n      return updateBreadcrumbAction;\n    case \"clickBreadcrumbAction\":\n      return clickBreadcrumbAction;\n    case \"clickNextButtonAction\":\n      return clickNextButtonAction;\n    case \"clickPreviousButtonAction\":\n      return clickPreviousButtonAction;\n    case \"updateNextPreviousButtonStateAction\":\n      return updateNextPreviousButtonStateAction;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlBreadcrumbs.ts_uiComponentLibrary\n");

/***/ })

}]);