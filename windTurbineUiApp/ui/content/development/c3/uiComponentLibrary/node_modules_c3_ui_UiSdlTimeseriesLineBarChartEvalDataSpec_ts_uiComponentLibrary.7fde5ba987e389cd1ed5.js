"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlTimeseriesLineBarChartEvalDataSpec_ts_uiComponentLibrary"],{

/***/ "./node_modules/@c3/ui/UiSdlTimeseriesLineBarChartEvalDataSpec.ts_uiComponentLibrary":
/*!************************************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlTimeseriesLineBarChartEvalDataSpec.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   applyDataTransforms: () => (/* reexport safe */ _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_8__.applyDataTransforms),\n/* harmony export */   applyTransformArgs: () => (/* reexport safe */ _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_8__.applyTransformArgs),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   generateFilterFromContextVars: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.generateFilterFromContextVars),\n/* harmony export */   generateFilterFromDataPathAndContextVars: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.generateFilterFromDataPathAndContextVars),\n/* harmony export */   getDataTypeName: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.getDataTypeName),\n/* harmony export */   recursivelyGetField: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.recursivelyGetField),\n/* harmony export */   toPartiallyAppliedActions: () => (/* binding */ toPartiallyAppliedActions),\n/* harmony export */   toPartiallyAppliedAdvancedActions: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.toPartiallyAppliedAdvancedActions)\n/* harmony export */ });\n/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/uniq */ \"webpack/sharing/consume/default/lodash/uniq/lodash/uniq_uiComponentLibrary\");\n/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEqual */ \"webpack/sharing/consume/default/lodash/isEqual/lodash/isEqual_uiComponentLibrary\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlComponentDataSpec */ \"webpack/container/remote/@c3/ui/UiSdlComponentDataSpec_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartXAxisConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @c3/ui/UiSdlTimeseriesLineBarChartXAxisConfig */ \"webpack/container/remote/@c3/ui/UiSdlTimeseriesLineBarChartXAxisConfig_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartXAxisConfig__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTimeseriesLineBarChartXAxisConfig__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartXAxisStaticConfig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @c3/ui/UiSdlTimeseriesLineBarChartXAxisStaticConfig */ \"webpack/container/remote/@c3/ui/UiSdlTimeseriesLineBarChartXAxisStaticConfig_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartXAxisStaticConfig__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTimeseriesLineBarChartXAxisStaticConfig__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _c3_ui_Interval__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @c3/ui/Interval */ \"webpack/container/remote/@c3/ui/Interval_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_Interval__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_Interval__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _c3_ui_UiSdlDateTime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/ui/UiSdlDateTime */ \"webpack/container/remote/@c3/ui/UiSdlDateTime_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlDateTime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDateTime__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @c3/ui/UiSdlTimeseriesLineBarChartDataSpec */ \"webpack/container/remote/@c3/ui/UiSdlTimeseriesLineBarChartDataSpec_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @c3/ui/WithDataTransforms */ \"webpack/sharing/consume/default/@c3/ui/WithDataTransforms_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_8__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Takes a date or string representing relative time and returns its ISO 8601 string representation.\n *\n * @param dateObj An object representing a date or relative date\n *\n * @returns A string representing the date in  ISO 8601 format\n */\nconst dateToString = (date, axisType, start) => {\n  let dateString;\n\n  // If the date is static and we have a value, use the value (string or Date)\n  if (date && axisType === 'UiSdlTimeseriesLineBarChartXAxisStaticConfig') {\n    if (date instanceof Date) {\n      dateString = new (_get__(\"DateTime\"))(date.toISOString()).toString();\n    } else {\n      dateString = new (_get__(\"DateTime\"))(date).toString();\n    }\n  } else {\n    /*\n     * If the date should not be a static value, it should be a string, use getStartDate andgetEndDate\n     * When the date is not specified, we also use this logic to provide a default.\n     */\n    if (date instanceof Date) {\n      throw new Error('Chart axis specified a date but it is not using UiSdlTimeseriesLineBarChartXAxisStaticConfig, ' + 'please use a valid value as specified in UiSdlTimeseriesLineBarChartStartDate or UiSdlTimeseriesLineBarChartEndDate');\n    }\n    if (start) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      dateString = _get__(\"getStartDate\")(date).toString();\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      dateString = _get__(\"getEndDate\")(date).toString();\n    }\n  }\n  return dateString;\n};\nfunction toPartiallyAppliedActions(dataSpec, config) {\n  var _config$xAxis, _config$xAxis2, _config$xAxis3, _config$xAxis4, _config$xAxis5;\n  const evalProjections = {};\n  const {\n    tunnelConfiguration,\n    contextVars,\n    disableContextVarsFilter\n  } = dataSpec;\n  const startDate = (_config$xAxis = config.xAxis) === null || _config$xAxis === void 0 ? void 0 : _config$xAxis.startDate;\n  const endDate = (_config$xAxis2 = config.xAxis) === null || _config$xAxis2 === void 0 ? void 0 : _config$xAxis2.endDate;\n  const interval = ((_config$xAxis3 = config.xAxis) === null || _config$xAxis3 === void 0 ? void 0 : _config$xAxis3.interval) || (((_config$xAxis4 = config.xAxis) === null || _config$xAxis4 === void 0 ? void 0 : _config$xAxis4.type) === 'UiSdlTimeseriesLineBarChartXAxisConfig' ? _get__(\"defaultXAxisProps\").interval : ((_config$xAxis5 = config.xAxis) === null || _config$xAxis5 === void 0 ? void 0 : _config$xAxis5.type) === 'UiSdlTimeseriesLineBarChartXAxisStaticConfig' ? _get__(\"defaultStaticXAxisProps\").interval : _get__(\"Interval\").DAY);\n  const noTimeZoneConversion = config.noTimeZoneConversion;\n  const defaultDataType = _get__(\"getDataTypeName\")(dataSpec);\n  const evalActionName = 'eval';\n  const typeForProjection = {};\n  let filter = null;\n  filter = _get__(\"generateFilterFromContextVars\")(filter, contextVars, disableContextVarsFilter !== null && disableContextVarsFilter !== void 0 ? disableContextVarsFilter : false);\n  dataSpec && dataSpec.yAxisFields && dataSpec.yAxisFields.map(function (yAxisField) {\n    let typeName = '';\n    if (yAxisField.dataType) {\n      typeName = yAxisField.dataType;\n    } else if (dataSpec.dataType) {\n      typeName = _get__(\"getDataTypeName\")(dataSpec);\n    }\n    let projectionName = yAxisField.evalSpec.projection;\n    let ids = yAxisField.evalSpec.ids;\n    const projectionKey = projectionName + typeName + (ids === null || ids === void 0 ? void 0 : ids.toString());\n    const evalSpec = yAxisField.evalSpec;\n    if (!(projectionKey in evalProjections)) {\n      evalProjections[projectionKey] = evalSpec;\n    }\n    typeForProjection[evalActionName + projectionKey] = yAxisField.dataType || defaultDataType;\n  });\n  const partiallyAppliedActions = [];\n  const specs = [];\n  Object.keys(evalProjections).forEach(function (evalProjection, index) {\n    const projection = evalProjections[evalProjection];\n\n    // Projections with the same ids and unit can be grouped into the same evalProjections action\n    const similarEvalProjectionActionIndex = specs.findIndex(s => _get__(\"isEqual\")(s.ids, projection.ids) && _get__(\"isEqual\")(s.unitId, projection.unitId));\n    if (similarEvalProjectionActionIndex > -1) {\n      const evalSpec = specs[similarEvalProjectionActionIndex];\n      evalSpec.projection += ', ' + projection.projection;\n    } else {\n      var _config$xAxis6, _config$xAxis7, _config$xAxis8, _projection$ids;\n      let firstOfYear = _get__(\"dateToString\")(startDate, config === null || config === void 0 || (_config$xAxis6 = config.xAxis) === null || _config$xAxis6 === void 0 ? void 0 : _config$xAxis6.type, true).substring(0, 4) + '-01-01T00:00';\n      // Get the minutes off from UTC\n      let minuteOffset = -1 * new Date(firstOfYear).getTimezoneOffset();\n      // Create a DateTime at the correct time zone.\n      let firstDateTime = new (_get__(\"DateTime\"))(firstOfYear).withZoneOffsetMinutes(minuteOffset);\n      const evalSpec = {\n        end: _get__(\"dateToString\")(endDate, config === null || config === void 0 || (_config$xAxis7 = config.xAxis) === null || _config$xAxis7 === void 0 ? void 0 : _config$xAxis7.type, false),\n        interval: interval,\n        start: _get__(\"dateToString\")(startDate, config === null || config === void 0 || (_config$xAxis8 = config.xAxis) === null || _config$xAxis8 === void 0 ? void 0 : _config$xAxis8.type, true),\n        /*\n         * TODO: PLAT-56154: [v8] Fix Daylight Savings in UiSdlTimeseriesLineBarChart if daylight savings ceases\n         * If using year interval, make sure to use timezone used at the location at the first of the year.\n         */\n        timeZone: noTimeZoneConversion ? 'NONE' : interval == 'YEAR' ? firstDateTime.toString('ZZ') : new (_get__(\"DateTime\"))().toString('ZZ'),\n        ...projection\n      };\n      if (((_projection$ids = projection.ids) === null || _projection$ids === void 0 ? void 0 : _projection$ids.length) > 0) {\n        projection.ids = _get__(\"uniq\")(projection.ids);\n        evalSpec.ids = projection.ids;\n      }\n      const type = typeForProjection[evalActionName + evalProjection];\n      specs.push(evalSpec);\n      const evalAction = {\n        typeName: 'UiSdlEvalCollect',\n        actionName: 'evalAndCollect',\n        args: {\n          spec: evalSpec,\n          type: type\n        }\n      };\n      partiallyAppliedActions.push({\n        actionId: 'eval' + index,\n        contextVars,\n        tunnelConfiguration,\n        partiallyAppliedAction: evalAction\n      });\n    }\n  });\n  return partiallyAppliedActions;\n}\n\n\n\n\n\n\n\nconst defaultValues = {\n  \"dataTransforms\": [\"UiSdlTransformDataToUiSdlChartData\", \"UiSdlTransformUiSdlChartDataToEChartConfig\"],\n  \"disableDataRequestOnFirstRender\": false,\n  \"dataSpecDependence\": [{\n    \"configField\": \"xAxis.interval\",\n    \"argumentSpecField\": \"interval\"\n  }, {\n    \"configField\": \"xAxis.startDate\",\n    \"argumentSpecField\": \"start\",\n    \"transformFunction\": \"getStartDate\"\n  }, {\n    \"configField\": \"xAxis.endDate\",\n    \"argumentSpecField\": \"end\",\n    \"transformFunction\": \"getEndDate\"\n  }]\n};\n\n\n\n\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"DateTime\":\n      return (_c3_ui_UiSdlDateTime__WEBPACK_IMPORTED_MODULE_6___default());\n    case \"getStartDate\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_7__.getStartDate;\n    case \"getEndDate\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_7__.getEndDate;\n    case \"defaultXAxisProps\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartXAxisConfig__WEBPACK_IMPORTED_MODULE_3__.defaultValues;\n    case \"defaultStaticXAxisProps\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartXAxisStaticConfig__WEBPACK_IMPORTED_MODULE_4__.defaultValues;\n    case \"Interval\":\n      return (_c3_ui_Interval__WEBPACK_IMPORTED_MODULE_5___default());\n    case \"getDataTypeName\":\n      return _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.getDataTypeName;\n    case \"generateFilterFromContextVars\":\n      return _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_2__.generateFilterFromContextVars;\n    case \"isEqual\":\n      return (lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"dateToString\":\n      return dateToString;\n    case \"uniq\":\n      return (lodash_uniq__WEBPACK_IMPORTED_MODULE_0___default());\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlTimeseriesLineBarChartEvalDataSpec.ts_uiComponentLibrary\n");

/***/ })

}]);