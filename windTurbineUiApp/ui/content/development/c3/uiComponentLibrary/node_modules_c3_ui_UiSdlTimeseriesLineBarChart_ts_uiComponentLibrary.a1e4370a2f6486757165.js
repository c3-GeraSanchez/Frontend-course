"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlTimeseriesLineBarChart_ts_uiComponentLibrary"],{

/***/ "./node_modules/@c3/ui/UiSdlTimeseriesLineBarChart.ts_uiComponentLibrary":
/*!************************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlTimeseriesLineBarChart.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   actionCreators: () => (/* binding */ actionCreators),\n/* harmony export */   advancedFilterSubmitEpic: () => (/* reexport safe */ _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__.advancedFilterSubmitEpic),\n/* harmony export */   changeLabelVisibilityAction: () => (/* reexport safe */ _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__.changeLabelVisibilityAction),\n/* harmony export */   clearDataSourcesAction: () => (/* binding */ clearDataSourcesAction),\n/* harmony export */   clickChartAction: () => (/* reexport safe */ _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__.clickChartAction),\n/* harmony export */   dataFilterUpdateEpic: () => (/* binding */ dataFilterUpdateEpic),\n/* harmony export */   dataSourcesClearReducer: () => (/* binding */ dataSourcesClearReducer),\n/* harmony export */   dataZoomEndValueUpdateReducer: () => (/* binding */ dataZoomEndValueUpdateReducer),\n/* harmony export */   dataZoomStartValueUpdateReducer: () => (/* binding */ dataZoomStartValueUpdateReducer),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   displayDateUpdateReducer: () => (/* binding */ displayDateUpdateReducer),\n/* harmony export */   doDataMerge: () => (/* binding */ doDataMerge),\n/* harmony export */   epics: () => (/* binding */ epics),\n/* harmony export */   filterSubmitEpic: () => (/* binding */ filterSubmitEpic),\n/* harmony export */   generateFilterString: () => (/* reexport safe */ _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.generateFilterString),\n/* harmony export */   generateFilterStringElem: () => (/* reexport safe */ _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.generateFilterStringElem),\n/* harmony export */   generateSpec: () => (/* binding */ generateSpec),\n/* harmony export */   getEventDataSourceIndex: () => (/* binding */ getEventDataSourceIndex),\n/* harmony export */   getIndexedEventDataSourceIds: () => (/* binding */ getIndexedEventDataSourceIds),\n/* harmony export */   getRelevantFieldValues: () => (/* reexport safe */ _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.getRelevantFieldValues),\n/* harmony export */   hiddenSeriesUpdateEffect: () => (/* reexport safe */ _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__.hiddenSeriesUpdateEffect),\n/* harmony export */   labelVisibilityChangeReducer: () => (/* reexport safe */ _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__.labelVisibilityChangeReducer),\n/* harmony export */   lineBarChartInitialRenderEpic: () => (/* binding */ lineBarChartInitialRenderEpic),\n/* harmony export */   reducers: () => (/* binding */ reducers),\n/* harmony export */   registerTriggersAction: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__.registerTriggersAction),\n/* harmony export */   renderInitialAction: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__.renderInitialAction),\n/* harmony export */   transformFieldNameForComponentBinding: () => (/* reexport safe */ _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.transformFieldNameForComponentBinding),\n/* harmony export */   triggersRegisterEffect: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__.triggersRegisterEffect),\n/* harmony export */   updateDataFilterAction: () => (/* binding */ updateDataFilterAction),\n/* harmony export */   updateDataZoomEndValueAction: () => (/* binding */ updateDataZoomEndValueAction),\n/* harmony export */   updateDataZoomStartValueAction: () => (/* binding */ updateDataZoomStartValueAction),\n/* harmony export */   updateDisplayDateAction: () => (/* binding */ updateDisplayDateAction),\n/* harmony export */   updateHiddenSeriesAction: () => (/* reexport safe */ _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__.updateHiddenSeriesAction),\n/* harmony export */   updateTitleAction: () => (/* reexport safe */ _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.updateTitleAction),\n/* harmony export */   updateTitleReducer: () => (/* reexport safe */ _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.updateTitleReducer),\n/* harmony export */   updateXAxisAction: () => (/* reexport safe */ _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.updateXAxisAction),\n/* harmony export */   updateXAxisReducer: () => (/* reexport safe */ _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.updateXAxisReducer),\n/* harmony export */   updateYAxisAction: () => (/* reexport safe */ _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.updateYAxisAction),\n/* harmony export */   updateYAxisReducer: () => (/* reexport safe */ _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.updateYAxisReducer)\n/* harmony export */ });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators_uiComponentLibrary\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs_uiComponentLibrary\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isEmpty */ \"webpack/sharing/consume/default/lodash/isEmpty/lodash/isEmpty_uiComponentLibrary\");\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/uniq */ \"webpack/sharing/consume/default/lodash/uniq/lodash/uniq_uiComponentLibrary\");\n/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/flatten */ \"webpack/sharing/consume/default/lodash/flatten/lodash/flatten_uiComponentLibrary\");\n/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_flatten__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/each */ \"webpack/sharing/consume/default/lodash/each/lodash/each_uiComponentLibrary\");\n/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_each__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/map */ \"webpack/sharing/consume/default/lodash/map/lodash/map_uiComponentLibrary\");\n/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_map__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/cloneDeep */ \"webpack/sharing/consume/default/lodash/cloneDeep/lodash/cloneDeep_uiComponentLibrary\");\n/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash_compact__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/compact */ \"webpack/sharing/consume/default/lodash/compact/lodash/compact_uiComponentLibrary\");\n/* harmony import */ var lodash_compact__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_compact__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @c3/ui/UiSdlDataRedux */ \"webpack/container/remote/@c3/ui/UiSdlDataRedux_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @c3/ui/UiSdlFilterable */ \"webpack/container/remote/@c3/ui/UiSdlFilterable_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _c3_ui_types_pluggables_lineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @c3/ui/types/pluggables/lineBarChartDataSpec */ \"webpack/sharing/consume/default/@c3/ui/types/pluggables/lineBarChartDataSpec/@c3/ui/types/pluggables/lineBarChartDataSpec_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_types_pluggables_lineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_types_pluggables_lineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _c3_ui_UiSdlApplicationState__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @c3/ui/UiSdlApplicationState */ \"webpack/container/remote/@c3/ui/UiSdlApplicationState_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlApplicationState__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlApplicationState__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @c3/ui/UiSdlTimeseriesLineBarChartDataSpec */ \"webpack/container/remote/@c3/ui/UiSdlTimeseriesLineBarChartDataSpec_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartEventDataSpec__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @c3/ui/UiSdlTimeseriesLineBarChartEventDataSpec */ \"webpack/container/remote/@c3/ui/UiSdlTimeseriesLineBarChartEventDataSpec_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlTimeseriesLineBarChartEventDataSpec__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTimeseriesLineBarChartEventDataSpec__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _c3_ui_UiSdlWithTimeZone__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @c3/ui/UiSdlWithTimeZone */ \"webpack/container/remote/@c3/ui/UiSdlWithTimeZone_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlWithTimeZone__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlWithTimeZone__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @c3/ui/UiSdlHideChartSeries */ \"webpack/container/remote/@c3/ui/UiSdlHideChartSeries_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @c3/ui/UiSdlLineBarChart */ \"webpack/container/remote/@c3/ui/UiSdlLineBarChart_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @c3/ui/UiSdlChartActions */ \"webpack/container/remote/@c3/ui/UiSdlChartActions_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @c3/ui/UiSdlComponent */ \"webpack/sharing/consume/default/@c3/ui/UiSdlComponent_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @c3/ui/UiSdlTimeZoneLabel */ \"webpack/container/remote/@c3/ui/UiSdlTimeZoneLabel_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__);\n/*\n * Copyright 2009-2025 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getEventDataSourceIndex(dataSourceId) {\n  // Regex to match 'SDL.TestTimeseriesLineBarChart_fetcheventDataSource2_ds'\n  const targetActionName = _get__(\"EVENT_DATASOURCE\");\n  const pattern = `${targetActionName}(\\\\d+)_ds`;\n  const regex = new RegExp(pattern);\n  const match = dataSourceId.match(regex);\n  if (!match) {\n    return null;\n  }\n  return parseInt(match[1]);\n}\nfunction getIndexedEventDataSourceIds(componentId, state) {\n  const dataSourceIds = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n  const result = {};\n  // Find regex match results for each data source id.\n  dataSourceIds.forEach(dataSourceId => {\n    const eventDataSpecIndex = _get__(\"getEventDataSourceIndex\")(dataSourceId);\n    if (eventDataSpecIndex != null) {\n      result[eventDataSpecIndex] = dataSourceId;\n    }\n  });\n  return result;\n}\nfunction doDataMerge(componentId, dataSpecFieldName, dataDestinationFieldName, props, state) {\n  if (dataSpecFieldName === 'eventDataSpec') {\n    // Merge event data.\n    const dataValue = {};\n    const dataSourceIds = _get__(\"getIndexedEventDataSourceIds\")(componentId, state);\n    Object.keys(dataSourceIds).forEach(eventIndex => {\n      const dataSourceId = dataSourceIds[eventIndex];\n      const dataSourceValue = _get__(\"cloneDeep\")(_get__(\"getDataFromState\")(dataSourceId, state));\n      dataValue[eventIndex] = dataSourceValue;\n    });\n    // `dataValue` maps indices of event specifications in the event data spec to the associated FetchResults.\n    props[dataDestinationFieldName] = dataValue;\n  } else if (dataSpecFieldName === 'dateLinesDataSpec') {\n    let dataValue;\n    const dataSourceIds = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n    const dataSourceId = dataSourceIds.find(ds => ds.includes('dateLinesDataSpec'));\n    dataValue = dataSourceId ? _get__(\"cloneDeep\")(_get__(\"getDataFromState\")(dataSourceId, state)) : null;\n    props[dataDestinationFieldName] = dataValue;\n  } else {\n    // Merge metric data.\n    let dataSourceIds = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n    const pattern = /_((eval|rollup)Metrics(\\d+)|dataSpec)_ds$/; // SDL.TestTimeseriesLineBarChart_evalMetrics0_ds\n    const pattern2 = /_(eval(\\d+)|dataSpec)_ds$/; // SDL.TestTimeseriesLineBarChart_eval0_ds\n    dataSourceIds = dataSourceIds.filter(id => pattern.test(id) || pattern2.test(id)); // Filter to metric datasources.\n    const aggregatedChartData = {\n      series: [],\n      xAxes: [],\n      yAxes: [],\n      missing: []\n    };\n    dataSourceIds.forEach(dataSourceId => {\n      /**\n       * We have to clone the state data, so that we don't have pointers that are directly referencing\n       * the state.  Otherwise we are inadvertently modifying the state which is not allowed and causes unpredictable\n       * results.\n       */\n      const data = _get__(\"cloneDeep\")(_get__(\"getDataFromState\")(dataSourceId, state));\n      if (data) {\n        var _get__2;\n        // `xAxes` will be common to all series on the chart, so copy it once\n        if (!aggregatedChartData.xAxes.length) {\n          aggregatedChartData.xAxes = data.xAxes;\n        }\n\n        // TODO: UI-6086 UiSdlTimeseriesLineBarChart.doDataMerge function merges data from all datasources. Remove all references to UI Designer here.\n        const stateId = 'UiDesigner.UiDesignerState';\n        const dataPath = ['dataSpecFieldsFieldValues'];\n        const dataSpecFieldsFieldValues = (_get__2 = _get__(\"getConfigFromApplicationState\")(stateId, state, dataPath)) === null || _get__2 === void 0 ? void 0 : _get__2.toJS();\n        const yAxisFields = (dataSpecFieldsFieldValues === null || dataSpecFieldsFieldValues === void 0 ? void 0 : dataSpecFieldsFieldValues.yAxisFields) || [];\n        const metricNames = _get__(\"compact\")(yAxisFields.map(yAxisField => yAxisField.metricName));\n        const newAxisIndices = [];\n\n        // Add yAxes one at a time so we can keep track of their new indices\n        for (let axisIndex = 0; axisIndex < data.yAxes.length; axisIndex++) {\n          let newIndex = aggregatedChartData.yAxes.findIndex(x => x.id === data.yAxes[axisIndex].id);\n          if (newIndex == -1) {\n            aggregatedChartData.yAxes.push(data.yAxes[axisIndex]);\n            newIndex = aggregatedChartData.yAxes.length - 1;\n          }\n          newAxisIndices[axisIndex] = newIndex;\n        }\n\n        // Add each series to aggregatedChartData, updating yAxisIndex to match the index in the new, combined yAxes list\n        for (let i = 0; i < data.series.length; i++) {\n          const series = data.series[i];\n          let canAddSeries = false;\n\n          /**\n           * `series.id` contains \"<entityId> - <metricName>\" if entityId is provided in json configuration.\n           */\n          const serieId = series.id.split(' - ');\n          const id = serieId[serieId.length - 1];\n\n          // Check if series with same id exists in aggregatedChartData to avoid duplicates\n          if (!aggregatedChartData.series.some(existingSeries => existingSeries.id === series.id)) {\n            if (!_get__(\"isEmpty\")(metricNames)) {\n              canAddSeries = id && metricNames.includes(id);\n            } else {\n              canAddSeries = true;\n            }\n          }\n          if (!canAddSeries) {\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n          const missing = data.missing[i];\n          // Create a copy so we don't modify series, just what we're adding to aggregatedChartData\n          const seriesCopy = {\n            ...series,\n            yAxisIndex: newAxisIndices[series.yAxisIndex]\n          };\n          aggregatedChartData.series.push(seriesCopy);\n          aggregatedChartData.missing.push(missing);\n        }\n      }\n    });\n    props[dataDestinationFieldName] = aggregatedChartData;\n  }\n  return props;\n}\nfunction updateDataFilterAction(id, start, end, interval) {\n  return {\n    type: id + '.DATA_FILTER_UPDATE',\n    payload: {\n      spec: {\n        start: start,\n        end: end,\n        interval: interval\n      },\n      componentId: id\n    }\n  };\n}\nconst dataFilterUpdateEpic = (actionStream, stateStream) => {\n  return actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n    var _get__3, _get__4, _get__5;\n    const {\n      componentId,\n      spec\n    } = action.payload;\n    const {\n      start,\n      end,\n      interval\n    } = spec;\n    const state = stateStream.value;\n    const componentTypeName = _get__(\"getConfigFromState\")(componentId, state, ['component']);\n    const dataSelectionControlsDataZoom = _get__(\"getConfigFromState\")(componentId, state, \"dataSelectionControlsDataZoom\");\n    const dataSpec = (_get__3 = _get__(\"getConfigFromState\")(componentId, state, ['dataSpec'])) === null || _get__3 === void 0 ? void 0 : _get__3.toJS();\n    const eventDataSpec = (_get__4 = _get__(\"getConfigFromState\")(componentId, state, ['eventDataSpec'])) === null || _get__4 === void 0 ? void 0 : _get__4.toJS();\n    const defaultTransforms = (_get__5 = _get__(\"lineBarChartDataSpecTypes\")[componentTypeName + 'DataSpec']) === null || _get__5 === void 0 || (_get__5 = _get__5.defaultValues) === null || _get__5 === void 0 ? void 0 : _get__5.dataTransforms;\n    const actionTransforms = (dataSpec === null || dataSpec === void 0 ? void 0 : dataSpec.dataTransforms) || defaultTransforms;\n    const noTimeZoneConversion = _get__(\"getConfigFromState\")(componentId, state, ['noTimeZoneConversion']);\n    const timeZone = _get__(\"getTimeZone\")(noTimeZoneConversion, dataSpec === null || dataSpec === void 0 ? void 0 : dataSpec.timeZoneName);\n    let fetchStart = start;\n    let fetchEnd = end;\n    let alignedFetchStart;\n    let alignedFetchEnd;\n    if (noTimeZoneConversion) {\n      alignedFetchStart = _get__(\"alignDate\")(fetchStart, interval, timeZone).withoutZone().toString();\n      alignedFetchEnd = _get__(\"alignDate\")(fetchEnd, interval, timeZone).withoutZone().toString();\n    } else {\n      alignedFetchStart = _get__(\"alignDate\")(fetchStart, interval, timeZone).toString();\n      alignedFetchEnd = _get__(\"alignDate\")(fetchEnd, interval, timeZone).toString();\n    }\n    let newSpec;\n    if (dataSelectionControlsDataZoom) {\n      newSpec = {\n        interval: interval\n      };\n    } else {\n      newSpec = {\n        start: alignedFetchStart,\n        end: alignedFetchEnd,\n        interval: interval\n      };\n    }\n    const dataSourceIds = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n    const datasourceRefreshObservables = [];\n    _get__(\"each\")(dataSourceIds, function (dataSourceId) {\n      const eventDataSourceIndex = _get__(\"getEventDataSourceIndex\")(dataSourceId);\n      if (eventDataSourceIndex == null) {\n        // If dataSelectionControlsDataZoom is enabled, we only need to update the interval when it changes\n        if (dataSelectionControlsDataZoom) {\n          const oldInterval = _get__(\"getDataSourceFromState\")(dataSourceId, state, ['c3arguments', 'spec', 'interval']);\n          if (oldInterval === interval) {\n            return;\n          }\n        }\n        // Filter metrics\n        datasourceRefreshObservables.push(_get__(\"of\")(_get__(\"mergeArgumentsAction\")(dataSourceId, {\n          spec: newSpec\n        }, dataSourceId)), _get__(\"of\")(_get__(\"requestDataAction\")(dataSourceId, actionTransforms)));\n      } else {\n        var _originalArgs$spec, _eventDataSpec$events;\n        // Filter events\n        const originalArgsImmutable = _get__(\"getDataSourceFromState\")(dataSourceId, state, ['c3arguments']);\n        const originalArgs = originalArgsImmutable === null || originalArgsImmutable === void 0 ? void 0 : originalArgsImmutable.toJS();\n        const originalFilter = originalArgs === null || originalArgs === void 0 || (_originalArgs$spec = originalArgs.spec) === null || _originalArgs$spec === void 0 || (_originalArgs$spec = _originalArgs$spec.filter) === null || _originalArgs$spec === void 0 ? void 0 : _originalArgs$spec.toString(); // May be a string or a Filter object.\n        if (!originalFilter) {\n          return;\n        }\n        const eventDataSourceIndex = _get__(\"getEventDataSourceIndex\")(dataSourceId);\n        const fieldName = eventDataSpec === null || eventDataSpec === void 0 || (_eventDataSpec$events = eventDataSpec.events[eventDataSourceIndex]) === null || _eventDataSpec$events === void 0 || (_eventDataSpec$events = _eventDataSpec$events.timestamp) === null || _eventDataSpec$events === void 0 ? void 0 : _eventDataSpec$events.fieldName;\n        if (!fieldName) {\n          return;\n        }\n\n        // This is a suggested way to escape strings used in RegExps from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n        const escapedFieldName = fieldName.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const timestampFilterRegex = new RegExp('^(\\\\(' + escapedFieldName + ' >= \")([^\"]+)(\" && ' + escapedFieldName + ' <= \")([^\"]+)(\"\\\\))');\n        const newFilter = originalFilter.replace(timestampFilterRegex, '$1' + alignedFetchStart + '$3' + alignedFetchEnd + '$5');\n        const newArgs = originalArgsImmutable.mergeIn(['spec', 'filter'], newFilter).toJS();\n        datasourceRefreshObservables.push(_get__(\"of\")(_get__(\"updateDataConfigAction\")(dataSourceId, {\n          args: newArgs\n        }, null, null)), _get__(\"of\")(_get__(\"requestDataAction\")(dataSourceId)));\n      }\n    });\n    return _get__(\"from\")(datasourceRefreshObservables).pipe(_get__(\"concatAll\")());\n  }));\n};\nfunction generateSpec(relevantFields, componentId, typeName, originalIds, originalExpressions) {\n  const args = {\n    spec: {}\n  };\n  let ids = [];\n  let expressions = [];\n  _get__(\"each\")(relevantFields, (fieldValue, _field) => {\n    const fieldValueAsList = Array.isArray(fieldValue) ? fieldValue : [fieldValue];\n    fieldValueAsList.forEach(fieldValue => {\n      var _fieldValue$metricBas, _fieldValue$component;\n      const {\n        value\n      } = fieldValue;\n      const metricBasedComponentsToInputMapping = (_fieldValue$metricBas = fieldValue.metricBasedComponentsToInputMapping) === null || _fieldValue$metricBas === void 0 ? void 0 : _fieldValue$metricBas.value;\n      const componentsToFilterMapping = (_fieldValue$component = fieldValue.componentsToFilterMapping) === null || _fieldValue$component === void 0 ? void 0 : _fieldValue$component.value;\n      if (metricBasedComponentsToInputMapping && value) {\n        expressions = expressions.concat(value);\n      } else if (componentsToFilterMapping && fieldValue.type && value) {\n        ids = ids.concat(value);\n      }\n    });\n  });\n  args.spec.ids = _get__(\"isEmpty\")(ids) ? originalIds : _get__(\"uniq\")(_get__(\"flatten\")(ids.concat(originalIds)));\n  args.spec.expressions = _get__(\"isEmpty\")(expressions) ? originalExpressions : _get__(\"uniq\")(_get__(\"flatten\")(expressions.concat(originalExpressions)));\n  return args;\n}\nconst filterSubmitEpic = (actionStream, stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  var _get__$toJS, _get__6, _get__7, _get__8;\n  const componentId = action.payload.componentId;\n  const state = stateStream.value;\n  const typeName = _get__(\"getConfigFromState\")(componentId, state, ['dataSpec', 'dataType', 'typeName']);\n  const yAxisFields = (_get__$toJS = (_get__6 = _get__(\"getConfigFromState\")(componentId, state, ['dataSpec', 'yAxisFields'])) === null || _get__6 === void 0 ? void 0 : _get__6.toJS()) !== null && _get__$toJS !== void 0 ? _get__$toJS : [];\n  const originalIds = _get__(\"map\")(yAxisFields, 'entityId').filter(id => id) || [];\n  const originalExpressions = _get__(\"map\")(yAxisFields, 'metricName').filter(metricName => metricName) || [];\n  const rawFieldValues = action.payload.value;\n  const relevantFields = _get__(\"getRelevantFieldValues\")(rawFieldValues, typeName, componentId);\n  const dataSpec = (_get__7 = _get__(\"getConfigFromState\")(componentId, state, ['dataSpec'])) === null || _get__7 === void 0 ? void 0 : _get__7.toJS();\n  const actionTransforms = dataSpec === null || dataSpec === void 0 ? void 0 : dataSpec.dataTransforms;\n  const dataSources = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n  const actions = [];\n  const eventDataSpec = (_get__8 = _get__(\"getConfigFromState\")(componentId, state, ['eventDataSpec'])) === null || _get__8 === void 0 ? void 0 : _get__8.toJS();\n  const eventActionTransforms = eventDataSpec === null || eventDataSpec === void 0 ? void 0 : eventDataSpec.dataTransforms;\n  _get__(\"each\")(dataSources, function (dataSource) {\n    const eventDataSourceIndex = _get__(\"getEventDataSourceIndex\")(dataSource);\n    let newArguments = _get__(\"generateSpec\")(relevantFields, componentId, typeName, originalIds, originalExpressions);\n    /**\n     * `ids` and `filter` cannot co-exist. Before filter submit, it is already guaranteed that only one exists\n     * Now we want to do due diligence to make sure newly coming in specs do not break the rule.\n     */\n    if (!_get__(\"isEmpty\")(newArguments.spec.ids)) {\n      newArguments.spec.filter = null;\n    } else if (newArguments.spec.filter) {\n      newArguments.spec.ids = null;\n    }\n    if (eventDataSourceIndex == null) {\n      // Filter timeseries\n      actions.push(_get__(\"of\")(_get__(\"mergeArgumentsAction\")(dataSource, newArguments, componentId)), _get__(\"of\")(_get__(\"requestDataAction\")(dataSource, actionTransforms)));\n    } else {\n      // Filter events\n      const event = eventDataSpec.events[eventDataSourceIndex];\n      const typeName = event.dataType.typeName;\n      const relevantFields = _get__(\"getRelevantFieldValues\")(rawFieldValues, typeName, componentId);\n      const filterString = _get__(\"generateFilterString\")(relevantFields);\n      const mergeArgumentsPayload = {\n        spec: {\n          filter: filterString\n        }\n      };\n      actions.push(_get__(\"of\")(_get__(\"mergeArgumentsAction\")(dataSource, mergeArgumentsPayload, componentId)), _get__(\"of\")(_get__(\"requestDataAction\")(dataSource, eventActionTransforms)));\n    }\n  });\n  return _get__(\"from\")(actions).pipe(_get__(\"concatAll\")());\n}));\nfunction updateDataZoomStartValueAction(id, newDateString) {\n  return {\n    type: id + '.DATA_ZOOM_START_VALUE_UPDATE',\n    payload: {\n      componentId: id,\n      dataZoomStartValue: newDateString\n    }\n  };\n}\nfunction dataZoomStartValueUpdateReducer(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['dataZoomStartValue'], action.payload.dataZoomStartValue);\n}\nfunction updateDataZoomEndValueAction(id, newDateString) {\n  return {\n    type: id + '.DATA_ZOOM_END_VALUE_UPDATE',\n    payload: {\n      componentId: id,\n      dataZoomEndValue: newDateString\n    }\n  };\n}\nfunction dataZoomEndValueUpdateReducer(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['dataZoomEndValue'], action.payload.dataZoomEndValue);\n}\nfunction updateDisplayDateAction(id, start, end, interval) {\n  return {\n    type: id + '.DISPLAY_DATE_UPDATE',\n    payload: {\n      spec: {\n        start: start,\n        end: end,\n        interval: interval\n      },\n      componentId: id\n    }\n  };\n}\nfunction displayDateUpdateReducer(state, action) {\n  state = _get__(\"setConfigInState\")(action.payload.componentId, state, ['displayStartDate'], action.payload.spec.start, true);\n  state = _get__(\"setConfigInState\")(action.payload.componentId, state, ['displayInterval'], action.payload.spec.interval, true);\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['displayEndDate'], action.payload.spec.end);\n}\nconst lineBarChartInitialRenderEpic = (actionStream, stateStream) => {\n  return actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n    const state = stateStream.value;\n    const {\n      componentId\n    } = action.payload;\n    const {\n      startDate,\n      endDate,\n      interval\n    } = _get__(\"getConfigFromState\")(componentId, state, ['xAxis']).toJS();\n    return _get__(\"of\")(_get__(\"updateDisplayDateAction\")(componentId, _get__(\"getStartDate\")(startDate).toString(), _get__(\"getEndDate\")(endDate).toString(), interval));\n  }));\n};\nfunction clearDataSourcesAction(id) {\n  return {\n    type: id + '.DATA_SOURCES_CLEAR',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction dataSourcesClearReducer(state, action) {\n  var _action$payload;\n  const componentId = action === null || action === void 0 || (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.componentId;\n  const dataSourceIds = _get__(\"getAllComponentDataSourceIds\")(componentId, state);\n  let newState = state;\n  dataSourceIds.forEach(dataSourceId => {\n    newState = newState.deleteIn(['metadata', 'dataSources', 'byId', dataSourceId]);\n  });\n  return newState;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst epics = {\n  ..._get__(\"epics5\"),\n  ..._get__(\"epics4\"),\n  ..._get__(\"epics3\"),\n  ..._get__(\"epics2\"),\n  ..._get__(\"epics1\"),\n  ..._get__(\"epics0\"),\n  FILTER_SUBMIT: _get__(\"filterSubmitEpic\"),\n  DATA_FILTER_UPDATE: _get__(\"dataFilterUpdateEpic\"),\n  INITIAL_RENDER: _get__(\"lineBarChartInitialRenderEpic\")\n};\nconst reducers = {\n  ..._get__(\"reducers5\"),\n  ..._get__(\"reducers4\"),\n  ..._get__(\"reducers3\"),\n  ..._get__(\"reducers2\"),\n  ..._get__(\"reducers1\"),\n  ..._get__(\"reducers0\"),\n  DATA_ZOOM_START_VALUE_UPDATE: _get__(\"dataZoomStartValueUpdateReducer\"),\n  DATA_ZOOM_END_VALUE_UPDATE: _get__(\"dataZoomEndValueUpdateReducer\"),\n  DISPLAY_DATE_UPDATE: _get__(\"displayDateUpdateReducer\"),\n  DATA_SOURCES_CLEAR: _get__(\"dataSourcesClearReducer\")\n};\nconst actionCreators = {\n  ..._get__(\"actionCreators5\"),\n  ..._get__(\"actionCreators4\"),\n  ..._get__(\"actionCreators3\"),\n  ..._get__(\"actionCreators2\"),\n  ..._get__(\"actionCreators1\"),\n  ..._get__(\"actionCreators0\"),\n  updateDataFilterAction: _get__(\"updateDataFilterAction\"),\n  updateDataZoomStartValueAction: _get__(\"updateDataZoomStartValueAction\"),\n  updateDataZoomEndValueAction: _get__(\"updateDataZoomEndValueAction\"),\n  updateDisplayDateAction: _get__(\"updateDisplayDateAction\"),\n  clearDataSourcesAction: _get__(\"clearDataSourcesAction\")\n};\nconst defaultValues = {\n  \"defaultColors\": [\"#8A90AB\", \"#2266F0\", \"#26BFC9\", \"#B073FF\", \"#8C316E\", \"#7DBA92\", \"#99606A\", \"#057C87\", \"#F7B5E4\", \"#9E933F\", \"#6932BA\", \"#395C45\"],\n  \"backgroundStyle\": \"FREE_FORM\",\n  \"height\": 400,\n  \"tooltipEnabled\": true,\n  \"tooltipValuesDecimalPrecision\": 2,\n  \"tooltipUnitEnabled\": true,\n  \"tooltipConfig\": {\n    \"size\": \"sm\",\n    \"truncateTooltipLabel\": true,\n    \"truncateTooltipHeader\": false\n  },\n  \"triggersRegistered\": false,\n  \"wrapWithMetadataId\": false,\n  \"yAxis\": {\n    \"name\": \"y-axis\",\n    \"scale\": false,\n    \"decimalPrecision\": 0,\n    \"rotate\": 0,\n    \"nameLocation\": \"end\",\n    \"nameGap\": 30,\n    \"axisType\": \"value\",\n    \"logBase\": 10,\n    \"units\": false,\n    \"showSeparators\": false\n  },\n  \"zoomEnabled\": true,\n  \"dataZoom\": true,\n  \"defaultChartType\": \"line\",\n  \"showDownloadOptions\": true,\n  \"showDataLabelsToggle\": false,\n  \"stackBars\": false,\n  \"chartActionsCollapseThreshold\": 1,\n  \"csvMissingDataFiller\": \"undefined\",\n  \"showTimeZoneLabel\": false,\n  \"timeZoneNameFormat\": \"longGeneric\",\n  \"showCrosshair\": false,\n  \"xAxis\": {\n    \"type\": \"UiSdlTimeseriesLineBarChartXAxisConfig\"\n  },\n  \"showNowLine\": false,\n  \"nowLineConfig\": {\n    \"color\": \"#EA2D2B\",\n    \"lineStyle\": \"Solid\",\n    \"legendLabel\": \"UiSdlTimeseriesLineBarChartNowLineConfig.defaultLegendLabel\"\n  },\n  \"hideMissingDataPoints\": false,\n  \"noTimeZoneConversion\": false,\n  \"showAllTimestampInfoOnTooltip\": false,\n  \"showStartAndEndDate\": true,\n  \"displayStartDate\": \"\",\n  \"displayEndDate\": \"\",\n  \"displayInterval\": \"DAY\",\n  \"shouldOverrideUserConfigIdWithDataGeneratedId\": false,\n  \"dataSelectionControlsDataZoom\": false,\n  \"dataZoomStartValue\": \"\",\n  \"dataZoomEndValue\": \"\"\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"EVENT_DATASOURCE\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartEventDataSpec__WEBPACK_IMPORTED_MODULE_15__.EVENT_DATASOURCE;\n    case \"getAllComponentDataSourceIds\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__.getAllComponentDataSourceIds;\n    case \"getEventDataSourceIndex\":\n      return getEventDataSourceIndex;\n    case \"getIndexedEventDataSourceIds\":\n      return getIndexedEventDataSourceIds;\n    case \"cloneDeep\":\n      return (lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_7___default());\n    case \"getDataFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__.getDataFromState;\n    case \"getConfigFromApplicationState\":\n      return _c3_ui_UiSdlApplicationState__WEBPACK_IMPORTED_MODULE_13__.getConfigFromApplicationState;\n    case \"compact\":\n      return (lodash_compact__WEBPACK_IMPORTED_MODULE_8___default());\n    case \"isEmpty\":\n      return (lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default());\n    case \"mergeMap\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.mergeMap;\n    case \"getConfigFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__.getConfigFromState;\n    case \"lineBarChartDataSpecTypes\":\n      return (_c3_ui_types_pluggables_lineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_12___default());\n    case \"getTimeZone\":\n      return _c3_ui_UiSdlWithTimeZone__WEBPACK_IMPORTED_MODULE_16__.getTimeZone;\n    case \"alignDate\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_14__.alignDate;\n    case \"each\":\n      return (lodash_each__WEBPACK_IMPORTED_MODULE_5___default());\n    case \"getDataSourceFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__.getDataSourceFromState;\n    case \"of\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.of;\n    case \"mergeArgumentsAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_9__.mergeArgumentsAction;\n    case \"requestDataAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_9__.requestDataAction;\n    case \"updateDataConfigAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_9__.updateDataConfigAction;\n    case \"from\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.from;\n    case \"concatAll\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.concatAll;\n    case \"uniq\":\n      return (lodash_uniq__WEBPACK_IMPORTED_MODULE_3___default());\n    case \"flatten\":\n      return (lodash_flatten__WEBPACK_IMPORTED_MODULE_4___default());\n    case \"map\":\n      return (lodash_map__WEBPACK_IMPORTED_MODULE_6___default());\n    case \"getRelevantFieldValues\":\n      return _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.getRelevantFieldValues;\n    case \"generateSpec\":\n      return generateSpec;\n    case \"generateFilterString\":\n      return _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.generateFilterString;\n    case \"setConfigInState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_10__.setConfigInState;\n    case \"updateDisplayDateAction\":\n      return updateDisplayDateAction;\n    case \"getStartDate\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_14__.getStartDate;\n    case \"getEndDate\":\n      return _c3_ui_UiSdlTimeseriesLineBarChartDataSpec__WEBPACK_IMPORTED_MODULE_14__.getEndDate;\n    case \"epics5\":\n      return _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__.epics;\n    case \"epics4\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__.epics;\n    case \"epics3\":\n      return _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.epics;\n    case \"epics2\":\n      return _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.epics;\n    case \"epics1\":\n      return _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__.epics;\n    case \"epics0\":\n      return _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__.epics;\n    case \"filterSubmitEpic\":\n      return filterSubmitEpic;\n    case \"dataFilterUpdateEpic\":\n      return dataFilterUpdateEpic;\n    case \"lineBarChartInitialRenderEpic\":\n      return lineBarChartInitialRenderEpic;\n    case \"reducers5\":\n      return _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__.reducers;\n    case \"reducers4\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__.reducers;\n    case \"reducers3\":\n      return _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.reducers;\n    case \"reducers2\":\n      return _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.reducers;\n    case \"reducers1\":\n      return _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__.reducers;\n    case \"reducers0\":\n      return _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__.reducers;\n    case \"dataZoomStartValueUpdateReducer\":\n      return dataZoomStartValueUpdateReducer;\n    case \"dataZoomEndValueUpdateReducer\":\n      return dataZoomEndValueUpdateReducer;\n    case \"displayDateUpdateReducer\":\n      return displayDateUpdateReducer;\n    case \"dataSourcesClearReducer\":\n      return dataSourcesClearReducer;\n    case \"actionCreators5\":\n      return _c3_ui_UiSdlTimeZoneLabel__WEBPACK_IMPORTED_MODULE_21__.actionCreators;\n    case \"actionCreators4\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_20__.actionCreators;\n    case \"actionCreators3\":\n      return _c3_ui_UiSdlChartActions__WEBPACK_IMPORTED_MODULE_19__.actionCreators;\n    case \"actionCreators2\":\n      return _c3_ui_UiSdlFilterable__WEBPACK_IMPORTED_MODULE_11__.actionCreators;\n    case \"actionCreators1\":\n      return _c3_ui_UiSdlHideChartSeries__WEBPACK_IMPORTED_MODULE_17__.actionCreators;\n    case \"actionCreators0\":\n      return _c3_ui_UiSdlLineBarChart__WEBPACK_IMPORTED_MODULE_18__.actionCreators;\n    case \"updateDataFilterAction\":\n      return updateDataFilterAction;\n    case \"updateDataZoomStartValueAction\":\n      return updateDataZoomStartValueAction;\n    case \"updateDataZoomEndValueAction\":\n      return updateDataZoomEndValueAction;\n    case \"clearDataSourcesAction\":\n      return clearDataSourcesAction;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlTimeseriesLineBarChart.ts_uiComponentLibrary\n");

/***/ })

}]);