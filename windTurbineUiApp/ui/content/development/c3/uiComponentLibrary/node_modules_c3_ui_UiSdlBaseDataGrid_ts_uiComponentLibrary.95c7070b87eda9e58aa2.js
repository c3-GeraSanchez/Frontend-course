"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlBaseDataGrid_ts_uiComponentLibrary"],{

/***/ "./node_modules/@c3/ui/UiSdlBaseDataGrid.ts_uiComponentLibrary":
/*!**************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlBaseDataGrid.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   actionButtonStateChangeEffect: () => (/* binding */ actionButtonStateChangeEffect),\n/* harmony export */   actionCreators: () => (/* binding */ actionCreators),\n/* harmony export */   addedEntryHandleEpic: () => (/* binding */ addedEntryHandleEpic),\n/* harmony export */   cancelChangeAction: () => (/* binding */ cancelChangeAction),\n/* harmony export */   changeActionButtonStateAction: () => (/* binding */ changeActionButtonStateAction),\n/* harmony export */   changeCancelEpic: () => (/* binding */ changeCancelEpic),\n/* harmony export */   changeItemAction: () => (/* binding */ changeItemAction),\n/* harmony export */   changeSelectionAction: () => (/* binding */ changeSelectionAction),\n/* harmony export */   checkboxPrimaryButtonClickAction: () => (/* binding */ checkboxPrimaryButtonClickAction),\n/* harmony export */   checkboxSecondaryButtonClickAction: () => (/* binding */ checkboxSecondaryButtonClickAction),\n/* harmony export */   clickEmptyStateButtonAction: () => (/* binding */ clickEmptyStateButtonAction),\n/* harmony export */   clickRowAction: () => (/* binding */ clickRowAction),\n/* harmony export */   columnSelectReducer: () => (/* binding */ columnSelectReducer),\n/* harmony export */   columnVisibilityToggleEffect: () => (/* binding */ columnVisibilityToggleEffect),\n/* harmony export */   countDataAction: () => (/* binding */ countDataAction),\n/* harmony export */   countDataEpic: () => (/* binding */ countDataEpic),\n/* harmony export */   currentlyClickedDataUpdateEffect: () => (/* binding */ currentlyClickedDataUpdateEffect),\n/* harmony export */   dataCountArgumentsSyncReducer: () => (/* binding */ dataCountArgumentsSyncReducer),\n/* harmony export */   dataLoadEpic: () => (/* binding */ dataLoadEpic),\n/* harmony export */   dataSaveEpic: () => (/* binding */ dataSaveEpic),\n/* harmony export */   dataUpdateCountEpic: () => (/* binding */ dataUpdateCountEpic),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   editChangesUpdateAction: () => (/* binding */ editChangesUpdateAction),\n/* harmony export */   editErrorChangesAction: () => (/* binding */ editErrorChangesAction),\n/* harmony export */   editErrorChangesEffect: () => (/* binding */ editErrorChangesEffect),\n/* harmony export */   editExitEffect: () => (/* binding */ editExitEffect),\n/* harmony export */   enterEditAction: () => (/* binding */ enterEditAction),\n/* harmony export */   enterEditEffect: () => (/* binding */ enterEditEffect),\n/* harmony export */   epics: () => (/* binding */ epics),\n/* harmony export */   exitEditAction: () => (/* binding */ exitEditAction),\n/* harmony export */   generateIdByNameAndIndex: () => (/* binding */ generateIdByNameAndIndex),\n/* harmony export */   handleAddedEntryAction: () => (/* binding */ handleAddedEntryAction),\n/* harmony export */   itemChangeEpic: () => (/* binding */ itemChangeEpic),\n/* harmony export */   loadDataAction: () => (/* binding */ loadDataAction),\n/* harmony export */   loadedDataHandleEpic: () => (/* binding */ loadedDataHandleEpic),\n/* harmony export */   multipleRowsDeleteEffect: () => (/* binding */ multipleRowsDeleteEffect),\n/* harmony export */   multipleRowsDeleteEpic: () => (/* binding */ multipleRowsDeleteEpic),\n/* harmony export */   pendingRowDeletionIdUpdateEffect: () => (/* binding */ pendingRowDeletionIdUpdateEffect),\n/* harmony export */   pendingRowsDeletionIdUpdateReducer: () => (/* binding */ pendingRowsDeletionIdUpdateReducer),\n/* harmony export */   reducers: () => (/* binding */ reducers),\n/* harmony export */   registerTriggersAction: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__.registerTriggersAction),\n/* harmony export */   renderInitialAction: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__.renderInitialAction),\n/* harmony export */   rowAddEpic: () => (/* binding */ rowAddEpic),\n/* harmony export */   rowDeleteEpic: () => (/* binding */ rowDeleteEpic),\n/* harmony export */   rowSelectReducer: () => (/* binding */ rowSelectReducer),\n/* harmony export */   saveCancelButtonVisibilityUpdateReducer: () => (/* binding */ saveCancelButtonVisibilityUpdateReducer),\n/* harmony export */   saveDataAction: () => (/* binding */ saveDataAction),\n/* harmony export */   selectAllToggleEffect: () => (/* binding */ selectAllToggleEffect),\n/* harmony export */   selectColumnAction: () => (/* binding */ selectColumnAction),\n/* harmony export */   selectRowAction: () => (/* binding */ selectRowAction),\n/* harmony export */   selectableTableActionToggleReducer: () => (/* binding */ selectableTableActionToggleReducer),\n/* harmony export */   selectionChangeEffect: () => (/* binding */ selectionChangeEffect),\n/* harmony export */   setTableActionLoadingAction: () => (/* binding */ setTableActionLoadingAction),\n/* harmony export */   syncDataCountArgumentsAction: () => (/* binding */ syncDataCountArgumentsAction),\n/* harmony export */   tableActionLoadingSetReducer: () => (/* binding */ tableActionLoadingSetReducer),\n/* harmony export */   toggleColumnVisibilityAction: () => (/* binding */ toggleColumnVisibilityAction),\n/* harmony export */   toggleRowAction: () => (/* binding */ toggleRowAction),\n/* harmony export */   toggleRowEffect: () => (/* binding */ toggleRowEffect),\n/* harmony export */   toggleSelectAllAction: () => (/* binding */ toggleSelectAllAction),\n/* harmony export */   triggerCellAction: () => (/* binding */ triggerCellAction),\n/* harmony export */   triggerMultipleRowAction: () => (/* binding */ triggerMultipleRowAction),\n/* harmony export */   triggerRowAction: () => (/* binding */ triggerRowAction),\n/* harmony export */   triggerTableAction: () => (/* binding */ triggerTableAction),\n/* harmony export */   triggerToggleSelectedTableAction: () => (/* binding */ triggerToggleSelectedTableAction),\n/* harmony export */   triggersRegisterEffect: () => (/* reexport safe */ _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__.triggersRegisterEffect),\n/* harmony export */   updateCurrentlyClickedData: () => (/* binding */ updateCurrentlyClickedData),\n/* harmony export */   updateEditChangesEffect: () => (/* binding */ updateEditChangesEffect),\n/* harmony export */   updateSaveCancelButtonVisibilityAction: () => (/* binding */ updateSaveCancelButtonVisibilityAction)\n/* harmony export */ });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators_uiComponentLibrary\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs_uiComponentLibrary\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable_uiComponentLibrary\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js_uiComponentLibrary\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @c3/ui/UiSdlDataRedux */ \"webpack/container/remote/@c3/ui/UiSdlDataRedux_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _c3_ui_UiSdlSearchable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/ui/UiSdlSearchable */ \"webpack/container/remote/@c3/ui/UiSdlSearchable_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlSearchable__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlSearchable__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _c3_ui_UiSdlEmptyState__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @c3/ui/UiSdlEmptyState */ \"webpack/container/remote/@c3/ui/UiSdlEmptyState_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlEmptyState__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlEmptyState__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash_isBoolean__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/isBoolean */ \"webpack/sharing/consume/default/lodash/isBoolean/lodash/isBoolean_uiComponentLibrary\");\n/* harmony import */ var lodash_isBoolean__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_isBoolean__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @c3/ui/UiSdlComponent */ \"webpack/sharing/consume/default/@c3/ui/UiSdlComponent_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n\nfunction isToggleable(tableActionOrGroup) {\n  return tableActionOrGroup.hasOwnProperty('group');\n}\nfunction findTableActionPath(tableActionSuffix, componentId, state) {\n  const tableActionsState = _get__(\"getConfigFromState\")(componentId, state, ['tableActions']);\n  const path = [];\n  if (tableActionsState) {\n    const tableActions = tableActionsState.toJS();\n    const tableActionIndex = tableActions.findIndex(function (tableActionOrGroup) {\n      if (_get__(\"isToggleable\")(tableActionOrGroup)) {\n        const groupItemIndex = tableActionOrGroup.group.findIndex(function (tableAction) {\n          return tableAction.actionSuffix === tableActionSuffix;\n        });\n        if (groupItemIndex > -1) {\n          path.push('group');\n          path.push(String(groupItemIndex));\n          return true;\n        }\n      } else {\n        return tableActionOrGroup.actionSuffix === tableActionSuffix;\n      }\n    });\n    if (tableActionIndex > -1) {\n      return ['tableActions', String(tableActionIndex)].concat(path);\n    }\n  }\n}\nfunction getCurrentlySelectedGridItems(state, action) {\n  const selectedGridItems = _get__(\"getConfigFromState\")(action.payload.componentId, state, ['selectedGridItems']);\n  return selectedGridItems && selectedGridItems.toJS() || [];\n}\nfunction findSelectedItemMatch(itemToMatch, selectedGridItems) {\n  return selectedGridItems.find(item => {\n    return item.itemType === itemToMatch.itemType && item.id === itemToMatch.id;\n  });\n}\nfunction updateSelectedGridItems(state, action, selectedGridItems) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['selectedGridItems'], selectedGridItems);\n}\nfunction replaceAllSelectedGridItemsWith(state, action, newItem) {\n  const selectedGridItems = _get__(\"getCurrentlySelectedGridItems\")(state, action);\n  const matchingItem = _get__(\"findSelectedItemMatch\")(newItem, selectedGridItems);\n  let updatedItems = [];\n  // If the item is not already selected, select it, else if it is selected, deselect it\n  if (!matchingItem) {\n    updatedItems = [newItem];\n  }\n  return _get__(\"updateSelectedGridItems\")(state, action, updatedItems);\n}\n\n/**\n * This is the same implementation as helpers/generateIdByNameAndIndex.js. As a stand alone package\n * uiInfrastructure does not have a dependency on uiSdlReact and cannot import this function from helpers.\n */\nfunction generateIdByNameAndIndex(name, index) {\n  if (_get__(\"isUndefined\")(name)) {\n    return '';\n  }\n  if (_get__(\"isUndefined\")(index)) {\n    return name;\n  }\n  return name + '-' + index;\n}\nfunction changeActionButtonStateAction(id, buttonType, disable, loading) {\n  return {\n    type: id + '.ACTION_BUTTON_STATE_CHANGE',\n    payload: {\n      buttonType: buttonType,\n      disabled: disable,\n      loading: loading,\n      componentId: id\n    }\n  };\n}\n\n// UI Triggers\nfunction countDataAction(id) {\n  return {\n    type: id + '.TOTAL_DATA_COUNT',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction syncDataCountArgumentsAction(id) {\n  return {\n    type: id + '.DATA_COUNT_ARGS_SYNC',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction clickRowAction(id, dataItem) {\n  return {\n    type: id + '.ROW_CLICK',\n    payload: {\n      componentId: id,\n      dataItem: dataItem\n    }\n  };\n}\nfunction updateCurrentlyClickedData(id, data) {\n  return {\n    type: id + '.CURRENTLY_CLICKED_DATA_UPDATE',\n    payload: {\n      componentId: id,\n      data: data\n    }\n  };\n}\nfunction loadDataAction(id) {\n  return {\n    type: id + '.DATA_LOAD',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction editChangesUpdateAction(id) {\n  return {\n    type: id + '.EDIT_CHANGES_UPDATE',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction updateSaveCancelButtonVisibilityAction(id, visible) {\n  return {\n    type: id + '.SAVE_CANCEL_BUTTON_VISIBILITY_UPDATE',\n    payload: {\n      componentId: id,\n      visible: visible\n    }\n  };\n}\nfunction changeSelectionAction(id, selected, itemId) {\n  return {\n    type: id + '.SELECTION_CHANGE',\n    payload: {\n      selected: selected,\n      id: itemId,\n      componentId: id\n    }\n  };\n}\nfunction triggerTableAction(id, actionSuffix) {\n  return {\n    type: id + '.TABLE_ACTION_CLICK_' + actionSuffix,\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction setTableActionLoadingAction(id, actionSuffix, loading) {\n  return {\n    type: id + '.TABLE_ACTION_LOADING_SET',\n    payload: {\n      actionSuffix: actionSuffix,\n      componentId: id,\n      loading: loading\n    }\n  };\n}\nfunction triggerToggleSelectedTableAction(id, actionSuffix, selected) {\n  // Trigger for consumers to listen to\n  return {\n    type: id + '.SELECTABLE_TABLE_ACTION_TOGGLE',\n    payload: {\n      actionSuffix: actionSuffix,\n      componentId: id,\n      selected: selected\n    }\n  };\n}\nfunction triggerCellAction(id, actionSuffix, dataItem) {\n  return {\n    type: id + '.CELL_ACTION_CLICK_' + actionSuffix,\n    payload: {\n      dataItem: dataItem,\n      componentId: id\n    }\n  };\n}\nfunction toggleRowAction(id, expanded, itemId) {\n  return {\n    type: id + '.ROW_TOGGLE',\n    payload: {\n      componentId: id,\n      expanded: expanded,\n      id: itemId\n    }\n  };\n}\nfunction toggleSelectAllAction(id, selected) {\n  return {\n    type: id + '.SELECT_ALL_TOGGLE',\n    payload: {\n      selected: selected,\n      componentId: id\n    }\n  };\n}\nfunction toggleColumnVisibilityAction(id, columnId) {\n  return {\n    type: id + '.COLUMN_VISIBILITY_TOGGLE',\n    payload: {\n      columnId: columnId,\n      componentId: id\n    }\n  };\n}\nfunction handleAddedEntryAction(id, dataId) {\n  return {\n    type: id + '.ADDED_ENTRY_HANDLE',\n    payload: {\n      componentId: id,\n      dataId: dataId\n    }\n  };\n}\nfunction triggerMultipleRowAction(id, actionSuffix, dataItems) {\n  return {\n    type: id + '.MULTIPLE_ROW_ACTION_CLICK_' + actionSuffix,\n    payload: {\n      componentId: id,\n      dataItems: dataItems\n    }\n  };\n}\nfunction enterEditAction(id, itemId, field) {\n  return {\n    type: id + '.EDIT_ENTER',\n    payload: {\n      id: itemId,\n      field: field,\n      componentId: id\n    }\n  };\n}\nfunction exitEditAction(id, itemId, field) {\n  return {\n    type: id + '.EDIT_EXIT',\n    payload: {\n      id: itemId,\n      field: field,\n      componentId: id\n    }\n  };\n}\nfunction cancelChangeAction(id) {\n  return {\n    type: id + '.CHANGE_CANCEL',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction saveDataAction(id) {\n  return {\n    type: id + '.DATA_SAVE',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction checkboxPrimaryButtonClickAction(id) {\n  return {\n    type: id + '.CHECKBOX_PRIMARY_BUTTON_CLICK',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction checkboxSecondaryButtonClickAction(id) {\n  return {\n    type: id + '.CHECKBOX_SECONDARY_BUTTON_CLICK',\n    payload: {\n      componentId: id\n    }\n  };\n}\nfunction editErrorChangesAction(id, editErrors) {\n  return {\n    type: id + '.EDITERROR_CHANGES',\n    payload: {\n      componentId: id,\n      editErrors: editErrors\n    }\n  };\n}\nfunction triggerRowAction(id, actionSuffix, dataItem, args) {\n  const payload = Object.assign({\n    componentId: id\n  }, dataItem);\n  return {\n    type: id + '.ROW_ACTION_CLICK_' + actionSuffix,\n    payload: payload,\n    args: args\n  };\n}\nfunction changeItemAction(id, itemId, field, newValue) {\n  return {\n    type: id + '.ITEM_CHANGE',\n    payload: {\n      id: itemId,\n      field: field,\n      newValue: newValue,\n      componentId: id\n    }\n  };\n}\nfunction clickEmptyStateButtonAction(id, actionSuffix) {\n  return _get__(\"clickButtonAction\")(actionSuffix, id);\n}\nfunction selectRowAction(id, dataItem) {\n  return {\n    type: id + '.ROW_SELECT',\n    payload: {\n      componentId: id,\n      dataItem: dataItem\n    }\n  };\n}\nfunction selectColumnAction(id, columnConfig) {\n  return {\n    type: id + '.COLUMN_SELECT',\n    payload: {\n      componentId: id,\n      columnConfig: columnConfig\n    }\n  };\n}\n\n// UI Effects\nfunction toggleRowEffect(state, action) {\n  if (!action.payload.id) {\n    return state;\n  }\n  // Apply additional filters to the nested component if detailComponentFilterable is set to true\n  const componentId = action.payload.componentId;\n  const detailComponentId = _get__(\"getConfigFromState\")(componentId, state, ['detailComponentId']);\n  const detailComponentFilterable = _get__(\"getConfigFromState\")(componentId, state, ['detailComponentFilterable']);\n  if (detailComponentFilterable) {\n    const additionalFilters = _get__(\"getDataSourceFromState\")(_get__(\"getCollectionDataSourceId\")('dataSpec', componentId), state, ['additionalFilters']);\n    if (detailComponentId && additionalFilters) {\n      const convertedAdditionalFilters = {};\n      const componentAdditionalFilter = additionalFilters.toJS()[componentId];\n      if (componentAdditionalFilter) {\n        convertedAdditionalFilters[detailComponentId + '_' + action.payload.id] = componentAdditionalFilter;\n      }\n      const detailComponentDataSpec = detailComponentId + '_' + action.payload.id + '_dataSpec_ds';\n      state = _get__(\"setDataSourceInState\")(detailComponentDataSpec, state, ['additionalFilters'], _get__(\"fromJS\")(convertedAdditionalFilters));\n    }\n  }\n  return _get__(\"setConfigInState\")(componentId, state, ['expandedItems', action.payload.id], action.payload.expanded === true);\n}\nfunction pendingRowDeletionIdUpdateEffect(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['pendingRowDeletionId'], action.payload.obj.id);\n}\nfunction pendingRowsDeletionIdUpdateReducer(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['pendingRowDeletionId'], action.payload.dataItems);\n}\nfunction currentlyClickedDataUpdateEffect(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['currentlyClickedData'], action.payload.data);\n}\nfunction updateEditChangesEffect(state, action) {\n  // This returns a C3 map type\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', action.payload.componentId);\n  const edits = _get__(\"getDataSourceFromState\")(dataSourceId, state, ['edits']) || _get__(\"fromJS\")({});\n  // C3 map doesn't implement toJSON(), so we need to do some ugliness here\n  const editsObj = JSON.parse(JSON.stringify(edits));\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['editChanges'], editsObj);\n}\nfunction saveCancelButtonVisibilityUpdateReducer(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['showSaveCancelButton'], action.payload.visible);\n}\nfunction dataCountArgumentsSyncReducer(state, action) {\n  const componentId = action.payload.componentId;\n  return _get__(\"copyRequestArgumentsInState\")(componentId, state, 'dataSpec', 'totalDataCount', [{\n    from: ['c3arguments', 'spec', 'filter']\n  }]);\n}\nfunction selectionChangeEffect(state, action) {\n  if (!action.payload.id) {\n    return state;\n  }\n  const {\n    componentId,\n    selected\n  } = action.payload;\n  let selectedItemIds = _get__(\"getConfigFromState\")(componentId, state, ['selectedItemIds']) || _get__(\"fromJS\")([]);\n  if (selected) {\n    selectedItemIds = selectedItemIds.concat(action.payload.id);\n  } else {\n    selectedItemIds = selectedItemIds.filter(function (id) {\n      return id !== action.payload.id;\n    });\n  }\n  return _get__(\"setConfigInState\")(componentId, state, ['selectedItemIds'], selectedItemIds);\n}\n\n/**\n * Returns the state path as an array to the specified table action suffix - including the 'tableActions' portion of the\n * path.\n * @param {string} tableActionSuffix table action suffix\n * @param {string} componentId grid component id\n * @param {ReduxState} state the redux state\n * @return the state path as an array\n */\n\nfunction tableActionLoadingSetReducer(state, action) {\n  const {\n    actionSuffix,\n    componentId\n  } = action.payload;\n  const tableActionPath = _get__(\"findTableActionPath\")(actionSuffix, componentId, state);\n  if (tableActionPath) {\n    return _get__(\"setConfigInState\")(componentId, state, tableActionPath.concat('loading'), action.payload.loading);\n  }\n  return state;\n}\nfunction selectableTableActionToggleReducer(state, action) {\n  const {\n    actionSuffix,\n    componentId,\n    selected\n  } = action.payload;\n  const tableActionPath = _get__(\"findTableActionPath\")(actionSuffix, componentId, state);\n  if ((tableActionPath === null || tableActionPath === void 0 ? void 0 : tableActionPath.length) > 1) {\n    return _get__(\"setConfigInState\")(componentId, state, tableActionPath.concat('selected'), selected);\n  }\n  return state;\n}\nfunction selectAllToggleEffect(state, action) {\n  var _get__2;\n  const {\n    componentId,\n    selected\n  } = action.payload;\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', componentId);\n  let dataIds;\n  if (dataSourceId) {\n    const data = state.getIn(['entities', 'modified', dataSourceId]);\n    const isNestedChecklistTable = _get__(\"getConfigFromState\")(componentId, state, ['type']) === 'UiSdlDataNestedRowGrid';\n\n    // If it is a isNestedChecklistTable process the data differently\n    dataIds = data && (isNestedChecklistTable ? _get__(\"map\")(_get__(\"map\")(data.objs, 'obj'), 'id') : _get__(\"map\")(data.objs, 'id'));\n  }\n  const existingItems = ((_get__2 = _get__(\"getConfigFromState\")(componentId, state, ['selectedItemIds'])) === null || _get__2 === void 0 ? void 0 : _get__2.toJS()) || [];\n  const selectedItemIds = selected && dataIds.concat(existingItems) || existingItems.filter(itemId => !dataIds.includes(itemId));\n  // Set `isSelectedAll` state so that on new loaded data will be selected/unselected based on this state.\n  state = _get__(\"setConfigInState\")(componentId, state, ['isSelectedAll'], selected);\n  return _get__(\"setConfigInState\")(componentId, state, ['selectedItemIds'], selectedItemIds);\n}\n\n// Private\nfunction multipleRowsDeleteEffect(state, action) {\n  // Clear selectedItemIds\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['selectedItemIds'], []);\n}\nfunction columnVisibilityToggleEffect(state, action) {\n  if (!action.payload.columnId) {\n    return state;\n  }\n  const grid = _get__(\"getConfigFromState\")(action.payload.componentId, state, ['dataSpec']).toJS();\n  const columns = _get__(\"map\")(grid.columnFields, (column, i) => {\n    if (action.payload.columnId === _get__(\"generateIdByNameAndIndex\")(column.fieldName, i)) {\n      column.hidden = !column.hidden;\n    }\n    return column;\n  });\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['dataSpec', 'columnFields'], columns);\n}\nfunction enterEditEffect(state, action) {\n  let newState = _get__(\"setConfigInState\")(action.payload.componentId, state, ['editItemId'], action.payload.id);\n  newState = _get__(\"setConfigInState\")(action.payload.componentId, newState, ['isEditing'], true);\n  if (action.payload.field) {\n    newState = _get__(\"setConfigInState\")(action.payload.componentId, newState, ['editItemField'], action.payload.field);\n  }\n  return newState;\n}\nfunction editExitEffect(state, action) {\n  let newState = _get__(\"setConfigInState\")(action.payload.componentId, state, ['editItemId'], null);\n  newState = _get__(\"setConfigInState\")(action.payload.componentId, newState, ['isEditing'], false);\n  return _get__(\"setConfigInState\")(action.payload.componentId, newState, ['editItemField'], null);\n}\nfunction editErrorChangesEffect(state, action) {\n  return _get__(\"setConfigInState\")(action.payload.componentId, state, ['editErrors'], action.payload.editErrors);\n}\nfunction actionButtonStateChangeEffect(state, action) {\n  var _action$payload, _action$payload2, _action$payload5;\n  let newState = state;\n  const buttonType = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.buttonType;\n  let loadingKey;\n  let disabledKey;\n  if (buttonType === 'SAVE') {\n    loadingKey = 'saveChangesButtonLoading';\n    disabledKey = 'saveChangesButtonDisabled';\n  } else if (buttonType === 'CANCEL') {\n    loadingKey = 'cancelChangesButtonLoading';\n    disabledKey = 'cancelChangesButtonDisabled';\n  } else if (buttonType === 'CHECKBOX_PRIMARY_ACTION_BUTTON') {\n    loadingKey = 'checkboxPrimaryActionButtonLoading';\n    disabledKey = 'checkboxPrimaryActionButtonDisabled';\n  } else if (buttonType === 'CHECKBOX_SECONDARY_ACTION_BUTTON') {\n    loadingKey = 'checkboxSecondaryActionButtonLoading';\n    disabledKey = 'checkboxSecondaryActionButtonDisabled';\n  } else {\n    return state;\n  }\n  if (_get__(\"isBoolean\")((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.loading)) {\n    var _action$payload3, _action$payload4;\n    newState = _get__(\"setConfigInState\")((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.componentId, newState, [loadingKey], (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.loading);\n  }\n  if (_get__(\"isBoolean\")((_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.disabled)) {\n    var _action$payload6, _action$payload7;\n    newState = _get__(\"setConfigInState\")((_action$payload6 = action.payload) === null || _action$payload6 === void 0 ? void 0 : _action$payload6.componentId, newState, [disabledKey], (_action$payload7 = action.payload) === null || _action$payload7 === void 0 ? void 0 : _action$payload7.disabled);\n  }\n  return newState;\n}\nfunction rowSelectReducer(state, action) {\n  const newItem = {\n    itemType: 'ROW',\n    id: action.payload.dataItem.obj.id\n  };\n  return _get__(\"replaceAllSelectedGridItemsWith\")(state, action, newItem);\n}\nfunction columnSelectReducer(state, action) {\n  const newItem = {\n    itemType: 'COLUMN',\n    id: action.payload.columnConfig.id\n  };\n  return _get__(\"replaceAllSelectedGridItemsWith\")(state, action, newItem);\n}\n\n// UI Async Effects\nconst itemChangeEpic = (actionStream, _stateStream) => actionStream.pipe(_get__(\"filter\")(function (action) {\n  return action.payload && action.payload.id && action.payload.field;\n}), _get__(\"mergeMap\")(function (action) {\n  const {\n    componentId\n  } = action.payload;\n  return _get__(\"of\")(_get__(\"modifyDataAction\")(_get__(\"getCollectionDataSourceId\")('dataSpec', componentId), action.payload.id, action.payload.field, action.payload.newValue), _get__(\"editChangesUpdateAction\")(componentId));\n}));\nconst loadedDataHandleEpic = (actionStream, _stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  const componentId = action.payload.componentId;\n  return _get__(\"of\")(_get__(\"editChangesUpdateAction\")(componentId), _get__(\"changeActionButtonStateAction\")(componentId, 'SAVE', false, false), _get__(\"setSearchLoadingAction\")(componentId, false));\n}));\nconst multipleRowsDeleteEpic = (actionStream, stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  const {\n    componentId,\n    dataItems\n  } = action.payload;\n  const state = stateStream.value;\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', componentId);\n  let itemsToDelete = dataItems;\n  if (!itemsToDelete) {\n    // This is coming from a confirmation modal.  Check the state for the id value\n    itemsToDelete = _get__(\"getConfigFromState\")(componentId, state, ['pendingRowDeletionId']).toJS();\n  }\n  return _get__(\"of\")(_get__(\"deleteDataAction\")(dataSourceId, itemsToDelete), _get__(\"UiSdlDataRedux_saveDataAction\")(dataSourceId));\n}));\nconst rowDeleteEpic = (actionStream, stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  var _action$payload8;\n  const {\n    componentId,\n    dataItem\n  } = action.payload;\n  let rowId = dataItem !== null && dataItem !== void 0 && dataItem.id ? dataItem.id : (_action$payload8 = action.payload) === null || _action$payload8 === void 0 || (_action$payload8 = _action$payload8.obj) === null || _action$payload8 === void 0 ? void 0 : _action$payload8.id;\n  const state = stateStream.value;\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', componentId);\n  if (!rowId) {\n    // This is coming from a confirmation modal.  Check the state for the id value\n    rowId = _get__(\"getConfigFromState\")(componentId, state, ['pendingRowDeletionId']);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  return _get__(\"of\")(_get__(\"deleteDataAction\")(dataSourceId, [rowId]), _get__(\"UiSdlDataRedux_saveDataAction\")(dataSourceId));\n}));\nconst dataLoadEpic = (actionStream, stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  var _get__3;\n  const {\n    componentId\n  } = action.payload;\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', componentId);\n  const gridConfig = (_get__3 = _get__(\"getConfigFromState\")(componentId, stateStream.value)) === null || _get__3 === void 0 ? void 0 : _get__3.toJS();\n  const obs = [];\n  if (gridConfig) {\n    var _gridConfig$paginatio;\n    obs.push(_get__(\"of\")(_get__(\"mergeArgumentsAction\")(dataSourceId, {\n      spec: {\n        limit: (_gridConfig$paginatio = gridConfig.paginationConfig) !== null && _gridConfig$paginatio !== void 0 && _gridConfig$paginatio.pagination ? gridConfig.paginationConfig.pageSize : -1\n      }\n    }, componentId)));\n  }\n  obs.push(_get__(\"of\")(_get__(\"requestDataAction\")(dataSourceId)));\n  return _get__(\"from\")(obs).pipe(_get__(\"concatAll\")());\n}));\nconst rowAddEpic = (actionStream, _stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  return _get__(\"of\")(_get__(\"createUniqueIdAction\")(_get__(\"getCollectionDataSourceId\")('dataSpec', action.payload.componentId)));\n}));\nconst changeCancelEpic = (actionStream, _stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  const {\n    componentId\n  } = action.payload;\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', componentId);\n\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  return _get__(\"of\")(_get__(\"UiSdlDataRedux_cancelChangeAction\")(dataSourceId), _get__(\"editChangesUpdateAction\")(componentId));\n}));\nconst dataSaveEpic = (actionStream, _stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  const {\n    componentId\n  } = action.payload;\n  const dataSourceId = _get__(\"getCollectionDataSourceId\")('dataSpec', componentId);\n  return _get__(\"of\")(\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  _get__(\"UiSdlDataRedux_saveDataAction\")(dataSourceId), _get__(\"changeActionButtonStateAction\")(componentId, 'SAVE', false, true));\n}));\nfunction countDataEpic(actionStream, stateStream) {\n  return actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n    var _get__4;\n    const state = stateStream.value;\n    const {\n      componentId\n    } = action.payload;\n    const dataCountDataSourceId = _get__(\"getCollectionDataSourceId\")('totalDataCount', componentId);\n    // Need to get the typeName from the component's dataSpec\n    const contextVars = (_get__4 = _get__(\"getConfigFromState\")(componentId, state, ['dataSpec', 'contextVars'])) === null || _get__4 === void 0 ? void 0 : _get__4.toJS();\n    const c3type = _get__(\"getDataSourceFromState\")(dataCountDataSourceId, state, ['c3type']);\n    if (!c3type) {\n      return _get__(\"EMPTY\");\n    } else {\n      return _get__(\"of\")(_get__(\"syncDataCountArgumentsAction\")(componentId), _get__(\"requestDataAction\")(dataCountDataSourceId));\n    }\n  }));\n}\nconst dataUpdateCountEpic = (actionStream, _stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  const {\n    componentId\n  } = action.payload;\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  return _get__(\"of\")(_get__(\"countDataAction\")(componentId));\n}));\nconst addedEntryHandleEpic = (actionStream, stateStream) => actionStream.pipe(_get__(\"mergeMap\")(function (action) {\n  const {\n    componentId,\n    dataId\n  } = action.payload;\n  const state = stateStream.value;\n  const gridDataSpec = _get__(\"getConfigFromState\")(componentId, state, ['dataSpec']).toJS();\n  let field = null;\n  for (const columnField of gridDataSpec === null || gridDataSpec === void 0 ? void 0 : gridDataSpec.columnFields) {\n    if (columnField.editable) {\n      // Get the first column field that is editable\n      field = columnField.fieldName;\n      break;\n    }\n  }\n  return _get__(\"of\")(_get__(\"enterEditAction\")(componentId, dataId, field));\n}));\n\n\n\n\n\n\nconst epics = {\n  ..._get__(\"epics0\"),\n  TOTAL_DATA_COUNT: _get__(\"countDataEpic\"),\n  MULTIPLE_ROW_ACTION_CLICK_DELETE_ROW: _get__(\"multipleRowsDeleteEpic\"),\n  ROW_ACTION_CLICK_DELETE: _get__(\"rowDeleteEpic\"),\n  ITEM_CHANGE: _get__(\"itemChangeEpic\"),\n  LOADED_DATA_HANDLE: _get__(\"loadedDataHandleEpic\"),\n  TABLE_ACTION_CLICK_ADD_ROW: _get__(\"rowAddEpic\"),\n  DATA_LOAD: _get__(\"dataLoadEpic\"),\n  CHANGE_CANCEL: _get__(\"changeCancelEpic\"),\n  DATA_SAVE: _get__(\"dataSaveEpic\"),\n  UPDATE_DATA_COUNT: _get__(\"dataUpdateCountEpic\"),\n  ADDED_ENTRY_HANDLE: _get__(\"addedEntryHandleEpic\")\n};\nconst reducers = {\n  ..._get__(\"reducers0\"),\n  ROW_ACTION_CLICK_DELETE_WITH_CONFIRMATION: _get__(\"pendingRowDeletionIdUpdateEffect\"),\n  MULTIPLE_ROW_ACTION_CLICK_DELETE_WITH_CONFIRMATION: _get__(\"pendingRowsDeletionIdUpdateReducer\"),\n  CURRENTLY_CLICKED_DATA_UPDATE: _get__(\"currentlyClickedDataUpdateEffect\"),\n  EDIT_CHANGES_UPDATE: _get__(\"updateEditChangesEffect\"),\n  DATA_COUNT_ARGS_SYNC: _get__(\"dataCountArgumentsSyncReducer\"),\n  SAVE_CANCEL_BUTTON_VISIBILITY_UPDATE: _get__(\"saveCancelButtonVisibilityUpdateReducer\"),\n  MULTIPLE_ROW_ACTION_CLICK_DELETE_ROW: _get__(\"multipleRowsDeleteEffect\"),\n  COLUMN_VISIBILITY_TOGGLE: _get__(\"columnVisibilityToggleEffect\"),\n  EDIT_ENTER: _get__(\"enterEditEffect\"),\n  EDIT_EXIT: _get__(\"editExitEffect\"),\n  EDITERROR_CHANGES: _get__(\"editErrorChangesEffect\"),\n  SELECTION_CHANGE: _get__(\"selectionChangeEffect\"),\n  SELECT_ALL_TOGGLE: _get__(\"selectAllToggleEffect\"),\n  ROW_SELECT: _get__(\"rowSelectReducer\"),\n  COLUMN_SELECT: _get__(\"columnSelectReducer\"),\n  ROW_TOGGLE: _get__(\"toggleRowEffect\"),\n  ACTION_BUTTON_STATE_CHANGE: _get__(\"actionButtonStateChangeEffect\"),\n  TABLE_ACTION_LOADING_SET: _get__(\"tableActionLoadingSetReducer\"),\n  SELECTABLE_TABLE_ACTION_TOGGLE: _get__(\"selectableTableActionToggleReducer\")\n};\nconst actionCreators = {\n  ..._get__(\"actionCreators0\"),\n  loadDataAction: _get__(\"loadDataAction\"),\n  editChangesUpdateAction: _get__(\"editChangesUpdateAction\"),\n  updateSaveCancelButtonVisibilityAction: _get__(\"updateSaveCancelButtonVisibilityAction\"),\n  changeSelectionAction: _get__(\"changeSelectionAction\"),\n  toggleSelectAllAction: _get__(\"toggleSelectAllAction\"),\n  clickRowAction: _get__(\"clickRowAction\"),\n  triggerRowAction: _get__(\"triggerRowAction\"),\n  triggerMultipleRowAction: _get__(\"triggerMultipleRowAction\"),\n  triggerTableAction: _get__(\"triggerTableAction\"),\n  setTableActionLoadingAction: _get__(\"setTableActionLoadingAction\"),\n  triggerToggleSelectedTableAction: _get__(\"triggerToggleSelectedTableAction\"),\n  triggerCellAction: _get__(\"triggerCellAction\"),\n  changeItemAction: _get__(\"changeItemAction\"),\n  cancelChangeAction: _get__(\"cancelChangeAction\"),\n  saveDataAction: _get__(\"saveDataAction\"),\n  checkboxPrimaryButtonClickAction: _get__(\"checkboxPrimaryButtonClickAction\"),\n  checkboxSecondaryButtonClickAction: _get__(\"checkboxSecondaryButtonClickAction\"),\n  toggleColumnVisibilityAction: _get__(\"toggleColumnVisibilityAction\"),\n  enterEditAction: _get__(\"enterEditAction\"),\n  exitEditAction: _get__(\"exitEditAction\"),\n  changeActionButtonStateAction: _get__(\"changeActionButtonStateAction\"),\n  editErrorChangesAction: _get__(\"editErrorChangesAction\"),\n  toggleRowAction: _get__(\"toggleRowAction\"),\n  clickEmptyStateButtonAction: _get__(\"clickEmptyStateButtonAction\"),\n  updateCurrentlyClickedData: _get__(\"updateCurrentlyClickedData\"),\n  selectRowAction: _get__(\"selectRowAction\"),\n  selectColumnAction: _get__(\"selectColumnAction\"),\n  handleAddedEntryAction: _get__(\"handleAddedEntryAction\")\n};\nconst defaultValues = {\n  \"triggersRegistered\": false,\n  \"wrapWithMetadataId\": false,\n  \"detailComponentFilterable\": true,\n  \"expandedItems\": {},\n  \"checkboxes\": false,\n  \"scrollbarAlwaysVisible\": false,\n  \"checkboxesShowSelectAllBanner\": true,\n  \"rowStyle\": \"LINE_DIVISIONS\",\n  \"zebraStripes\": false,\n  \"rowDensity\": \"MEDIUM\",\n  \"resizableColumns\": false,\n  \"reorderableColumns\": false,\n  \"removableRows\": false,\n  \"confirmBeforeRowDelete\": false,\n  \"isEditing\": false,\n  \"tableActionsCollapseThreshold\": 2,\n  \"selectableRows\": false,\n  \"selectableColumns\": false,\n  \"showCheckboxActionButtons\": false,\n  \"showRowActionsOnIdle\": false,\n  \"checkboxPrimaryActionButtonText\": \"UiSdlDataGrid.checkboxPrimaryActionButtonText\",\n  \"checkboxSecondaryActionButtonText\": \"UiSdlDataGrid.checkboxSecondaryActionButtonText\",\n  \"showSaveCancelButton\": false,\n  \"hideSaveCancelButtonOnEdit\": false\n};\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getConfigFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__.getConfigFromState;\n    case \"isToggleable\":\n      return isToggleable;\n    case \"setConfigInState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__.setConfigInState;\n    case \"getCurrentlySelectedGridItems\":\n      return getCurrentlySelectedGridItems;\n    case \"findSelectedItemMatch\":\n      return findSelectedItemMatch;\n    case \"updateSelectedGridItems\":\n      return updateSelectedGridItems;\n    case \"isUndefined\":\n      return lodash__WEBPACK_IMPORTED_MODULE_3__.isUndefined;\n    case \"clickButtonAction\":\n      return _c3_ui_UiSdlEmptyState__WEBPACK_IMPORTED_MODULE_7__.clickButtonAction;\n    case \"getDataSourceFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__.getDataSourceFromState;\n    case \"getCollectionDataSourceId\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__.getCollectionDataSourceId;\n    case \"setDataSourceInState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__.setDataSourceInState;\n    case \"fromJS\":\n      return immutable__WEBPACK_IMPORTED_MODULE_2__.fromJS;\n    case \"copyRequestArgumentsInState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_5__.copyRequestArgumentsInState;\n    case \"findTableActionPath\":\n      return findTableActionPath;\n    case \"map\":\n      return lodash__WEBPACK_IMPORTED_MODULE_3__.map;\n    case \"generateIdByNameAndIndex\":\n      return generateIdByNameAndIndex;\n    case \"isBoolean\":\n      return (lodash_isBoolean__WEBPACK_IMPORTED_MODULE_8___default());\n    case \"replaceAllSelectedGridItemsWith\":\n      return replaceAllSelectedGridItemsWith;\n    case \"filter\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.filter;\n    case \"mergeMap\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.mergeMap;\n    case \"of\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.of;\n    case \"modifyDataAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.modifyDataAction;\n    case \"editChangesUpdateAction\":\n      return editChangesUpdateAction;\n    case \"changeActionButtonStateAction\":\n      return changeActionButtonStateAction;\n    case \"setSearchLoadingAction\":\n      return _c3_ui_UiSdlSearchable__WEBPACK_IMPORTED_MODULE_6__.setSearchLoadingAction;\n    case \"deleteDataAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.deleteDataAction;\n    case \"UiSdlDataRedux_saveDataAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.saveDataAction;\n    case \"mergeArgumentsAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.mergeArgumentsAction;\n    case \"requestDataAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.requestDataAction;\n    case \"from\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.from;\n    case \"concatAll\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.concatAll;\n    case \"createUniqueIdAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.createUniqueIdAction;\n    case \"UiSdlDataRedux_cancelChangeAction\":\n      return _c3_ui_UiSdlDataRedux__WEBPACK_IMPORTED_MODULE_4__.cancelChangeAction;\n    case \"EMPTY\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_1__.EMPTY;\n    case \"syncDataCountArgumentsAction\":\n      return syncDataCountArgumentsAction;\n    case \"countDataAction\":\n      return countDataAction;\n    case \"enterEditAction\":\n      return enterEditAction;\n    case \"epics0\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__.epics;\n    case \"countDataEpic\":\n      return countDataEpic;\n    case \"multipleRowsDeleteEpic\":\n      return multipleRowsDeleteEpic;\n    case \"rowDeleteEpic\":\n      return rowDeleteEpic;\n    case \"itemChangeEpic\":\n      return itemChangeEpic;\n    case \"loadedDataHandleEpic\":\n      return loadedDataHandleEpic;\n    case \"rowAddEpic\":\n      return rowAddEpic;\n    case \"dataLoadEpic\":\n      return dataLoadEpic;\n    case \"changeCancelEpic\":\n      return changeCancelEpic;\n    case \"dataSaveEpic\":\n      return dataSaveEpic;\n    case \"dataUpdateCountEpic\":\n      return dataUpdateCountEpic;\n    case \"addedEntryHandleEpic\":\n      return addedEntryHandleEpic;\n    case \"reducers0\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__.reducers;\n    case \"pendingRowDeletionIdUpdateEffect\":\n      return pendingRowDeletionIdUpdateEffect;\n    case \"pendingRowsDeletionIdUpdateReducer\":\n      return pendingRowsDeletionIdUpdateReducer;\n    case \"currentlyClickedDataUpdateEffect\":\n      return currentlyClickedDataUpdateEffect;\n    case \"updateEditChangesEffect\":\n      return updateEditChangesEffect;\n    case \"dataCountArgumentsSyncReducer\":\n      return dataCountArgumentsSyncReducer;\n    case \"saveCancelButtonVisibilityUpdateReducer\":\n      return saveCancelButtonVisibilityUpdateReducer;\n    case \"multipleRowsDeleteEffect\":\n      return multipleRowsDeleteEffect;\n    case \"columnVisibilityToggleEffect\":\n      return columnVisibilityToggleEffect;\n    case \"enterEditEffect\":\n      return enterEditEffect;\n    case \"editExitEffect\":\n      return editExitEffect;\n    case \"editErrorChangesEffect\":\n      return editErrorChangesEffect;\n    case \"selectionChangeEffect\":\n      return selectionChangeEffect;\n    case \"selectAllToggleEffect\":\n      return selectAllToggleEffect;\n    case \"rowSelectReducer\":\n      return rowSelectReducer;\n    case \"columnSelectReducer\":\n      return columnSelectReducer;\n    case \"toggleRowEffect\":\n      return toggleRowEffect;\n    case \"actionButtonStateChangeEffect\":\n      return actionButtonStateChangeEffect;\n    case \"tableActionLoadingSetReducer\":\n      return tableActionLoadingSetReducer;\n    case \"selectableTableActionToggleReducer\":\n      return selectableTableActionToggleReducer;\n    case \"actionCreators0\":\n      return _c3_ui_UiSdlComponent__WEBPACK_IMPORTED_MODULE_9__.actionCreators;\n    case \"loadDataAction\":\n      return loadDataAction;\n    case \"updateSaveCancelButtonVisibilityAction\":\n      return updateSaveCancelButtonVisibilityAction;\n    case \"changeSelectionAction\":\n      return changeSelectionAction;\n    case \"toggleSelectAllAction\":\n      return toggleSelectAllAction;\n    case \"clickRowAction\":\n      return clickRowAction;\n    case \"triggerRowAction\":\n      return triggerRowAction;\n    case \"triggerMultipleRowAction\":\n      return triggerMultipleRowAction;\n    case \"triggerTableAction\":\n      return triggerTableAction;\n    case \"setTableActionLoadingAction\":\n      return setTableActionLoadingAction;\n    case \"triggerToggleSelectedTableAction\":\n      return triggerToggleSelectedTableAction;\n    case \"triggerCellAction\":\n      return triggerCellAction;\n    case \"changeItemAction\":\n      return changeItemAction;\n    case \"cancelChangeAction\":\n      return cancelChangeAction;\n    case \"saveDataAction\":\n      return saveDataAction;\n    case \"checkboxPrimaryButtonClickAction\":\n      return checkboxPrimaryButtonClickAction;\n    case \"checkboxSecondaryButtonClickAction\":\n      return checkboxSecondaryButtonClickAction;\n    case \"toggleColumnVisibilityAction\":\n      return toggleColumnVisibilityAction;\n    case \"exitEditAction\":\n      return exitEditAction;\n    case \"editErrorChangesAction\":\n      return editErrorChangesAction;\n    case \"toggleRowAction\":\n      return toggleRowAction;\n    case \"clickEmptyStateButtonAction\":\n      return clickEmptyStateButtonAction;\n    case \"updateCurrentlyClickedData\":\n      return updateCurrentlyClickedData;\n    case \"selectRowAction\":\n      return selectRowAction;\n    case \"selectColumnAction\":\n      return selectColumnAction;\n    case \"handleAddedEntryAction\":\n      return handleAddedEntryAction;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlBaseDataGrid.ts_uiComponentLibrary\n");

/***/ })

}]);