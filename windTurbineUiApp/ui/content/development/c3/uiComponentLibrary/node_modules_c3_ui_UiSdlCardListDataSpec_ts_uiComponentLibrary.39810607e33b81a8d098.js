"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlCardListDataSpec_ts_uiComponentLibrary"],{

/***/ "./node_modules/@c3/ui/UiSdlCardListDataSpec.ts_uiComponentLibrary":
/*!******************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlCardListDataSpec.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   applyDataTransforms: () => (/* reexport safe */ _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_2__.applyDataTransforms),\n/* harmony export */   applyTransformArgs: () => (/* reexport safe */ _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_2__.applyTransformArgs),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   generateFilterFromContextVars: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.generateFilterFromContextVars),\n/* harmony export */   generateFilterFromDataPathAndContextVars: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.generateFilterFromDataPathAndContextVars),\n/* harmony export */   getDataTypeName: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.getDataTypeName),\n/* harmony export */   recursivelyGetField: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.recursivelyGetField),\n/* harmony export */   toPartiallyAppliedActions: () => (/* binding */ toPartiallyAppliedActions),\n/* harmony export */   toPartiallyAppliedAdvancedActions: () => (/* reexport safe */ _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.toPartiallyAppliedAdvancedActions)\n/* harmony export */ });\n/* harmony import */ var _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @c3/ui/UiSdlComponentDataSpec */ \"webpack/container/remote/@c3/ui/UiSdlComponentDataSpec_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _c3_ui_UiSdlFilter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/UiSdlFilter */ \"webpack/container/remote/@c3/ui/UiSdlFilter_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_UiSdlFilter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlFilter__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/WithDataTransforms */ \"webpack/sharing/consume/default/@c3/ui/WithDataTransforms_uiComponentLibrary\");\n/* harmony import */ var _c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_WithDataTransforms__WEBPACK_IMPORTED_MODULE_2__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\nconst constructActionArgsFilter = (dataSpecFilter, contextVars, disableContextVarsFilter) => {\n  let filter = dataSpecFilter;\n  filter = filter ? new (_get__(\"Filter\"))().lit(filter) : '';\n  filter = _get__(\"generateFilterFromContextVars\")(filter, contextVars, disableContextVarsFilter !== null && disableContextVarsFilter !== void 0 ? disableContextVarsFilter : false);\n  return filter;\n};\n\n/* global defaultValues */\n\nfunction toPartiallyAppliedActions(dataSpec) {\n  var _dataSpec$filterSpec;\n  const dataType = _get__(\"getDataTypeName\")(dataSpec);\n  const {\n    tunnelConfiguration,\n    contextVars,\n    disableContextVarsFilter,\n    dataTransforms\n  } = dataSpec;\n  const cardFields = [dataSpec.header, dataSpec.subHeader, dataSpec.numericalIndicator, dataSpec.contentBodyText, dataSpec.footerText, dataSpec.link].filter(function (field) {\n    return field;\n  });\n  let sortFields = dataSpec.sortFields || [];\n  sortFields = sortFields.filter(function (field) {\n    if (field && field.sortOrder) {\n      return field;\n    }\n  });\n  const filter = _get__(\"constructActionArgsFilter\")((_dataSpec$filterSpec = dataSpec.filterSpec) === null || _dataSpec$filterSpec === void 0 ? void 0 : _dataSpec$filterSpec.filter, contextVars, disableContextVarsFilter);\n\n  // Number of cards defaults to 4, cannot exceed 5\n  let numberOfCards = _get__(\"defaultValues\").numberOfCards;\n  if (dataSpec.numberOfCards && Number.isInteger(dataSpec.numberOfCards) && dataSpec.numberOfCards >= 0) {\n    numberOfCards = Math.min(dataSpec.numberOfCards, 5);\n  }\n  return [{\n    contextVars,\n    tunnelConfiguration,\n    dataTransforms,\n    partiallyAppliedAction: {\n      typeName: dataType,\n      // We only support fetch for now\n      actionName: 'fetch',\n      args: {\n        spec: {\n          limit: numberOfCards,\n          filter: filter && filter.toString(),\n          include: cardFields && cardFields.map(function (field) {\n            return field.fieldName;\n          }).join(', '),\n          order: sortFields && sortFields.map(function (field) {\n            return field.sortOrder + '(' + field.fieldName + ')';\n          }).join(', ')\n        }\n      }\n    }\n  }];\n}\n\n\n\n\n\n\n\nconst defaultValues = {\n  \"disableDataRequestOnFirstRender\": false,\n  \"numberOfCards\": 4\n};\n\n\n\n\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"Filter\":\n      return (_c3_ui_UiSdlFilter__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"generateFilterFromContextVars\":\n      return _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.generateFilterFromContextVars;\n    case \"getDataTypeName\":\n      return _c3_ui_UiSdlComponentDataSpec__WEBPACK_IMPORTED_MODULE_0__.getDataTypeName;\n    case \"constructActionArgsFilter\":\n      return constructActionArgsFilter;\n    case \"defaultValues\":\n      return defaultValues;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_RewireAPI__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlCardListDataSpec.ts_uiComponentLibrary\n");

/***/ })

}]);