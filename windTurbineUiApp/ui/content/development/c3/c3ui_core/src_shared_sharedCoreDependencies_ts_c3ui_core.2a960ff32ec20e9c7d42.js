"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["src_shared_sharedCoreDependencies_ts_c3ui_core"],{

/***/ "./node_modules/@c3/ui/UiSdlMetadataFilePrefix.ts_c3ui_core":
/*!********************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlMetadataFilePrefix.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar UiSdlMetadataFilePrefix = /*#__PURE__*/function (UiSdlMetadataFilePrefix) {\n  UiSdlMetadataFilePrefix[\"COMPONENT\"] = \"./components/\";\n  return UiSdlMetadataFilePrefix;\n}(UiSdlMetadataFilePrefix || {});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UiSdlMetadataFilePrefix);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGMzL3VpL1VpU2RsTWV0YWRhdGFGaWxlUHJlZml4LnRzX2MzdWlfY29yZSIsIm1hcHBpbmdzIjoiOzs7O0lBQUtBLHVCQUF1QiwwQkFBdkJBLHVCQUF1QjtFQUF2QkEsdUJBQXVCO0VBQUEsT0FBdkJBLHVCQUF1QjtBQUFBLEVBQXZCQSx1QkFBdUI7QUFHNUIsaUVBQWVBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2MzdWlfY29yZS8uL25vZGVfbW9kdWxlcy9AYzMvdWkvVWlTZGxNZXRhZGF0YUZpbGVQcmVmaXgudHM/ZTU2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJlbnVtIFVpU2RsTWV0YWRhdGFGaWxlUHJlZml4IHtcbiAgQ09NUE9ORU5UID0gXCIuL2NvbXBvbmVudHMvXCIsXG59XG5leHBvcnQgZGVmYXVsdCBVaVNkbE1ldGFkYXRhRmlsZVByZWZpeDsiXSwibmFtZXMiOlsiVWlTZGxNZXRhZGF0YUZpbGVQcmVmaXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlMetadataFilePrefix.ts_c3ui_core\n");

/***/ }),

/***/ "./node_modules/@c3/ui/UiSdlSpecHelper.ts_c3ui_core":
/*!************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlSpecHelper.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   destroyStore: () => (/* binding */ destroyStore),\n/* harmony export */   freezeProps: () => (/* binding */ freezeProps),\n/* harmony export */   getState: () => (/* binding */ getState),\n/* harmony export */   initComponent: () => (/* binding */ initComponent)\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ \"webpack/sharing/consume/default/react-dom/react-dom_c3ui_core?8d4c_c3ui_core\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs_testing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/testing */ \"webpack/sharing/consume/default/rxjs/testing/rxjs/testing_c3ui_core\");\n/* harmony import */ var rxjs_testing__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs_testing__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs/rxjs_c3ui_core\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators/rxjs/operators_c3ui_core\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var enzyme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! enzyme */ \"webpack/sharing/consume/default/enzyme_c3ui_core\");\n/* harmony import */ var enzyme__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(enzyme__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-intl */ \"webpack/sharing/consume/default/react-intl/react-intl_c3ui_core\");\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _c3_ui_UiSdlMetadataFilePrefix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/ui/UiSdlMetadataFilePrefix */ \"./node_modules/@c3/ui/UiSdlMetadataFilePrefix.ts_c3ui_core\");\n/* harmony import */ var _c3_ui_typeToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @c3/ui/typeToFederatedModuleMapping */ \"webpack/sharing/consume/default/@c3/ui/typeToFederatedModuleMapping/@c3/ui/typeToFederatedModuleMapping_c3ui_core\");\n/* harmony import */ var _c3_ui_typeToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_typeToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @c3/ui/UiSdlFederatedImport */ \"./node_modules/@c3/ui/UiSdlFederatedImport.ts_c3ui_core\");\n/* harmony import */ var _c3_app_ui_src_reduxStore__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @c3/app/ui/src/reduxStore */ \"./src/reduxStore.ts_c3ui_core\");\n/* harmony import */ var _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @c3/app/ui/src/epicRegistry */ \"webpack/sharing/consume/default/@c3/app/ui/src/epicRegistry/@c3/app/ui/src/epicRegistry_c3ui_core\");\n/* harmony import */ var _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_10__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n\n\n\nbeforeEach(function (done) {\n  /**\n   * Check if the test is under UNIT test category, and if it is, fail the test when\n   * requests are made to the server, indicating that the test has I/O and is not\n   * qualified for UNIT test category.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  this.unitTestCheck = function (doneArgument) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const queryString = new jasmine.QueryString({\n      getWindowLocation: function () {\n        return window.location;\n      }\n    });\n    /*\n     * TODO: UI-8079 Fix this, requestsDetected was not migrated correctly\n     * ```\n     * const isUnitTest = queryString.getParam('unit');\n     *\n     * if (isUnitTest && !_.isEmpty(requestsDetected)) {\n     *   doneArgument.fail(\n     *     'Tests of UNIT test category should not send ajax requests. Please make sure the mock is installed properly. ' +\n     *       'Requests are made to the following urls: ' +\n     *       requestsDetected.toString()\n     *   );\n     * }\n     * ```\n     */\n  };\n  this.unitTestCheck(done);\n  done();\n});\nafterEach(function (done) {\n  this.unitTestCheck(done);\n  done();\n});\nlet store;\n\n// Helper method to init a store if one has not been created\nfunction initStore(componentId, metadata, initialMetadata) {\n  if (!_get__(\"store\")) {\n    _assign__(\"store\", _get__(\"generateStore\")(componentId, metadata, initialMetadata));\n  }\n  return _get__(\"store\");\n}\nasync function importComponent(metadataId) {\n  const packageName = window.__C3_UI_TO_FEDERATED_MODULE_MAPPING__[_get__(\"UiSdlMetadataFilePrefix\").COMPONENT + metadataId];\n  if (!packageName) {\n    throw `Component \"${metadataId}\" was not found`;\n  }\n  return await _get__(\"federatedImport\")(packageName, 'components', metadataId);\n}\nasync function importType(typeName) {\n  const packageName = _get__(\"typeToFederatedModuleMapping\")[typeName];\n  if (!packageName) {\n    throw `Type \"${typeName}\" was not found`;\n  }\n  return await _get__(\"federatedImport\")(packageName, 'types', typeName);\n}\nasync function detectCurrentTag(tenant) {\n  const response = await fetch('/api/1/Tenant/tenants', {\n    method: 'POST',\n    headers: {\n      // eslint-disable-next-line prettier/prettier\n      Accept: 'application/json',\n      // eslint-disable-next-line prettier/prettier\n      Authorization: 'Basic QkE6QkE=',\n      'Content-Type': 'application/json'\n    },\n    mode: 'cors',\n    cache: 'default'\n  });\n  if (!response.ok) {\n    const message = `An error has occured: ${response.status}`;\n    throw new Error(message);\n  }\n  const tenants = await response.json();\n  const thisTenant = tenants.find(t => t.id === tenant);\n  return thisTenant === null || thisTenant === void 0 ? void 0 : thisTenant.defaultTag;\n}\nasync function renderByMetadataId(metadataId) {\n  try {\n    const dynamicComponent = await _get__(\"importComponent\")(metadataId);\n    // Note...calling initStore with nothing as having metadata seems to render incorrectly\n    window.renderTo(dynamicComponent.default, _get__(\"initStore\")());\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Failed to render component by metadataId for id: ' + metadataId);\n    throw e;\n  }\n}\nfunction clearRenderedContent() {\n  const div = document.getElementById('testContainer');\n\n  // Let ReactDOM remove the elements\n  _get__(\"ReactDOM\").unmountComponentAtNode(div);\n}\nasync function createSpy(componentType, functionName, spec) {\n  try {\n    const moduleWithRewire = await _get__(\"importType\")(componentType);\n    const originalFunction = moduleWithRewire[functionName];\n    const spy = jasmine.createSpy(`${componentType}.${functionName}`, originalFunction);\n    if (spec !== null && spec !== void 0 && spec.callThrough) {\n      spy.and.callThrough();\n    } else if ((spec === null || spec === void 0 ? void 0 : spec.returnValue) !== undefined) {\n      spy.and.returnValue(spec.returnValue);\n    } else if ((spec === null || spec === void 0 ? void 0 : spec.callFake) !== undefined) {\n      spy.and.callFake(spec.callFake);\n    }\n    moduleWithRewire.__Rewire__(functionName, spy);\n    return spy;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(`Failed to createSpy for function ${functionName} and componentType ${componentType}: ${e.message}`);\n    throw e;\n  }\n}\nasync function mockImportedObject(componentType, importedObjectName, mockedObject) {\n  let moduleWithRewire;\n  try {\n    moduleWithRewire = await _get__(\"importType\")(componentType);\n  } catch (e) {\n    console.error(`Failed to import ${componentType}.`);\n    throw e;\n  }\n  _get__(\"mock\")(moduleWithRewire, importedObjectName, mockedObject);\n}\nfunction mock(componentObject, importedObjectName, mockedObject) {\n  try {\n    const moduleWithRewire = componentObject;\n    moduleWithRewire.__RewireAPI__.__Rewire__(importedObjectName, mockedObject);\n  } catch (e) {\n    console.error(`Failed to mockComponentObject for importedObjectName ${importedObjectName} and componentObject ${componentObject}.`);\n    throw e;\n  }\n}\nasync function removeDependencies(componentType, functionName) {\n  try {\n    const moduleToRemoveRewire = await _get__(\"importType\")(componentType);\n    moduleToRemoveRewire.__RewireAPI__.__ResetDependency__(functionName);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(`Failed to removeDependencies for function ${functionName} and componentType ${componentType}.`);\n    throw e;\n  }\n}\nfunction removeMock(moduleToRemoveRewire, functionName) {\n  try {\n    if (moduleToRemoveRewire.__RewireAPI__) {\n      moduleToRemoveRewire.__RewireAPI__.__ResetDependency__(functionName);\n    } else {\n      moduleToRemoveRewire.__ResetDependency__(functionName);\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(`Failed to removeDependencies for function ${functionName} and componentType ${moduleToRemoveRewire}.`);\n    throw e;\n  }\n}\nasync function initComponent(componentId, metadata, initialMetadata, render) {\n  _get__(\"initStore\").call(this, componentId, metadata, initialMetadata);\n  if (render === true) {\n    await _get__(\"renderByMetadataId\")(componentId);\n  }\n  return _get__(\"store\");\n}\nfunction getState(componentId, metadata, initialMetadata) {\n  if (!_get__(\"store\")) {\n    return _get__(\"initStore\").call(this, componentId, metadata, initialMetadata).getState();\n  }\n  return _get__(\"store\").getState();\n}\nfunction dispatch(action) {\n  if (!_get__(\"store\")) {\n    throw new Error('No store initialized, must call initComponent or getState first');\n  }\n  return _get__(\"store\").dispatch(action);\n}\nfunction destroyStore() {\n  _assign__(\"store\", null);\n}\n\n// UNTESTED\n\nasync function spyOnEffect(effectType, functionName = 'epic', callThrough = false) {\n  try {\n    const effectWithRewire = await _get__(\"importType\")(effectType);\n    const originalEffect = effectWithRewire[functionName];\n    const spy = jasmine.createSpy(`${effectType}.${functionName}`);\n    if (callThrough) {\n      spy.and.callFake(originalEffect);\n    } else {\n      spy.and.callFake(function (actionStream) {\n        return actionStream.pipe(_get__(\"ignoreElements\")());\n      });\n    }\n    effectWithRewire.__Rewire__(functionName, spy);\n    return spy;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Failed to spyOnEffect for effect ' + effectType);\n    throw e;\n  }\n}\nfunction spyOnReduxAction(actionType) {\n  const actionSpy = jasmine.createSpy(actionType);\n  const spyEpic = function (actionStream) {\n    return actionStream.pipe(_get__(\"mergeMap\")(action => {\n      if (action.type === actionType) {\n        actionSpy(action);\n      }\n      return _get__(\"EMPTY\");\n    }));\n  };\n  _get__(\"globalEpicStream\").next(spyEpic);\n  return actionSpy;\n}\nfunction expectObservable(done, spec, stateStream) {\n  // eslint-disable-next-line no-console\n  console.warn(\"Calling `expectObservable` on an epic that uses an async function/promise doesn't work. Look at the \" + 'documentation for `expectObservable` in `SpecHelper.ts` to see the correct way to test an epic if this ' + 'is the case.');\n  if (!spec.epic) {\n    if (spec.asyncEffect && spec.componentType) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling `expectObservable` with an `asyncEffect` is deprecated. Use `epic` instead.');\n      spec.epic = spec.componentType[spec.asyncEffect];\n    }\n  }\n  if (!spec.epic) {\n    fail('Missing `epic` to test in `expectObservable`.');\n  }\n\n  /**\n   * Helper function to surface the errors in an asyncEffect / observable.\n   * If the observable has an error, surface the error to the developer.  Without this the testScheduler will mask the\n   * error and only tell the developer that an expected value did not equal the actual value.\n   * Most likely this will just say \"expected undefined to equal ...\" which may be masking the real issue\n   * @param {[UiSdlObservable]} observables\n   */\n  const surfaceObservableErrors = function (observables) {\n    observables = observables || [];\n    observables.forEach(function (observable) {\n      const notification = observable.notification;\n      if ((notification === null || notification === void 0 ? void 0 : notification.kind) == 'E') {\n        // eslint-disable-next-line no-console\n        console.error(notification === null || notification === void 0 ? void 0 : notification.error);\n      }\n    });\n  };\n  const testScheduler = new (_get__(\"TestScheduler\"))(function (actual, expected) {\n    surfaceObservableErrors(actual);\n    expect(actual.length).withContext(\"Output observable stream count doesn't match\").toEqual(expected.length);\n    actual.forEach(function (observable, index) {\n      var _expected$index;\n      const actualNotification = observable.notification;\n      const expectedNotification = expected === null || expected === void 0 || (_expected$index = expected[index]) === null || _expected$index === void 0 ? void 0 : _expected$index.notification;\n\n      // Check errors first. Debugging is easier if errors are reported first.\n      const actualError = actualNotification.error;\n      const expectedError = expectedNotification === null || expectedNotification === void 0 ? void 0 : expectedNotification.error;\n\n      // Allow expected errors. This is probably an edge case.\n      if (expectedError) {\n        expect(actualError).toEqual(expectedError);\n      } else if (actualError) {\n        // Fail automatically if there was an unexpected error.\n        fail(actualError);\n      }\n      const actualAction = actualNotification.value;\n      const expectedAction = expectedNotification === null || expectedNotification === void 0 ? void 0 : expectedNotification.value;\n      if (expectedAction) {\n        expect(actualAction).withContext(\"Actions don't match\").toEqual(jasmine.objectContaining(expectedAction));\n      } else {\n        expect(actualAction).withContext('Action should not have been triggered').toBeUndefined();\n      }\n    });\n    done();\n  });\n  testScheduler.run(function (options) {\n    const hot = options.hot;\n    const expectObservable = options.expectObservable;\n    const actionStream = hot(spec.input[0], spec.input[1]);\n    const outputStream = spec.epic.call(null, actionStream, stateStream);\n    expectObservable(outputStream).toBe(spec.output[0], spec.output[1], spec.output[2]);\n  });\n  return testScheduler;\n}\nfunction waitUntil(func, scope, timeout, message, interval) {\n  return new Promise(function (resolve, reject) {\n    timeout = timeout || 5000;\n    interval = interval || 50;\n    const polling = setInterval(function () {\n      timeout -= interval;\n      if (func.call(scope) || timeout < 0) {\n        clearInterval(polling);\n        if (timeout < 0) {\n          reject('timeout waiting ' + message);\n        } else {\n          resolve();\n        }\n      }\n    }, interval);\n  });\n}\nfunction shallowWithIntl(node, {\n  context,\n  ...additionalOptions\n} = {}, translations = {}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // Calling dive so it returns the component without the wrappingComponent\n  return _get__(\"shallow\")(node, {\n    context: {\n      ...context\n    },\n    wrappingComponent: _get__(\"IntlProvider\"),\n    wrappingComponentProps: {\n      locale: 'en',\n      messages: translations\n    },\n    ...additionalOptions\n  });\n}\nfunction mountWithIntl(node, {\n  context,\n  childContextTypes,\n  ...additionalOptions\n} = {}, translations = {\n  'SDL.Translate.UiDynamicValueSpec.dynamicValue.default': '{displayValue}'\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  return _get__(\"mount\")(node, {\n    context: {\n      ...context\n    },\n    childContextTypes: {\n      ...childContextTypes\n    },\n    wrappingComponent: _get__(\"IntlProvider\"),\n    wrappingComponentProps: {\n      locale: 'en',\n      messages: translations\n    },\n    ...additionalOptions\n  });\n}\n\n/**\n * Checks if a given object contains a particular property.\n * @param props The object to check.\n * @param prop The property name to check.\n */\nfunction hasOwnProp(props, prop) {\n  return Object.prototype.hasOwnProperty.call(props, prop);\n}\n\n/**\n * Checks if a component is rendered. It is useful when a dynamic component is asynchronously rendered,\n * and test should wait for a given `timeout` for successful rendering before proceeding with an assertion block.\n * If a component is rendered successfully during the given `timeout`, the function returns a {Promise} that resolves\n * to `true`. Otherwise the function returns a {Promise} that resolves to `false`.\n * @param {ReactWrapper} wrapper The wrapper instance around the rendered component.\n * @param {string} selector The selector to check if a component is rendered.\n * @param {number} timeout The timeout (in seconds) during which performed a check if a component is rendered.\n * @returns {Promise} The {Promise} that resolves to `true` in case of successful rendering, and to `false` otherwise.\n */\nfunction isComponentRendered(wrapper, selector, timeout) {\n  const delayInMillis = 1000;\n  const timeoutInSeconds = timeout || 10;\n  let elapsedTimeoutInSeconds = 0;\n  return new Promise(resolve => {\n    const intervalId = setInterval(function () {\n      wrapper.update();\n      elapsedTimeoutInSeconds++;\n      if (wrapper.find(selector).length > 0) {\n        clearInterval(intervalId);\n        resolve(true);\n      } else if (elapsedTimeoutInSeconds > timeoutInSeconds) {\n        clearInterval(intervalId);\n        resolve(false);\n      }\n    }, delayInMillis);\n  });\n}\nfunction freezeProps(props) {\n  Object.freeze(props);\n  Object.getOwnPropertyNames(props).forEach(function (prop) {\n    if (_get__(\"hasOwnProp\")(props, prop) && props[prop] !== null && (typeof props[prop] === 'object' || typeof props[prop] === 'function') && !Object.isFrozen(props[prop])) {\n      _get__(\"freezeProps\")(props[prop]);\n    }\n  });\n  return props;\n}\n\nlet _DefaultExportValue = {\n  createSpy: _get__(\"createSpy\"),\n  mockImportedObject: _get__(\"mockImportedObject\"),\n  mock: _get__(\"mock\"),\n  freezeProps: _get__(\"freezeProps\"),\n  removeDependencies: _get__(\"removeDependencies\"),\n  removeMock: _get__(\"removeMock\"),\n  spyOnEffect: _get__(\"spyOnEffect\"),\n  spyOnReduxAction: _get__(\"spyOnReduxAction\"),\n  renderByMetadataId: _get__(\"renderByMetadataId\"),\n  clearRenderedContent: _get__(\"clearRenderedContent\"),\n  expectObservable: _get__(\"expectObservable\"),\n  waitUntil: _get__(\"waitUntil\"),\n  initComponent: _get__(\"initComponent\"),\n  getState: _get__(\"getState\"),\n  dispatch: _get__(\"dispatch\"),\n  destroyStore: _get__(\"destroyStore\"),\n  shallowWithIntl: _get__(\"shallowWithIntl\"),\n  mountWithIntl: _get__(\"mountWithIntl\"),\n  importType: _get__(\"importType\"),\n  importComponent: _get__(\"importComponent\"),\n  detectCurrentTag: _get__(\"detectCurrentTag\"),\n  isComponentRendered: _get__(\"isComponentRendered\")\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_DefaultExportValue);\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"store\":\n      return store;\n    case \"generateStore\":\n      return _c3_app_ui_src_reduxStore__WEBPACK_IMPORTED_MODULE_9__.generateStore;\n    case \"UiSdlMetadataFilePrefix\":\n      return _c3_ui_UiSdlMetadataFilePrefix__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\n    case \"federatedImport\":\n      return _c3_ui_UiSdlFederatedImport__WEBPACK_IMPORTED_MODULE_8__.federatedImport;\n    case \"typeToFederatedModuleMapping\":\n      return (_c3_ui_typeToFederatedModuleMapping__WEBPACK_IMPORTED_MODULE_7___default());\n    case \"importComponent\":\n      return importComponent;\n    case \"initStore\":\n      return initStore;\n    case \"ReactDOM\":\n      return (react_dom__WEBPACK_IMPORTED_MODULE_0___default());\n    case \"importType\":\n      return importType;\n    case \"mock\":\n      return mock;\n    case \"renderByMetadataId\":\n      return renderByMetadataId;\n    case \"ignoreElements\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.ignoreElements;\n    case \"mergeMap\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.mergeMap;\n    case \"EMPTY\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_2__.EMPTY;\n    case \"globalEpicStream\":\n      return _c3_app_ui_src_epicRegistry__WEBPACK_IMPORTED_MODULE_10__.globalEpicStream;\n    case \"TestScheduler\":\n      return rxjs_testing__WEBPACK_IMPORTED_MODULE_1__.TestScheduler;\n    case \"shallow\":\n      return enzyme__WEBPACK_IMPORTED_MODULE_4__.shallow;\n    case \"IntlProvider\":\n      return react_intl__WEBPACK_IMPORTED_MODULE_5__.IntlProvider;\n    case \"mount\":\n      return enzyme__WEBPACK_IMPORTED_MODULE_4__.mount;\n    case \"hasOwnProp\":\n      return hasOwnProp;\n    case \"freezeProps\":\n      return freezeProps;\n    case \"createSpy\":\n      return createSpy;\n    case \"mockImportedObject\":\n      return mockImportedObject;\n    case \"removeDependencies\":\n      return removeDependencies;\n    case \"removeMock\":\n      return removeMock;\n    case \"spyOnEffect\":\n      return spyOnEffect;\n    case \"spyOnReduxAction\":\n      return spyOnReduxAction;\n    case \"clearRenderedContent\":\n      return clearRenderedContent;\n    case \"expectObservable\":\n      return expectObservable;\n    case \"waitUntil\":\n      return waitUntil;\n    case \"initComponent\":\n      return initComponent;\n    case \"getState\":\n      return getState;\n    case \"dispatch\":\n      return dispatch;\n    case \"destroyStore\":\n      return destroyStore;\n    case \"shallowWithIntl\":\n      return shallowWithIntl;\n    case \"mountWithIntl\":\n      return mountWithIntl;\n    case \"detectCurrentTag\":\n      return detectCurrentTag;\n    case \"isComponentRendered\":\n      return isComponentRendered;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {\n    case \"store\":\n      return store = _value;\n  }\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof _DefaultExportValue;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(_DefaultExportValue, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(_DefaultExportValue)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\nfunction _filterWildcardImport__(wildcardImport = {}) {\n  let validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlSpecHelper.ts_c3ui_core\n");

/***/ }),

/***/ "./src/shared/sharedCoreDependencies.prod.ts_c3ui_core":
/*!***************************************************!*\
  !*** ./src/shared/sharedCoreDependencies.prod.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SDLDragDropContext: () => (/* reexport default from dynamic */ _c3_sdl_react_reactComponents_dragAndDrop_SDLDragDropContext__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   rxjs: () => (/* reexport default from dynamic */ rxjs__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   rxjsOperators: () => (/* reexport default from dynamic */ rxjs_operators__WEBPACK_IMPORTED_MODULE_1___default.a)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs/rxjs_c3ui_core\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators/rxjs/operators_c3ui_core\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_sdl_react_reactComponents_dragAndDrop_SDLDragDropContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/sdl-react/reactComponents/dragAndDrop/SDLDragDropContext */ \"webpack/sharing/consume/default/@c3/sdl-react/reactComponents/dragAndDrop/SDLDragDropContext/@c3/sdl-react/reactComponents/dragAndDrop/SDLDragDropContext_c3ui_core\");\n/* harmony import */ var _c3_sdl_react_reactComponents_dragAndDrop_SDLDragDropContext__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_c3_sdl_react_reactComponents_dragAndDrop_SDLDragDropContext__WEBPACK_IMPORTED_MODULE_2__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n/*\n * This file is only used to force webpack to include shared libraries in a\n * consistent way, not all libraries are included here because we already import them in other files\n * but UI Infrastructure developers might need to add others here if we are not directly using them.\n */\n\n\n\n\n// Overrides uiInfrastructureReact to force loading extra dependencies:\n\n// Needed to make sure layouts using react-dnd can have all shared dependencies\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkL3NoYXJlZENvcmVEZXBlbmRlbmNpZXMucHJvZC50c19jM3VpX2NvcmUiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUM7QUFDbUI7O0FBRTFEOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYzN1aV9jb3JlLy4vc3JjL3NoYXJlZC9zaGFyZWRDb3JlRGVwZW5kZW5jaWVzLnByb2QudHM/MDA5NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMDktMjAyNCBDMyBBSSAod3d3LmMzLmFpKS4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgbWF0ZXJpYWwsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gYW55IHNvZnR3YXJlLCBpcyB0aGUgY29uZmlkZW50aWFsIHRyYWRlIHNlY3JldCBhbmQgcHJvcHJpZXRhcnlcbiAqIGluZm9ybWF0aW9uIG9mIEMzIGFuZCBpdHMgbGljZW5zb3JzLiBSZXByb2R1Y3Rpb24sIHVzZSBhbmQvb3IgZGlzdHJpYnV0aW9uIG9mIHRoaXMgbWF0ZXJpYWwgaW4gYW55IGZvcm0gaXNcbiAqIHN0cmljdGx5IHByb2hpYml0ZWQgZXhjZXB0IGFzIHNldCBmb3J0aCBpbiBhIHdyaXR0ZW4gbGljZW5zZSBhZ3JlZW1lbnQgd2l0aCBDMyBhbmQvb3IgaXRzIGF1dGhvcml6ZWQgZGlzdHJpYnV0b3JzLlxuICogVGhpcyBtYXRlcmlhbCBtYXkgYmUgY292ZXJlZCBieSBvbmUgb3IgbW9yZSBwYXRlbnRzIG9yIHBlbmRpbmcgcGF0ZW50IGFwcGxpY2F0aW9ucy5cbiAqL1xuXG4vKlxuICogVGhpcyBmaWxlIGlzIG9ubHkgdXNlZCB0byBmb3JjZSB3ZWJwYWNrIHRvIGluY2x1ZGUgc2hhcmVkIGxpYnJhcmllcyBpbiBhXG4gKiBjb25zaXN0ZW50IHdheSwgbm90IGFsbCBsaWJyYXJpZXMgYXJlIGluY2x1ZGVkIGhlcmUgYmVjYXVzZSB3ZSBhbHJlYWR5IGltcG9ydCB0aGVtIGluIG90aGVyIGZpbGVzXG4gKiBidXQgVUkgSW5mcmFzdHJ1Y3R1cmUgZGV2ZWxvcGVycyBtaWdodCBuZWVkIHRvIGFkZCBvdGhlcnMgaGVyZSBpZiB3ZSBhcmUgbm90IGRpcmVjdGx5IHVzaW5nIHRoZW0uXG4gKi9cblxuZXhwb3J0IHsgZGVmYXVsdCBhcyByeGpzIH0gZnJvbSAncnhqcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHJ4anNPcGVyYXRvcnMgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8vIE92ZXJyaWRlcyB1aUluZnJhc3RydWN0dXJlUmVhY3QgdG8gZm9yY2UgbG9hZGluZyBleHRyYSBkZXBlbmRlbmNpZXM6XG5cbi8vIE5lZWRlZCB0byBtYWtlIHN1cmUgbGF5b3V0cyB1c2luZyByZWFjdC1kbmQgY2FuIGhhdmUgYWxsIHNoYXJlZCBkZXBlbmRlbmNpZXNcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU0RMRHJhZ0Ryb3BDb250ZXh0IH0gZnJvbSAnQGMzL3NkbC1yZWFjdC9yZWFjdENvbXBvbmVudHMvZHJhZ0FuZERyb3AvU0RMRHJhZ0Ryb3BDb250ZXh0JztcbiJdLCJuYW1lcyI6WyJkZWZhdWx0IiwicnhqcyIsInJ4anNPcGVyYXRvcnMiLCJTRExEcmFnRHJvcENvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/shared/sharedCoreDependencies.prod.ts_c3ui_core\n");

/***/ }),

/***/ "./src/shared/sharedCoreDependencies.ts_c3ui_core":
/*!**********************************************!*\
  !*** ./src/shared/sharedCoreDependencies.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SDLDragDropContext: () => (/* reexport safe */ _sharedCoreDependencies_prod__WEBPACK_IMPORTED_MODULE_0__.SDLDragDropContext),\n/* harmony export */   UiSdlSpecHelper: () => (/* reexport safe */ _c3_ui_UiSdlSpecHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   rxjs: () => (/* reexport safe */ _sharedCoreDependencies_prod__WEBPACK_IMPORTED_MODULE_0__.rxjs),\n/* harmony export */   rxjsOperators: () => (/* reexport safe */ _sharedCoreDependencies_prod__WEBPACK_IMPORTED_MODULE_0__.rxjsOperators)\n/* harmony export */ });\n/* harmony import */ var _sharedCoreDependencies_prod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sharedCoreDependencies.prod */ \"./src/shared/sharedCoreDependencies.prod.ts_c3ui_core\");\n/* harmony import */ var _c3_ui_UiSdlSpecHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/UiSdlSpecHelper */ \"./node_modules/@c3/ui/UiSdlSpecHelper.ts_c3ui_core\");\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n/*\n * This file is only used to force webpack to include shared libraries in a\n * consistent way, not all libraries are included here because we already import them in other files\n * but UI Infrastructure developers might need to add others here if we are not directly using them.\n */\n\n\n\n/*\n * This might seem like it belongs to shared/tests, but because rxjs needs Schedulers to be singletons,\n * we need it to be in the core so it uses the same rxjs library code.\n *\n * Only needed in development mode, since that's the only one that supports unit tests.\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hhcmVkL3NoYXJlZENvcmVEZXBlbmRlbmNpZXMudHNfYzN1aV9jb3JlIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThDOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jM3VpX2NvcmUvLi9zcmMvc2hhcmVkL3NoYXJlZENvcmVEZXBlbmRlbmNpZXMudHM/MDRmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMDktMjAyNCBDMyBBSSAod3d3LmMzLmFpKS4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgbWF0ZXJpYWwsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gYW55IHNvZnR3YXJlLCBpcyB0aGUgY29uZmlkZW50aWFsIHRyYWRlIHNlY3JldCBhbmQgcHJvcHJpZXRhcnlcbiAqIGluZm9ybWF0aW9uIG9mIEMzIGFuZCBpdHMgbGljZW5zb3JzLiBSZXByb2R1Y3Rpb24sIHVzZSBhbmQvb3IgZGlzdHJpYnV0aW9uIG9mIHRoaXMgbWF0ZXJpYWwgaW4gYW55IGZvcm0gaXNcbiAqIHN0cmljdGx5IHByb2hpYml0ZWQgZXhjZXB0IGFzIHNldCBmb3J0aCBpbiBhIHdyaXR0ZW4gbGljZW5zZSBhZ3JlZW1lbnQgd2l0aCBDMyBhbmQvb3IgaXRzIGF1dGhvcml6ZWQgZGlzdHJpYnV0b3JzLlxuICogVGhpcyBtYXRlcmlhbCBtYXkgYmUgY292ZXJlZCBieSBvbmUgb3IgbW9yZSBwYXRlbnRzIG9yIHBlbmRpbmcgcGF0ZW50IGFwcGxpY2F0aW9ucy5cbiAqL1xuXG4vKlxuICogVGhpcyBmaWxlIGlzIG9ubHkgdXNlZCB0byBmb3JjZSB3ZWJwYWNrIHRvIGluY2x1ZGUgc2hhcmVkIGxpYnJhcmllcyBpbiBhXG4gKiBjb25zaXN0ZW50IHdheSwgbm90IGFsbCBsaWJyYXJpZXMgYXJlIGluY2x1ZGVkIGhlcmUgYmVjYXVzZSB3ZSBhbHJlYWR5IGltcG9ydCB0aGVtIGluIG90aGVyIGZpbGVzXG4gKiBidXQgVUkgSW5mcmFzdHJ1Y3R1cmUgZGV2ZWxvcGVycyBtaWdodCBuZWVkIHRvIGFkZCBvdGhlcnMgaGVyZSBpZiB3ZSBhcmUgbm90IGRpcmVjdGx5IHVzaW5nIHRoZW0uXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9zaGFyZWRDb3JlRGVwZW5kZW5jaWVzLnByb2QnO1xuXG4vKlxuICogVGhpcyBtaWdodCBzZWVtIGxpa2UgaXQgYmVsb25ncyB0byBzaGFyZWQvdGVzdHMsIGJ1dCBiZWNhdXNlIHJ4anMgbmVlZHMgU2NoZWR1bGVycyB0byBiZSBzaW5nbGV0b25zLFxuICogd2UgbmVlZCBpdCB0byBiZSBpbiB0aGUgY29yZSBzbyBpdCB1c2VzIHRoZSBzYW1lIHJ4anMgbGlicmFyeSBjb2RlLlxuICpcbiAqIE9ubHkgbmVlZGVkIGluIGRldmVsb3BtZW50IG1vZGUsIHNpbmNlIHRoYXQncyB0aGUgb25seSBvbmUgdGhhdCBzdXBwb3J0cyB1bml0IHRlc3RzLlxuICovXG5leHBvcnQgeyBkZWZhdWx0IGFzIFVpU2RsU3BlY0hlbHBlciB9IGZyb20gJ0BjMy91aS9VaVNkbFNwZWNIZWxwZXInO1xuIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJVaVNkbFNwZWNIZWxwZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/shared/sharedCoreDependencies.ts_c3ui_core\n");

/***/ })

}]);