"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_reducerRegistry_ts_c3ui_core"],{

/***/ "./node_modules/@c3/ui/reducerRegistry.ts_c3ui_core":
/*!************************************************!*\
  !*** ./node_modules/@c3/ui/reducerRegistry.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   enhanceAction: () => (/* binding */ enhanceAction),\n/* harmony export */   parseActionType: () => (/* binding */ parseActionType),\n/* harmony export */   parseComponentIdByActionType: () => (/* binding */ parseComponentIdByActionType),\n/* harmony export */   registerReducer: () => (/* binding */ registerReducer),\n/* harmony export */   rootReducer: () => (/* binding */ rootReducer),\n/* harmony export */   stateUpdates: () => (/* binding */ stateUpdates)\n/* harmony export */ });\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable_c3ui_core\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/UiSdlConnected */ \"webpack/sharing/consume/default/@c3/ui/UiSdlConnected/@c3/ui/UiSdlConnected_c3ui_core\");\n/* harmony import */ var _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs/rxjs_c3ui_core\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(rxjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \"webpack/sharing/consume/default/rxjs/operators/rxjs/operators_c3ui_core\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__);\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n/**\n * Registry for reducer functions.\n * They are registered with registerReducer.\n */\nconst reducerRegistry = {};\n\n/**\n * Generates a reducer key from a parsed action type.\n *\n * This key can be used to retrieve a reducer from the reducerRegistry object.\n *\n * @param action The action to generate the key for\n */\nfunction getReducerKey(action) {\n  return action.componentId ? `${action.componentTypeName}.${action.actionName}` : action.actionName;\n}\n\n/**\n * We manually get an AsapScheduler to make sure we notify subscribers asynchronously once synchronous code\n * execution is done.\n */\nconst Scheduler = _get__(\"asapScheduler\").constructor;\nconst uniqueQueueScheduler = new (_get__(\"Scheduler\"))(_get__(\"asapScheduler\").SchedulerAction);\n\n/**\n * An observable to publish state updates.\n *\n * This one is not being exposed because we still want to apply other operations to the stream before\n * subscribers consume it.\n */\nconst stateUpdates$ = new (_get__(\"Subject\"))().pipe(_get__(\"observeOn\")(_get__(\"uniqueQueueScheduler\")), _get__(\"subscribeOn\")(_get__(\"uniqueQueueScheduler\")));\nfunction arbitraryComponentValueDangerouslySetReducer(state, action) {\n  const {\n    path,\n    value,\n    componentId\n  } = action.payload;\n  if (componentId.startsWith('SDL.')) {\n    console.error('Components with prefix `SDL.` cannot be updated dangerously');\n    return state;\n  }\n  return _get__(\"setConfigInState\")(componentId, state, path, value);\n}\n\n/**\n * Parse the component Id from an action type.\n * @param actionType The action type string\n */\nfunction parseComponentIdByActionType(actionType) {\n  const actionTypeParts = actionType.split('.');\n  return actionTypeParts.slice(0, actionTypeParts.length - 1).join('.');\n}\n\n/**\n * This function retrieves the component id and type from the action type and state.\n *\n * This could be avoided if action.meta had extra info but for now we will keep it this way\n * for backwards compatibility.\n *\n * TODO: ENGR-7650 Parsed action data should be incorporated into action.meta as part of a Redux middleware\n * to avoid parsing in multiple places.\n */\nfunction parseActionType(actionType, state) {\n  if (actionType.includes('/')) {\n    let componentId = actionType.split('/')[0];\n    let dataSourceId;\n\n    /**\n     * Set componentId to the data context component and set dataSourceId if the action\n     * is a data spec related action.\n     */\n    if ((actionType.match(/\\//g) || []).length > 1) {\n      dataSourceId = componentId;\n      componentId = 'SDL.DefaultDataContext';\n    }\n\n    // Component type can be type of UiSdlApplicationState.\n    const componentTypeName = _get__(\"getConfigFromState\")(componentId, state, ['type']) || state.getIn(['metadata', 'applications', 'byId', componentId, 'type']);\n    if (!componentTypeName) {\n      return {\n        componentId,\n        actionName: actionType\n      };\n    }\n\n    // The last element of the array is the action name, because action name does not contain '/'\n    const actionName = actionType.split('/').pop();\n    return {\n      componentId,\n      componentTypeName,\n      actionName,\n      dataSourceId\n    };\n  }\n  const actionTypeParts = actionType.split('.');\n  if (actionTypeParts.length <= 1) {\n    return {\n      actionName: actionType\n    };\n  }\n  let componentId = _get__(\"parseComponentIdByActionType\")(actionType);\n  let dataSourceId;\n\n  /**\n   * Set componentId to the data context component and set dataSourceId if the action\n   * is a data spec related action.\n   */\n  if (actionType.includes('_ds.')) {\n    dataSourceId = componentId;\n    componentId = 'SDL.DefaultDataContext';\n  }\n\n  // Component type can be type of UiSdlApplicationState.\n  const componentTypeName = _get__(\"getConfigFromState\")(componentId, state, ['type']) || state.getIn(['metadata', 'applications', 'byId', componentId, 'type']);\n  if (!componentTypeName) {\n    return {\n      componentId,\n      actionName: actionType\n    };\n  }\n\n  // The last element of the array is the action name, because action name does not contain '.'\n  const actionName = actionTypeParts[actionTypeParts.length - 1];\n  return {\n    componentId,\n    componentTypeName,\n    actionName,\n    dataSourceId\n  };\n}\nfunction enhanceAction(action, state) {\n  const parsedAction = _get__(\"parseActionType\")(action.type, state);\n  return {\n    ...action,\n    meta: {\n      ...action.meta,\n      ...parsedAction\n    }\n  };\n}\n\n/**\n * An observable that streams an event every time a reducer is run, potentially updating the state.\n *\n * This is an optimization to replace Redux's useSelector.\n *\n * ## How it works\n *\n * stateUpdates is broadcasting potential changes to the state by notifying subscriptors only when a\n * reducer has been run for the given action (as opposed to useSelector that notifies on every action).\n *\n * Because mutations can still be done to the state since our state is not fully immutable :(, we use\n * the root reducer to notify subscribers of new state. This is not perfect, but optimizes the execution\n * of subscribers since a lot of actions are only used to notify other components or to execute async\n * operations via Epics.\n *\n * Optimizations come from:\n *\n * 1. Only reducers cause notifications (instead of all actions)\n * 2. Notifications are debounced (instead of all reducers causing re-render)\n * 3. Notifications are scheduled with AsapScheduler to ensure components get asynchronously notified\n *    without risk of \"dropping\" renders.\n *\n * @see UiSdlUseData for usage in useSelectedState\n *\n */\nconst stateUpdates = _get__(\"stateUpdates$\").pipe(_get__(\"debounceTime\")(50));\nfunction rootReducer(state, action) {\n  const enhancedAction = _get__(\"enhanceAction\")(action, state);\n  const enhancedActionMeta = enhancedAction.meta;\n  const reducerKey = _get__(\"getReducerKey\")(enhancedActionMeta);\n  let stateChanged = false;\n  const reducer = _get__(\"reducerRegistry\")[reducerKey];\n  if (reducer) {\n    stateChanged = true;\n    state = reducer(state, enhancedAction, enhancedActionMeta.componentId);\n  } else {\n    switch (reducerKey) {\n      case 'GLOBAL_ADD_METADATA':\n        {\n          stateChanged = true;\n          const initialMetadata = action.payload.metadata;\n          state = state.setIn(['metadata', 'components', 'byId', action.payload.id], _get__(\"fromJS\")(initialMetadata));\n          state = state.setIn(['initialMetadata', 'components', 'byId', action.payload.id], _get__(\"fromJS\")(initialMetadata));\n          break;\n        }\n      case 'GLOBAL_ADD_APPLICATION_METADATA':\n        {\n          stateChanged = true;\n          state = state.setIn(['metadata', 'applications', 'byId', action.payload.id], _get__(\"fromJS\")(action.payload.metadata));\n          break;\n        }\n      case 'GLOBAL_SET_CURRENT_PAGE':\n        {\n          stateChanged = true;\n          state = _get__(\"setConfigInState\")(enhancedActionMeta.siteId, state, ['currentPage'], action.payload.currentPage);\n          break;\n        }\n      case 'GLOBAL_SET_APPLICATION_CONFIG':\n        {\n          stateChanged = true;\n          // Anything in regards to configuration should be stored in the configuration slice\n          const configPath = ['configurations'].concat(action.payload.path);\n          state = state.setIn(configPath, _get__(\"fromJS\")(action.payload.config));\n          break;\n        }\n      case 'GLOBAL_DANGEROUSLY_SET_ARBITRARY_COMPONENT_VALUE':\n        {\n          stateChanged = true;\n          state = _get__(\"arbitraryComponentValueDangerouslySetReducer\")(state, action);\n          break;\n        }\n    }\n  }\n  if (stateChanged) {\n    // Notify the stateUpdates observable of the new state.\n    setTimeout(() => _get__(\"stateUpdates\").next(state));\n  }\n  return state;\n}\n\n/**\n * Registers a reducer function for the given component type and action.\n *\n * @param typeName The name of the component type where the reducer is defined (example: \"MyComponentType\")\n * @param actionName The name of the action (example: \"BUTTON_CLICK\")\n * @param reducer The reducer function\n */\nconst registerReducer = function (typeName, reducer, actionName) {\n  if (!_get__(\"reducerRegistry\")[typeName + '.' + actionName]) {\n    _get__(\"reducerRegistry\")[typeName + '.' + actionName] = reducer;\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_get__(\"reducerRegistry\"));\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"asapScheduler\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_2__.asapScheduler;\n    case \"Scheduler\":\n      return Scheduler;\n    case \"Subject\":\n      return rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject;\n    case \"observeOn\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.observeOn;\n    case \"uniqueQueueScheduler\":\n      return uniqueQueueScheduler;\n    case \"subscribeOn\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.subscribeOn;\n    case \"setConfigInState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__.setConfigInState;\n    case \"getConfigFromState\":\n      return _c3_ui_UiSdlConnected__WEBPACK_IMPORTED_MODULE_1__.getConfigFromState;\n    case \"parseComponentIdByActionType\":\n      return parseComponentIdByActionType;\n    case \"parseActionType\":\n      return parseActionType;\n    case \"stateUpdates$\":\n      return stateUpdates$;\n    case \"debounceTime\":\n      return rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.debounceTime;\n    case \"enhanceAction\":\n      return enhanceAction;\n    case \"getReducerKey\":\n      return getReducerKey;\n    case \"reducerRegistry\":\n      return reducerRegistry;\n    case \"fromJS\":\n      return immutable__WEBPACK_IMPORTED_MODULE_0__.fromJS;\n    case \"arbitraryComponentValueDangerouslySetReducer\":\n      return arbitraryComponentValueDangerouslySetReducer;\n    case \"stateUpdates\":\n      return stateUpdates;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof reducerRegistry;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(reducerRegistry, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(reducerRegistry)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/reducerRegistry.ts_c3ui_core\n");

/***/ })

}]);