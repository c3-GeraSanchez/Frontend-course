"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_types_pluggables_webWorker_ts_c3ui_core"],{

/***/ "./node_modules/@c3/ui/UiSdlTenantTagAwareWorker.ts_c3ui_core":
/*!**********************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlTenantTagAwareWorker.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (/* binding */ UiSdlTenantTagAwareWorker),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   postMessage: () => (/* reexport safe */ _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_0__.postMessage),\n/* harmony export */   start: () => (/* reexport safe */ _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_0__.start),\n/* harmony export */   terminate: () => (/* reexport safe */ _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_0__.terminate)\n/* harmony export */ });\n/* harmony import */ var _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @c3/ui/UiSdlWebWorker */ \"./node_modules/@c3/ui/UiSdlWebWorker.ts_c3ui_core\");\n/* harmony import */ var lodash_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/extend */ \"webpack/sharing/consume/default/lodash/extend/lodash/extend_c3ui_core\");\n/* harmony import */ var lodash_extend__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_extend__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isNumber */ \"webpack/sharing/consume/default/lodash/isNumber/lodash/isNumber_c3ui_core\");\n/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isNumber__WEBPACK_IMPORTED_MODULE_2__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\nclass UiSdlTenantTagAwareWorker extends _get__(\"UiSdlWebWorker\") {\n  switchDomain(tunnelConfiguration, forceReloadTypes, timeout) {\n    let message;\n    try {\n      message = {\n        action: 'switchDomain',\n        payload: {\n          domain: this.getDomainKey(tunnelConfiguration),\n          headers: this.buildRequestHeaders(tunnelConfiguration),\n          typesysUrl: this.buildBaseUrl('typesys'),\n          apiUrl: this.buildBaseUrl('api'),\n          forceReloadTypes: forceReloadTypes\n        }\n      };\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    return this.postMessage(message, timeout);\n  }\n  buildBaseUrl(category) {\n    switch (category) {\n      case 'typesys':\n        return '/typesys/8';\n      case 'api':\n        return '/api/8';\n      default:\n        return;\n    }\n  }\n  buildRequestHeaders(tunnelConfiguration) {\n    let headers = {\n      Accept: 'text/json'\n    };\n    if (tunnelConfiguration) {\n      headers = _get__(\"extend\")({}, headers, {\n        'X-Tunnel-To': tunnelConfiguration.to,\n        'X-Tunnel-Tenant': tunnelConfiguration.tenant,\n        'X-Tunnel-Tag': tunnelConfiguration.tag,\n        'X-Tunnel-Authorization': tunnelConfiguration.authorization\n      });\n      if (_get__(\"isNumber\")(tunnelConfiguration.timeoutSecs)) {\n        headers = _get__(\"extend\")({}, headers, {\n          'X-Tunnel-Timeout-Secs': tunnelConfiguration.timeoutSecs\n        });\n      }\n    }\n    return headers;\n  }\n  getDomainKey(tunnelConfiguration) {\n    if (!tunnelConfiguration) {\n      return 'main';\n    }\n    return [tunnelConfiguration.tenant, tunnelConfiguration.tag, tunnelConfiguration.to].join(';');\n  }\n}\n\n\n\nconst defaultValues = {};\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"UiSdlWebWorker\":\n      return _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    case \"extend\":\n      return (lodash_extend__WEBPACK_IMPORTED_MODULE_1___default());\n    case \"isNumber\":\n      return (lodash_isNumber__WEBPACK_IMPORTED_MODULE_2___default());\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof UiSdlTenantTagAwareWorker;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(UiSdlTenantTagAwareWorker, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(UiSdlTenantTagAwareWorker)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlTenantTagAwareWorker.ts_c3ui_core\n");

/***/ }),

/***/ "./node_modules/@c3/ui/UiSdlTypeWorker.ts_c3ui_core":
/*!************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlTypeWorker.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (/* binding */ UiSdlTypeWorker),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   postMessage: () => (/* reexport safe */ _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_2__.postMessage),\n/* harmony export */   start: () => (/* reexport safe */ _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_2__.start),\n/* harmony export */   switchDomain: () => (/* reexport safe */ _c3_ui_UiSdlTenantTagAwareWorker__WEBPACK_IMPORTED_MODULE_0__.switchDomain),\n/* harmony export */   terminate: () => (/* reexport safe */ _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_2__.terminate)\n/* harmony export */ });\n/* harmony import */ var _c3_ui_UiSdlTenantTagAwareWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @c3/ui/UiSdlTenantTagAwareWorker */ \"./node_modules/@c3/ui/UiSdlTenantTagAwareWorker.ts_c3ui_core\");\n/* harmony import */ var _c3_ui_worker_typeworker_worker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/worker/typeworker.worker.js */ \"webpack/sharing/consume/default/@c3/ui/worker/typeworker.worker.js/@c3/ui/worker/typeworker.worker.js_c3ui_core\");\n/* harmony import */ var _c3_ui_worker_typeworker_worker_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_worker_typeworker_worker_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlWebWorker */ \"./node_modules/@c3/ui/UiSdlWebWorker.ts_c3ui_core\");\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n // eslint-disable-line import/extensions\n\nclass UiSdlTypeWorker extends _get__(\"UiSdlTenantTagAwareWorker\") {\n  constructor(workerId) {\n    super(workerId, _get__(\"TypeWorker\"));\n  }\n  loadTypes(timeout) {\n    return this.postMessage({\n      action: 'loadTypes'\n    }, timeout);\n  }\n  getTypes(types, timeout) {\n    return this.postMessage({\n      action: 'getTypes',\n      payload: {\n        types: types\n      }\n    }, timeout);\n  }\n  getTypesThatMixin(mixinTypeName, deep, typeNameOnly, timeout) {\n    return this.postMessage({\n      action: 'getTypesThatMixin',\n      payload: {\n        mixinTypeName: mixinTypeName,\n        deep: deep,\n        typeNameOnly: typeNameOnly\n      }\n    }, timeout);\n  }\n  getAnnotations(appliesTo, timeout) {\n    return this.postMessage({\n      action: 'getAnnotations',\n      payload: {\n        appliesTo: appliesTo\n      }\n    }, timeout);\n  }\n  getAnnotationType(typeName, fields, timeout) {\n    return this.postMessage({\n      action: 'getAnnotationType',\n      payload: {\n        typeName: typeName,\n        fields: fields\n      }\n    }, timeout);\n  }\n  getAnnotationTypeDefaultFields(typeNames, timeout) {\n    return this.postMessage({\n      action: 'getAnnotationTypeDefaultFields',\n      payload: {\n        typeNames: typeNames\n      }\n    }, timeout);\n  }\n  getTransformTypes(filterType, filterBy, timeout) {\n    return this.postMessage({\n      action: 'getTransformTypes',\n      payload: {\n        filterType: filterType,\n        filterBy: filterBy\n      }\n    }, timeout);\n  }\n  defineTypes(types, updateLocalMetadata, timeout) {\n    return this.postMessage({\n      action: 'defineTypes',\n      payload: {\n        types: types,\n        updateLocalMetadata: updateLocalMetadata\n      }\n    }, timeout);\n  }\n  removeTypes(typeNames, timeout) {\n    return this.postMessage({\n      action: 'removeTypes',\n      payload: {\n        typeNames: typeNames\n      }\n    }, timeout);\n  }\n  rollbackTypes(types, timeout) {\n    return this.postMessage({\n      action: 'rollbackTypes',\n      payload: {\n        types: types\n      }\n    }, timeout);\n  }\n  getTypeDetail(typeName, timeout) {\n    return this.postMessage({\n      action: 'getTypeDetail',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getTypeWorkingCopy(typeName, timeout) {\n    return this.postMessage({\n      action: 'getTypeWorkingCopy',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getFieldsAndMethods(typeName, timeout) {\n    return this.postMessage({\n      action: 'getFieldsAndMethods',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getFieldNamesWithAnnotation(typeName, annotation, publicOnly, timeout) {\n    return this.postMessage({\n      action: 'getFieldNamesWithAnnotation',\n      payload: {\n        typeName: typeName,\n        annotation: annotation,\n        publicOnly: publicOnly\n      }\n    }, timeout);\n  }\n  getAnnotationByFieldNameAndTypeName(annotationName, mixinTypeName, timeout) {\n    return this.postMessage({\n      action: 'getAnnotationByFieldNameAndTypeName',\n      payload: {\n        annotationName: annotationName,\n        mixinTypeName: mixinTypeName\n      }\n    }, timeout);\n  }\n  getTypesWithAnnotationValue(typeNames, annotation, timeout) {\n    return this.postMessage({\n      action: 'getTypesWithAnnotationValue',\n      payload: {\n        typeNames: typeNames,\n        annotation: annotation\n      }\n    }, timeout);\n  }\n  getLabelsAndValuesOfEnumTypes(timeout) {\n    return this.postMessage({\n      action: 'getLabelsAndValuesOfEnumTypes'\n    }, timeout);\n  }\n  getLabelsAndValuesOfEnumType(typeName, timeout) {\n    return this.postMessage({\n      action: 'getLabelsAndValuesOfEnumType',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getExprParseDependingFieldPaths(fieldInfo, timeout) {\n    return this.postMessage({\n      action: 'getExprParseDependingFieldPaths',\n      payload: {\n        fieldInfo: fieldInfo\n      }\n    }, timeout);\n  }\n  getFieldVisibility(filterString, bindings, timeout) {\n    return this.postMessage({\n      action: 'getFieldVisibility',\n      payload: {\n        filterString,\n        bindings\n      }\n    }, timeout);\n  }\n  getMetricList(typeName, timeout) {\n    return this.postMessage({\n      action: 'getMetricList',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getTypesWithAnnotation(annotationName, annotationField, declaredOnly, timeout) {\n    return this.postMessage({\n      action: 'getTypesWithAnnotation',\n      payload: {\n        annotationName: annotationName,\n        annotationField: annotationField,\n        declaredOnly: declaredOnly\n      }\n    }, timeout);\n  }\n  typeIsA(typeA, typeB, timeout) {\n    return this.postMessage({\n      action: 'typeIsA',\n      payload: {\n        typeA: typeA,\n        typeB: typeB\n      }\n    }, timeout);\n  }\n  typeExists(typeName, timeout) {\n    return this.postMessage({\n      action: 'typeExists',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getType(typeName, timeout) {\n    return this.postMessage({\n      action: 'getType',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  setField(typeName, field, timeout) {\n    return this.postMessage({\n      action: 'setField',\n      payload: {\n        typeName: typeName,\n        field: field\n      }\n    }, timeout);\n  }\n  getValueTypeNameOfFieldType(typeName, fieldName, timeout) {\n    return this.postMessage({\n      action: 'getValueTypeNameOfFieldType',\n      payload: {\n        typeName: typeName,\n        fieldName: fieldName\n      }\n    }, timeout);\n  }\n  getValueTypeOfFieldType(typeName, fieldName, timeout) {\n    return this.postMessage({\n      action: 'getValueTypeOfFieldType',\n      payload: {\n        typeName: typeName,\n        fieldName: fieldName\n      }\n    }, timeout);\n  }\n  getParametricVariableInfo(typeName, timeout) {\n    return this.postMessage({\n      action: 'getParametricVariableInfo',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  isCalcField(typeName, fieldName, timeout) {\n    return this.postMessage({\n      action: 'isCalcField',\n      payload: {\n        typeName: typeName,\n        fieldName: fieldName\n      }\n    }, timeout);\n  }\n  isAdvancedTransform(typeName, timeout) {\n    return this.postMessage({\n      action: 'isAdvancedTransform',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  createCanonicalType(canonicalTypeName, sourceTypeName, timeout) {\n    return this.postMessage({\n      action: 'createCanonicalType',\n      payload: {\n        canonicalTypeName: canonicalTypeName,\n        sourceTypeName: sourceTypeName\n      }\n    }, timeout);\n  }\n  createTransformType(sourceTypeName, targetTypeName, transformTypeName, skipSourceFields, timeout) {\n    return this.postMessage({\n      action: 'createTransformType',\n      payload: {\n        sourceTypeName: sourceTypeName,\n        targetTypeName: targetTypeName,\n        transformTypeName: transformTypeName,\n        skipSourceFields: skipSourceFields\n      }\n    }, timeout);\n  }\n  getTypesForPackage(timeout) {\n    return this.postMessage({\n      action: 'getTypesForPackage'\n    }, timeout);\n  }\n  getFieldNamesWithFilter(typeName, filterSpec, timeout) {\n    return this.postMessage({\n      action: 'getFieldNamesWithFilter',\n      payload: {\n        typeName,\n        filterSpec\n      }\n    }, timeout);\n  }\n  isComponentReferenceWithBinding(valueType, bindingType, skipBindingCheck, timeout) {\n    return this.postMessage({\n      action: 'isComponentReferenceWithBinding',\n      payload: {\n        valueType,\n        bindingType,\n        skipBindingCheck\n      }\n    }, timeout);\n  }\n  isFieldReferenceTypeOrArrayOfReferenceType(typeName, fieldName, timeout) {\n    return this.postMessage({\n      action: 'isFieldReferenceTypeOrArrayOfReferenceType',\n      payload: {\n        typeName,\n        fieldName\n      }\n    }, timeout);\n  }\n  getPartiallyAppliedActions(typeName, fieldConfig, componentConfig, timeout) {\n    return this.postMessage({\n      action: 'getPartiallyAppliedActions',\n      payload: {\n        typeName: typeName,\n        fieldConfig: fieldConfig,\n        componentConfig: componentConfig\n      }\n    }, timeout);\n  }\n  isPageMetadataEqual(pageId, configurableUiMetadata, originalUiMetadata, timeout) {\n    return this.postMessage({\n      action: 'isPageMetadataEqual',\n      payload: {\n        pageId,\n        configurableUiMetadata,\n        originalUiMetadata\n      }\n    }, timeout);\n  }\n  callTransformFunction(typeName, transformFunction, value, config, timeout) {\n    return this.postMessage({\n      action: 'callTransformFunction',\n      payload: {\n        typeName,\n        transformFunction,\n        value,\n        config\n      }\n    }, timeout);\n  }\n  getComponentDataSpecTypeName(typeName, timeout) {\n    return this.postMessage({\n      action: 'getComponentDataSpecTypeName',\n      payload: {\n        typeName: typeName\n      }\n    }, timeout);\n  }\n  getComponentsForPage(pageId, pageVariable, timeout) {\n    return this.postMessage({\n      action: 'getComponentsForPage',\n      payload: {\n        pageId,\n        pageVariable\n      }\n    }, timeout);\n  }\n  getMetricBasedComponentsForPage(pageId, pageVariable, timeout) {\n    return this.postMessage({\n      action: 'getMetricBasedComponentsForPage',\n      payload: {\n        pageId,\n        pageVariable\n      }\n    }, timeout);\n  }\n}\n\n\n\n\nconst defaultValues = {};\n\n\n\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"UiSdlTenantTagAwareWorker\":\n      return _c3_ui_UiSdlTenantTagAwareWorker__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    case \"TypeWorker\":\n      return (_c3_ui_worker_typeworker_worker_js__WEBPACK_IMPORTED_MODULE_1___default());\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof UiSdlTypeWorker;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(UiSdlTypeWorker, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(UiSdlTypeWorker)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlTypeWorker.ts_c3ui_core\n");

/***/ }),

/***/ "./node_modules/@c3/ui/UiSdlWebWorker.ts_c3ui_core":
/*!***********************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlWebWorker.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (/* binding */ UiSdlWebWorker),\n/* harmony export */   defaultValues: () => (/* binding */ defaultValues),\n/* harmony export */   postMessageToWorker: () => (/* binding */ postMessageToWorker)\n/* harmony export */ });\n/* harmony import */ var _c3_ui_UiSdlWebWorkerStatus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @c3/ui/UiSdlWebWorkerStatus */ \"./node_modules/@c3/ui/UiSdlWebWorkerStatus.ts_c3ui_core\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js_c3ui_core\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _c3_ui_UiSdlSite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlSite */ \"./node_modules/@c3/ui/UiSdlSite.ts_c3ui_core\");\n/* harmony import */ var _c3_ui_worker_webWorkerBase_worker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @c3/ui/worker/webWorkerBase.worker.js */ \"webpack/sharing/consume/default/@c3/ui/worker/webWorkerBase.worker.js/@c3/ui/worker/webWorkerBase.worker.js_c3ui_core\");\n/* harmony import */ var _c3_ui_worker_webWorkerBase_worker_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_worker_webWorkerBase_worker_js__WEBPACK_IMPORTED_MODULE_3__);\n/*\n * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n/**\n * TODO: MIG8-1243 Move worker files to a dedicated namespace during bundling\n * Change the import here to the new module path\n */\n // eslint-disable-line import/extensions\n\nfunction postMessageToWorker(message, timeout) {\n  const worker = _get__(\"find\")(_get__(\"webWorkers\"), function (worker) {\n    return _get__(\"isFunction\")(worker[message.action]);\n  });\n  if (!worker) {\n    throw 'No worker found with given action';\n  }\n  return worker.postMessage(message, timeout);\n}\nclass UiSdlWebWorker {\n  constructor(workerId, workerModuleRef) {\n    this.WorkerModuleRef = workerModuleRef || _get__(\"WebWorker\");\n    this.id = workerId;\n  }\n  start() {\n    if (this.status === _get__(\"UiSdlWebWorkerStatus\").RUNNING) {\n      throw 'There is a running thread';\n    }\n    this.worker = this.WorkerModuleRef();\n    this.status = _get__(\"UiSdlWebWorkerStatus\").RUNNING;\n    this.messageId = 0;\n    this.callbackMapping = {};\n    this.worker.onmessage = event => {\n      if (event.data.messageId) {\n        const callbacks = this.callbackMapping[event.data.messageId];\n        if (callbacks) {\n          const resolve = callbacks[0];\n          const reject = callbacks[1];\n          if (event && event.data && event.data.failure) {\n            reject(event.data.content);\n          } else {\n            resolve(event.data.content);\n          }\n          delete this.callbackMapping[event.data.messageId];\n        }\n      } else if (event.data.requestId) {\n        // The web worker thread had made a request and the response needs to be forwarded to the worker\n        return new Promise(() => {\n          _get__(\"postMessageToWorker\")({\n            action: event.data.action,\n            payload: event.data.payload\n          }, event.data.timeout).then(message => {\n            this.worker.postMessage({\n              requestId: event.data.requestId,\n              content: message\n            });\n          });\n        }).catch(isError => {\n          this.postMessage({\n            requestId: event.data.requestId,\n            failure: isError\n          });\n        });\n      }\n    };\n    return this;\n  }\n  terminate() {\n    let workerId;\n    if (this.status === _get__(\"UiSdlWebWorkerStatus\").RUNNING && this.worker) {\n      this.worker.terminate();\n      workerId = this.id;\n      this.worker = null;\n      if (_get__(\"webWorkers\") && _get__(\"webWorkers\")[workerId]) {\n        delete _get__(\"webWorkers\")[workerId];\n      }\n      this.status = _get__(\"UiSdlWebWorkerStatus\").TERMINATED;\n      return this;\n    }\n  }\n  async postMessage(message, timeout) {\n    if (this.status !== _get__(\"UiSdlWebWorkerStatus\").RUNNING || !this.worker) {\n      throw 'There is no running thread';\n    }\n    const messageId = this.messageId.toString();\n    this.messageId++;\n    return new Promise((resolve, reject) => {\n      this.worker.postMessage({\n        messageId: messageId,\n        content: message\n      });\n      this.callbackMapping[messageId] = [resolve, reject];\n      if (timeout) {\n        setTimeout(() => {\n          // If the `resolve` callback has not yet been called, it timed out\n          if (this.callbackMapping[messageId]) {\n            reject(JSON.stringify(message) + ' timed out');\n            delete this.callbackMapping[messageId];\n          }\n        }, timeout);\n      }\n    });\n  }\n}\nconst defaultValues = {};\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"find\":\n      return lodash__WEBPACK_IMPORTED_MODULE_1__.find;\n    case \"webWorkers\":\n      return _c3_ui_UiSdlSite__WEBPACK_IMPORTED_MODULE_2__.webWorkers;\n    case \"isFunction\":\n      return lodash__WEBPACK_IMPORTED_MODULE_1__.isFunction;\n    case \"WebWorker\":\n      return (_c3_ui_worker_webWorkerBase_worker_js__WEBPACK_IMPORTED_MODULE_3___default());\n    case \"UiSdlWebWorkerStatus\":\n      return _c3_ui_UiSdlWebWorkerStatus__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    case \"postMessageToWorker\":\n      return postMessageToWorker;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof UiSdlWebWorker;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(UiSdlWebWorker, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(UiSdlWebWorker)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlWebWorker.ts_c3ui_core\n");

/***/ }),

/***/ "./node_modules/@c3/ui/types/pluggables/webWorker.ts_c3ui_core":
/*!***********************************************************!*\
  !*** ./node_modules/@c3/ui/types/pluggables/webWorker.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _c3_ui_UiSdlTenantTagAwareWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @c3/ui/UiSdlTenantTagAwareWorker */ \"./node_modules/@c3/ui/UiSdlTenantTagAwareWorker.ts_c3ui_core\");\n/* harmony import */ var _c3_ui_UiSdlTypeWorker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/ui/UiSdlTypeWorker */ \"./node_modules/@c3/ui/UiSdlTypeWorker.ts_c3ui_core\");\n/* harmony import */ var _c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/ui/UiSdlWebWorker */ \"./node_modules/@c3/ui/UiSdlWebWorker.ts_c3ui_core\");\n\n\n\nconst pluggableTypes = {\n  \"UiSdlTenantTagAwareWorker\": _get__(\"UiSdlTenantTagAwareWorker\"),\n  \"UiSdlTypeWorker\": _get__(\"UiSdlTypeWorker\"),\n  \"UiSdlWebWorker\": _get__(\"UiSdlWebWorker\")\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_get__(\"pluggableTypes\"));\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"UiSdlTenantTagAwareWorker\":\n      return _filterWildcardImport__(_c3_ui_UiSdlTenantTagAwareWorker__WEBPACK_IMPORTED_MODULE_0__);\n    case \"UiSdlTypeWorker\":\n      return _filterWildcardImport__(_c3_ui_UiSdlTypeWorker__WEBPACK_IMPORTED_MODULE_1__);\n    case \"UiSdlWebWorker\":\n      return _filterWildcardImport__(_c3_ui_UiSdlWebWorker__WEBPACK_IMPORTED_MODULE_2__);\n    case \"pluggableTypes\":\n      return pluggableTypes;\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof pluggableTypes;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(pluggableTypes, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(pluggableTypes)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\nfunction _filterWildcardImport__(wildcardImport = {}) {\n  let validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/types/pluggables/webWorker.ts_c3ui_core\n");

/***/ })

}]);