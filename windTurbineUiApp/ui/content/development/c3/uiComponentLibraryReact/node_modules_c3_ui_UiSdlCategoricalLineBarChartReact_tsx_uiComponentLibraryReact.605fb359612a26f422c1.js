/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjs_webpack_c3_client_node"] = self["webpackChunkjs_webpack_c3_client_node"] || []).push([["node_modules_c3_ui_UiSdlCategoricalLineBarChartReact_tsx_uiComponentLibraryReact"],{

/***/ "./node_modules/@c3/ui/UiSdlCategoricalLineBarChartReact.tsx_uiComponentLibraryReact":
/*!*******************************************************************!*\
  !*** ./node_modules/@c3/ui/UiSdlCategoricalLineBarChartReact.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __GetDependency__: () => (/* binding */ _get__),\n/* harmony export */   __ResetDependency__: () => (/* binding */ _reset__),\n/* harmony export */   __RewireAPI__: () => (/* binding */ _RewireAPI__),\n/* harmony export */   __Rewire__: () => (/* binding */ _set__),\n/* harmony export */   __get__: () => (/* binding */ _get__),\n/* harmony export */   __set__: () => (/* binding */ _set__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAxisFields: () => (/* binding */ getAxisFields),\n/* harmony export */   getGradients: () => (/* binding */ getGradients),\n/* harmony export */   getMarkLines: () => (/* binding */ getMarkLines),\n/* harmony export */   getNewSeries: () => (/* binding */ getNewSeries),\n/* harmony export */   updateProps: () => (/* binding */ updateProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react_uiComponentLibraryReact\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _c3_sdl_react_hooks_useTranslate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @c3/sdl-react/hooks/useTranslate */ \"./node_modules/@c3/sdl-react/hooks/useTranslate.js_uiComponentLibraryReact\");\n/* harmony import */ var _c3_sdl_react_reactComponents_SDLLineBarChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @c3/sdl-react/reactComponents/SDLLineBarChart */ \"./node_modules/@c3/sdl-react/reactComponents/SDLLineBarChart.jsx_uiComponentLibraryReact\");\n/* harmony import */ var _c3_ui_UiSdlTransformEvalMetricsResultToUiSdlChartData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @c3/ui/UiSdlTransformEvalMetricsResultToUiSdlChartData */ \"webpack/container/remote/@c3/ui/UiSdlTransformEvalMetricsResultToUiSdlChartData_uiComponentLibraryReact\");\n/* harmony import */ var _c3_ui_UiSdlTransformEvalMetricsResultToUiSdlChartData__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_c3_ui_UiSdlTransformEvalMetricsResultToUiSdlChartData__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var gradstop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gradstop */ \"./node_modules/gradstop/index.js_uiComponentLibraryReact\");\n/* harmony import */ var gradstop__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(gradstop__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _c3_sdl_react_helpers_EchartsOptionHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @c3/sdl-react/helpers/EchartsOptionHelper */ \"./node_modules/@c3/sdl-react/helpers/EchartsOptionHelper.js_uiComponentLibraryReact\");\n/* harmony import */ var _c3_css_library_components_chart_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @c3/css-library/components/_chart.scss */ \"./node_modules/@c3/css-library/components/_chart.scss_uiComponentLibraryReact\");\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/*\n * Copyright 2009-2024 C3 AI (www.c3.ai). All Rights Reserved.\n * This material, including without limitation any software, is the confidential trade secret and proprietary\n * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is\n * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.\n * This material may be covered by one or more patents or pending patent applications.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Method to get markLines from markLinesDataSpec in case markLinesDataSpec and markLinesData is provided,\n * we need to match the markLinesConfig to the markLinesData.\n * @param markLinesDataSpec\n * @param markLinesData\n * @returns array of markLinesConfig coming from markLinesDataSpec and markLines.\n */\nconst getMarkLines = (markLinesDataSpec, markLinesData) => {\n  const combinedMarkLines = [];\n  if (markLinesDataSpec !== null && markLinesDataSpec !== void 0 && markLinesDataSpec.markLinesConfig) {\n    var _markLinesDataSpec$ma;\n    (_markLinesDataSpec$ma = markLinesDataSpec.markLinesConfig) === null || _markLinesDataSpec$ma === void 0 || _markLinesDataSpec$ma.forEach(markLineConfig => {\n      var _markLinesData$objs;\n      const {\n        entityId,\n        fieldName,\n        markLineDataPoint\n      } = markLineConfig;\n      markLineDataPoint && combinedMarkLines.push({\n        ...markLineConfig,\n        markLineDataPoint\n      });\n      markLinesData === null || markLinesData === void 0 || (_markLinesData$objs = markLinesData.objs) === null || _markLinesData$objs === void 0 || _markLinesData$objs.forEach(markData => {\n        if (fieldName && entityId && (markData === null || markData === void 0 ? void 0 : markData.id) === entityId) {\n          combinedMarkLines.push({\n            ...markLineConfig,\n            markLineDataPoint: markData[fieldName]\n          });\n        }\n      });\n    });\n  }\n  return combinedMarkLines;\n};\nconst getAxisFields = dataSpec => {\n  var _dataSpec$xAxisField;\n  const xAxisFieldName = dataSpec === null || dataSpec === void 0 || (_dataSpec$xAxisField = dataSpec.xAxisField) === null || _dataSpec$xAxisField === void 0 || (_dataSpec$xAxisField = _dataSpec$xAxisField.fieldName) === null || _dataSpec$xAxisField === void 0 ? void 0 : _dataSpec$xAxisField.trim();\n  const yAxisFieldNames = dataSpec === null || dataSpec === void 0 ? void 0 : dataSpec.yAxisFields.map(f => {\n    var _f$fieldName;\n    return (_f$fieldName = f.fieldName) === null || _f$fieldName === void 0 ? void 0 : _f$fieldName.trim();\n  });\n  return {\n    xAxisFieldName,\n    yAxisFieldNames\n  };\n};\n\n// TODO: PLAT-56983 - Refactor this to use the same gradients as the other charts\nconst getGradients = () => {\n  return {\n    gradient1: ['#49BFA9', '#ED6921', '#DB1C3C'],\n    'gradient1-inv': ['#DB1C3C', '#ED6921', '#49BFA9'],\n    gradient2: ['#ED6921', '#8D4BE3'],\n    'gradient2-inv': ['#8D4BE3', '#ED6921'],\n    gradient3: ['#8A90AB', '#DB1C3C'],\n    'gradient3-inv': ['#DB1C3C', '#8A90AB']\n  };\n};\nconst getNewSeries = (series, yIndexOffset, yAxisFields, removeExtraSeries, newYAxisFields, removeLegend) => {\n  const gradients = _get__(\"getGradients\")();\n  return series.flatMap((s, ind) => {\n    var _yAxisFields$ind;\n    ind -= yIndexOffset;\n    if (ind < 0) {\n      return [s];\n    }\n\n    // Don't bother with fields outside of yAxisFields range -- fields added through orderString. Let markLine through to be filtered out later\n    if (!yAxisFields[ind] && s.id !== _get__(\"MARK_LINE_ID\") && removeExtraSeries) {\n      return {\n        ...s,\n        filterOut: true\n      };\n    }\n\n    // If a series has UiSdlGradientColorSetting, we break the series into multiple series.\n    if ((_yAxisFields$ind = yAxisFields[ind]) !== null && _yAxisFields$ind !== void 0 && _yAxisFields$ind.colorConfigurationStrategy) {\n      removeLegend = true;\n      const strategy = yAxisFields[ind].colorConfigurationStrategy;\n      const weightedGradient = !!strategy.weightedMethodConfig;\n      const gradientType = strategy.gradient || 'gradient1';\n\n      // Remove null data\n      const data = s.data.map(d => d[1]).filter(d => d != null && typeof d === 'number');\n      if (data.length === 0) {\n        newYAxisFields.push(yAxisFields[ind]);\n        return [s];\n      }\n\n      // Threshold for each color\n      const thresholds = [];\n      let numberOfColors;\n      if (weightedGradient) {\n        numberOfColors = strategy.numberOfColors || 100;\n        const minVal = strategy.weightedMethodConfig.minimum == null ? Math.min(...data) : strategy.weightedMethodConfig.minimum;\n        const maxVal = strategy.weightedMethodConfig.maximum == null ? Math.max(...data) : strategy.weightedMethodConfig.maximum;\n        const stepSize = (maxVal - minVal) / numberOfColors;\n        for (let i = 0; i < numberOfColors; i++) {\n          thresholds.push(minVal + i * stepSize);\n        }\n      } else {\n        const uniqueSortedData = [...new Set(data)].sort((a, b) => a - b);\n        numberOfColors = strategy.numberOfColors || uniqueSortedData.length;\n        const stepSize = Math.max(1, uniqueSortedData.length / numberOfColors);\n        for (let i = 0; i < uniqueSortedData.length; i += stepSize) {\n          thresholds.push(uniqueSortedData[Math.floor(i)]);\n        }\n      }\n      let colorGradient;\n      if (numberOfColors < 3) {\n        colorGradient = gradients[gradientType].slice(0, numberOfColors);\n      } else {\n        colorGradient = _get__(\"gradstop\")({\n          stops: numberOfColors,\n          inputFormat: 'hex',\n          colorArray: gradients[gradientType]\n        });\n      }\n      const sArray = [];\n\n      // Break one series into multiple\n      for (let i = 0; i < thresholds.length; i++) {\n        let hasValue = false;\n        const fieldSuffix = i > 0 ? i : '';\n        const newData = s.data.map(d => {\n          if (d[1] >= thresholds[i] && (i === thresholds.length - 1 || d[1] < thresholds[i + 1])) {\n            hasValue = true;\n            return [d[0], d[1]];\n          } else {\n            return [d[0], null];\n          }\n        });\n        if (hasValue) {\n          sArray.push({\n            ...s,\n            data: newData,\n            stack: 'total'\n          });\n          newYAxisFields.push({\n            ...yAxisFields[ind],\n            color: colorGradient[i],\n            fieldName: yAxisFields[ind].fieldName + fieldSuffix\n          });\n        }\n      }\n      return sArray;\n    } else {\n      if (yAxisFields[ind]) {\n        newYAxisFields.push(yAxisFields[ind]);\n      }\n      return [s];\n    }\n  }).map((s, ind) => {\n    return {\n      ...s,\n      id: (s === null || s === void 0 ? void 0 : s.id) === _get__(\"MARK_LINE_ID\") ? _get__(\"MARK_LINE_ID\") : ind.toString()\n    };\n  }).filter(s => !s.filterOut);\n};\nconst updateProps = (props, newSeries, newYAxisFields, removeLegend) => {\n  props = {\n    ...props,\n    data: {\n      ...props.data,\n      series: newSeries\n    },\n    dataSpec: {\n      ...props.dataSpec,\n      yAxisFields: newYAxisFields\n    }\n  };\n\n  // Legend isn't supported when we use gradient coloring\n  if (removeLegend) {\n    delete props.legend;\n  }\n  return props;\n};\nconst UiSdlCategoricalLineBarChart = props => {\n  var _props$data, _props$dataSpec, _fields, _fields2, _fields3;\n  const translate = _get__(\"useTranslate\")(props);\n  let removeLegend = false;\n  let series = (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.series;\n  let fields = (_props$dataSpec = props.dataSpec) === null || _props$dataSpec === void 0 || (_props$dataSpec = _props$dataSpec.xAxisField) === null || _props$dataSpec === void 0 || (_props$dataSpec = _props$dataSpec.redirectLink) === null || _props$dataSpec === void 0 || (_props$dataSpec = _props$dataSpec.pageVariableFilterField) === null || _props$dataSpec === void 0 ? void 0 : _props$dataSpec.split(',');\n  fields = (_fields = fields) === null || _fields === void 0 ? void 0 : _fields.map(f => f.trim());\n  const {\n    xAxisFieldName,\n    yAxisFieldNames\n  } = _get__(\"getAxisFields\")(props.dataSpec);\n\n  // Filter out fields that are beeing used by the yAxisFields\n  fields = (_fields2 = fields) === null || _fields2 === void 0 ? void 0 : _fields2.filter(f => !yAxisFieldNames.includes(f));\n  let yIndexOffset = 0;\n\n  /**\n   * Sometimes the url will require fields not specified as fieldName in the data spec.\n   * If this is the case, the partially applied action will have resulted in more series\n   * than we need to correctly plot the chart. We use this block to assign url mappings\n   * and remove any unnecessary series before plotting a SDLChart.\n   */\n  if ((_fields3 = fields) !== null && _fields3 !== void 0 && _fields3.length) {\n    if (fields.includes(xAxisFieldName)) {\n      yIndexOffset = fields.length - 1;\n    } else {\n      yIndexOffset = fields.length;\n    }\n  }\n  if (series) {\n    const yAxisFields = props.dataSpec.yAxisFields;\n    const newYAxisFields = [];\n    let newSeries = _get__(\"getNewSeries\")(series, yIndexOffset, yAxisFields, props.removeExtraSeries, newYAxisFields, removeLegend);\n    props = {\n      ...props,\n      data: {\n        ...props.data,\n        series: newSeries\n      },\n      dataSpec: {\n        ...props.dataSpec,\n        yAxisFields: newYAxisFields\n      }\n    };\n\n    // Legend isn't supported when we use gradient coloring\n    if (removeLegend) {\n      delete props.legend;\n    }\n  }\n  const markLines = _get__(\"getMarkLines\")(props.markLinesDataSpec, props.markLinesData);\n  return /*#__PURE__*/_get__(\"React\").createElement(_get__(\"SDLLineBarChart\"), _extends({}, props, {\n    generateSeriesId: _get__(\"generateSeriesId\"),\n    translate: translate,\n    markLines: markLines\n  }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_get__(\"UiSdlCategoricalLineBarChart\"));\n\nfunction _getGlobalObject() {\n  try {\n    if (!!__webpack_require__.g) {\n      return __webpack_require__.g;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n;\nvar _RewireModuleId__ = null;\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    let globalVariable = _getGlobalObject();\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n  return _RewireModuleId__;\n}\nfunction _getRewireRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;\n}\nfunction _getRewireExportsRegistry__() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n  }\n  return theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__;\n}\nconst _sync_internal_state_with_exports__ = false;\nconst _exports_to_reset__ = new Map();\nfunction _record_export_to_reset__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  if (!_exports_to_reset__.has(variableName)) {\n    _exports_to_reset__.set(variableName, value);\n  }\n}\nfunction _restore_exports__() {\n  const entries = _exports_to_reset__.entries();\n  for (const [variableName, value] of entries) {\n    exports[variableName] = value;\n  }\n  _exports_to_reset__.clear();\n}\nfunction _maybe_update_export__(variableName, value) {\n  if (!_sync_internal_state_with_exports__) {\n    return;\n  }\n  if (!Object.prototype.hasOwnProperty.call(exports, variableName)) {\n    return;\n  }\n  _record_export_to_reset__(variableName, exports[variableName]);\n  exports[variableName] = value;\n}\nfunction _getRewiredData__() {\n  let moduleId = _getRewireModuleId__();\n  let registry = _getRewireRegistry__();\n  let rewireData = registry[moduleId];\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n  let exportsRegistry = _getRewireExportsRegistry__();\n  if (!exportsRegistry[moduleId]) {\n    exportsRegistry[moduleId] = _restore_exports__;\n  }\n  return rewireData;\n}\n(function registerResetAll() {\n  let theGlobalVariable = _getGlobalObject();\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n      const exportsRegistry = _getRewireExportsRegistry__();\n      for (const restoreFunc of Object.values(exportsRegistry)) {\n        restoreFunc();\n      }\n      theGlobalVariable.__$$GLOBAL_REWIRE_EXPORTS_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nlet _RewireAPI__ = {};\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\nfunction _get__(variableName) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getGradients\":\n      return getGradients;\n    case \"MARK_LINE_ID\":\n      return _c3_sdl_react_helpers_EchartsOptionHelper__WEBPACK_IMPORTED_MODULE_5__.MARK_LINE_ID;\n    case \"gradstop\":\n      return (gradstop__WEBPACK_IMPORTED_MODULE_4___default());\n    case \"useTranslate\":\n      return _c3_sdl_react_hooks_useTranslate__WEBPACK_IMPORTED_MODULE_1__.useTranslate;\n    case \"getAxisFields\":\n      return getAxisFields;\n    case \"getNewSeries\":\n      return getNewSeries;\n    case \"getMarkLines\":\n      return getMarkLines;\n    case \"generateSeriesId\":\n      return _c3_ui_UiSdlTransformEvalMetricsResultToUiSdlChartData__WEBPACK_IMPORTED_MODULE_3__.generateSeriesId;\n    case \"UiSdlCategoricalLineBarChart\":\n      return UiSdlCategoricalLineBarChart;\n    case \"React\":\n      return _filterWildcardImport__(react__WEBPACK_IMPORTED_MODULE_0__);\n    case \"SDLLineBarChart\":\n      return _c3_sdl_react_reactComponents_SDLLineBarChart__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n  }\n  return undefined;\n}\nfunction _assign__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    _maybe_update_export__(variableName, value);\n    return rewireData[variableName] = value;\n  }\n}\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n  return undefined;\n}\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n  _assign__(variableName, newValue);\n  return prefix ? newValue : oldValue;\n}\nfunction _set__(variableName, value) {\n  let rewireData = _getRewiredData__();\n  if (typeof variableName === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n    return function () {\n      Object.keys(variableName).forEach(function (name) {\n        _reset__(variableName);\n      });\n    };\n  } else {\n    _maybe_update_export__(variableName, value);\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\nfunction _reset__(variableName) {\n  let rewireData = _getRewiredData__();\n  delete rewireData[variableName];\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n  if (_exports_to_reset__.has(variableName)) {\n    exports[variableName] = _exports_to_reset__.get(variableName);\n    _exports_to_reset__.delete(variableName);\n  }\n}\nfunction _with__(object) {\n  let rewireData = _getRewiredData__();\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    let result = callback();\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n    return result;\n  };\n}\nlet _typeOfOriginalExport = typeof UiSdlCategoricalLineBarChart;\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(UiSdlCategoricalLineBarChart, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(UiSdlCategoricalLineBarChart)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\nfunction _filterWildcardImport__(wildcardImport = {}) {\n  let validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@c3/ui/UiSdlCategoricalLineBarChartReact.tsx_uiComponentLibraryReact\n");

/***/ }),

/***/ "./node_modules/gradstop/dist/index.js_uiComponentLibraryReact":
/*!*********************************************!*\
  !*** ./node_modules/gradstop/dist/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = __webpack_require__(/*! ./utils */ "./node_modules/gradstop/dist/utils.js_uiComponentLibraryReact");

var defaultOptions = {
  // input color options: hex, rgb or hsl
  inputFormat: 'hex',
  // number of color stops (cannot be less than colorArray.length)
  stops: 5,
  // input color array
  colorArray: ['#fff', '#000']
};

function gradstop(options) {
  options = _extends({}, defaultOptions, options);
  (0, _utils.handleErrors)(options);
  var stops = (0, _utils.getStops)(options);
  return stops;
}

module.exports = gradstop;

/***/ }),

/***/ "./node_modules/gradstop/dist/utils.js_uiComponentLibraryReact":
/*!*********************************************!*\
  !*** ./node_modules/gradstop/dist/utils.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var handleErrors = exports.handleErrors = function handleErrors(options) {
  var inputFormat = options.inputFormat,
      stops = options.stops,
      colorArray = options.colorArray;


  if (typeof inputFormat !== 'string') {
    throw 'inputFormat should be a string';
  }

  var supportedFormats = ['hex', 'rgb', 'hsl'];
  var isValidFormat = supportedFormats.indexOf(inputFormat.toLowerCase()) !== -1;
  if (!isValidFormat) {
    throw 'Invalid inputFormat value, supported: hex, rgb and hsl';
  }

  if (!Number.isInteger(stops)) {
    throw 'stops should be an integer';
  }

  if (!Array.isArray(colorArray) || !colorArray.every(function (item) {
    return typeof item === 'string';
  })) {
    throw 'colorArray should be an array of color strings';
  }

  if (stops < colorArray.length) {
    throw 'Number of stops cannot be less than colorArray.length';
  }
};

var hexToRgb = exports.hexToRgb = function hexToRgb(hex) {
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);

  var _result$map = result.map(function (val) {
    return parseInt(val, 16);
  }),
      _result$map2 = _slicedToArray(_result$map, 4),
      r = _result$map2[1],
      g = _result$map2[2],
      b = _result$map2[3];

  return result ? { r: r, g: g, b: b } : null;
};

// if hex and defined as #fff then convert it to standard 7 letter format #ffffff
var standardizeHexValues = exports.standardizeHexValues = function standardizeHexValues(arrayOfHexStrings) {
  return arrayOfHexStrings.map(function (str) {
    if (str.length === 4) {
      return '#' + (str[1] + str[1] + str[2] + str[2] + str[3] + str[3]);
    } else if (str.length === 7) {
      return str;
    }
  });
};

var extractHEX = exports.extractHEX = function extractHEX(arrayOfHexStrings) {
  return standardizeHexValues(arrayOfHexStrings).map(function (str) {
    return hexToRgb(str);
  });
};

var extractRGB = exports.extractRGB = function extractRGB(arrayOfRGBStrings) {
  return arrayOfRGBStrings.map(function (str) {
    var _str$match = str.match(/\d+/g),
        _str$match2 = _slicedToArray(_str$match, 3),
        r = _str$match2[0],
        g = _str$match2[1],
        b = _str$match2[2];

    return { r: Number(r), g: Number(g), b: Number(b) };
  });
};

var extractHSL = exports.extractHSL = function extractHSL(arrayOfHSLStrings) {
  return arrayOfHSLStrings.map(function (str) {
    var _str$match3 = str.match(/\d+/g),
        _str$match4 = _slicedToArray(_str$match3, 3),
        h = _str$match4[0],
        s = _str$match4[1],
        l = _str$match4[2];

    return { h: Number(h), s: Number(s), l: Number(l) };
  });
};

var getRGBString = exports.getRGBString = function getRGBString(_ref) {
  var r = _ref.r,
      g = _ref.g,
      b = _ref.b;
  return 'rgb(' + r + ', ' + g + ', ' + b + ')';
};
var getHSLString = exports.getHSLString = function getHSLString(_ref2) {
  var h = _ref2.h,
      s = _ref2.s,
      l = _ref2.l;
  return 'hsl(' + h + ', ' + s + '%, ' + l + '%)';
};

// get r,g,b,h,s and l with Bezier interpolation
// https://www.cl.cam.ac.uk/teaching/2000/AGraphHCI/SMEG/node3.html
// Check issue #3 for more info
var bezierInterpolation = function bezierInterpolation(colorTypeChars) {
  return function (colArr, x) {
    var y = 1 - x;
    var v = void 0;
    return colorTypeChars.reduce(function (colorObject, char) {
      if (colArr.length === 2) {
        v = y * colArr[0][char] + x * colArr[1][char];
      } else if (colArr.length === 3) {
        v = Math.pow(y, 2) * colArr[0][char] + 2 * y * x * colArr[1][char] + Math.pow(x, 2) * colArr[2][char];
      } else if (colArr.length === 4) {
        v = Math.pow(y, 3) * colArr[0][char] + 3 * Math.pow(y, 2) * x * colArr[1][char] + 3 * y * Math.pow(x, 2) * colArr[2][char] + Math.pow(x, 3) * colArr[3][char];
      }
      colorObject[char] = Math.trunc(v);
      return colorObject;
    }, {});
  };
};

var rgbBezierInterpolation = bezierInterpolation(['r', 'g', 'b']);
var hslBezierInterpolation = bezierInterpolation(['h', 's', 'l']);

var transformColorStringsToObjects = function transformColorStringsToObjects(options) {
  switch (options.inputFormat) {
    case 'hex':
      return extractHEX(options.colorArray);
    case 'rgb':
      return extractRGB(options.colorArray);
    case 'hsl':
      return extractHSL(options.colorArray);
  }
};

var stopsGenerator = function stopsGenerator(options) {
  var outputArray = [];
  var increment = 1.0 / (options.stops - 1);

  for (var i = 0; i < options.stops; i++) {
    if (options.inputFormat === 'hex' || options.inputFormat === 'rgb') {
      var rgbObject = rgbBezierInterpolation(options.colorArray, increment * i);
      outputArray.push(getRGBString(rgbObject));
    } else if (options.inputFormat === 'hsl') {
      var hslObject = hslBezierInterpolation(options.colorArray, increment * i);
      outputArray.push(getHSLString(hslObject));
    }
  }

  return outputArray;
};

var getStops = exports.getStops = function getStops(options) {
  var colorArray = transformColorStringsToObjects(options);
  var optionsWithFormattedColorsValues = _extends({}, options, { colorArray: colorArray });
  return stopsGenerator(optionsWithFormattedColorsValues);
};

/***/ }),

/***/ "./node_modules/gradstop/index.js_uiComponentLibraryReact":
/*!****************************************!*\
  !*** ./node_modules/gradstop/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./dist */ "./node_modules/gradstop/dist/index.js_uiComponentLibraryReact");

/***/ })

}]);